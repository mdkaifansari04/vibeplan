{
  "repo_name": "qlio",
  "repo_url": "https://github.com/mdkaifansari04/qlio",
  "branch": "main",
  "stats": {
    "total_files": 120,
    "code_files": 104,
    "analyzed_files": 104,
    "skipped_dirs": [
      "node_modules",
      "dist",
      "build",
      ".git",
      ".next",
      "coverage",
      ".nuxt",
      "vendor",
      "__pycache__",
      ".pytest_cache",
      ".vscode",
      ".idea",
      "target",
      "bin",
      "obj",
      ".gradle",
      ".cache",
      ".expo",
      ".turbo",
      ".parcel-cache"
    ],
    "included_extensions": [
      ".js",
      ".ts",
      ".jsx",
      ".tsx",
      ".mjs",
      ".cjs",
      ".py",
      ".java",
      ".go",
      ".rb",
      ".php",
      ".cpp",
      ".c",
      ".cs",
      ".swift",
      ".kt",
      ".rs",
      ".dart",
      ".scala",
      ".html",
      ".css",
      ".scss",
      ".json",
      ".yaml",
      ".yml",
      ".md"
    ]
  },
  "files": [
    {
      "file_path": "README.md",
      "relative_path": "README.md",
      "language": "markdown",
      "imports": [],
      "exports": [],
      "classes": [],
      "functions": [],
      "variables": [],
      "description": "Markdown documentation file",
      "lines_of_code": 206,
      "metadata": {
        "size_bytes": 4393,
        "last_modified": "2025-10-07T19:50:38.718Z"
      },
      "analysis_enhanced": {
        "complexity_score": 0,
        "detected_issues": [],
        "semantic_tags": [
          "markdown",
          "caching",
          "background-jobs"
        ],
        "needs_ai_summary": false,
        "priority": "low",
        "summary_type": "rule-based",
        "code_snippet": "# ⚙️ Qlio — Asynchronous Script Execution Engine\n\nQlio is a scalable, full-stack system for executing shell commands asynchronously on a **remote job runner** with real-time logs, priority queues, retry handling, and concurrency support — inspired by tools like **BullMQ**, **Sidekiq**, and frontend UX inspired by **Render.com**.\n\n> Built from scratch. Queue system, worker engine, job tracker — all hand-crafted.  \n> Designed for performance, resilience, and developer control.\n\n---\n\n## 🧠 Use Case\n\n- Need to execute shell commands/scripts in the background?\n- Want to handle long-running or unreliable jobs with retries?\n- Need real-time output streaming like Render or Railway?\n- Want to build a Sidekiq/BullMQ-type infra by yourself?\n\n💥 **Qlio does that. From scratch.**\n\n---\n\n## 🚀 Features\n\n✅ **Remote Job Execution** (over HTTP + WebSocket)  \n✅ **Priority Queues** (high-priority jobs get picked first)  \n✅ **Multiple Worker Support** (true concurrency)  \n✅ **Retry with Delay** & Retry Queue  \n✅ **Real-time Log Streaming** (WebSocket)  \n✅ **Script with Parameters Support**  \n✅ **Process Termination on Cancel**  \n✅ **Persistent DB (Postgres)** for job metadata  \n✅ **Race Condition Handling**  \n✅ **Queue Offloading for Heavy Tasks**  \n✅ **Frontend built with Next.js + Tailwind** (Render-like UX)\n\n---\n\n## 🧱 Architecture Overview\n\n<p align=\"center\">\n  <img src=\".github/images/architecture.png\" alt=\"Architecture Diagram\" width=\"700\"/>\n  <br/>\n  <em>Qlio system architecture — manager, queue, worker, and real-time feedback loop.</em>\n</p>\n\n- Redis: shared queue between manager & worker\n- Postgres: job persistence\n- WebSocket: real-time logs\n\n---\n\n## 🧑‍💻 Tech Stack\n\n| Layer       | Stack                                |\n| ----------- | ------------------------------------ |\n| Frontend    | Next.js, TailwindCSS                 |\n| Job Manager | Hono (Node.js), Redis, Prisma        |\n| Worker      | Node.js, Redis, Spawn, WebSocket     |\n| Queue       | Custom-built using Redi",
        "full_content": "# ⚙️ Qlio — Asynchronous Script Execution Engine\n\nQlio is a scalable, full-stack system for executing shell commands asynchronously on a **remote job runner** with real-time logs, priority queues, retry handling, and concurrency support — inspired by tools like **BullMQ**, **Sidekiq**, and frontend UX inspired by **Render.com**.\n\n> Built from scratch. Queue system, worker engine, job tracker — all hand-crafted.  \n> Designed for performance, resilience, and developer control.\n\n---\n\n## 🧠 Use Case\n\n- Need to execute shell commands/scripts in the background?\n- Want to handle long-running or unreliable jobs with retries?\n- Need real-time output streaming like Render or Railway?\n- Want to build a Sidekiq/BullMQ-type infra by yourself?\n\n💥 **Qlio does that. From scratch.**\n\n---\n\n## 🚀 Features\n\n✅ **Remote Job Execution** (over HTTP + WebSocket)  \n✅ **Priority Queues** (high-priority jobs get picked first)  \n✅ **Multiple Worker Support** (true concurrency)  \n✅ **Retry with Delay** & Retry Queue  \n✅ **Real-time Log Streaming** (WebSocket)  \n✅ **Script with Parameters Support**  \n✅ **Process Termination on Cancel**  \n✅ **Persistent DB (Postgres)** for job metadata  \n✅ **Race Condition Handling**  \n✅ **Queue Offloading for Heavy Tasks**  \n✅ **Frontend built with Next.js + Tailwind** (Render-like UX)\n\n---\n\n## 🧱 Architecture Overview\n\n<p align=\"center\">\n  <img src=\".github/images/architecture.png\" alt=\"Architecture Diagram\" width=\"700\"/>\n  <br/>\n  <em>Qlio system architecture — manager, queue, worker, and real-time feedback loop.</em>\n</p>\n\n- Redis: shared queue between manager & worker\n- Postgres: job persistence\n- WebSocket: real-time logs\n\n---\n\n## 🧑‍💻 Tech Stack\n\n| Layer       | Stack                                |\n| ----------- | ------------------------------------ |\n| Frontend    | Next.js, TailwindCSS                 |\n| Job Manager | Hono (Node.js), Redis, Prisma        |\n| Worker      | Node.js, Redis, Spawn, WebSocket     |\n| Queue       | Custom-built using Redis             |\n| DB          | PostgreSQL (via Prisma ORM)          |\n| Deploy      | Vercel (Frontend) + Render (Backend) |\n\n---\n\n## 📦 Repository Structure\n\n```\nqlio/\n│   ├── frontend/       # Next.js client\n│   ├── job-manager/    # API + queue handler\n│   └── job-worker/     # Job execution engine\n```\n\n---\n\n## ⚙️ Environment Variables\n\n### Frontend `.env`\n\n```env\nNEXT_PUBLIC_HOST_URL=https://qlio-pprb.onrender.com/api/v1\nNEXT_PUBLIC_SOCKET_URL=https://qlio-pprb.onrender.com\n```\n\n### Job Manager `.env`\n\n```env\nDATABASE_URL=your_postgres_url\nPORT=8080\nNODE_ENV=development\nJWT_SECRET=jwtsecretforqliowebapp\nREDIS_HOST=your_redis_url\nFRONTEND_URL=https://qlio-one.vercel.app\nJOB_WORKER_URL=https://qlio-job-worker.onrender.com\n```\n\n### Job Worker `.env`\n\n```env\nDATABASE_URL=your_postgres_url\nJOB_MANGER_SOCKET_URL=ws://localhost:8080\nREDIS_HOST=your_redis_url\nPORT=8081\n```\n\n---\n\n## 🛠️ Getting Started\n\n### 🖼 Frontend (Next.js)\n\n```bash\ncd apps/frontend\npnpm install\npnpm dev\n# or npm run dev\n```\n\n### ⚙️ Job Manager (API Server)\n\n```bash\ncd apps/job-manager\npnpm install\npnpm dev\n# or npm run dev\n```\n\n### 🔨 Job Worker (Executor)\n\n```bash\ncd apps/job-worker\npnpm install\npnpm dev\n# or npm run dev\n```\n\n---\n\n## 🧪 Scripts\n\n### Start Frontend Sever\n\n```bash\n    cd frontend\n    npm install\n    npm run dev\n```\n\n### Job Manager Server\n\n```bash\n    cd job-manager\n    pnpm install\n    pnpm run dev\n```\n\n### Job Worker Server\n\n```bash\n    cd job-worker\n    pnpm install\n    pnpm run dev\n```\n\n---\n\n## 🔍 Testing\n\n> Functional testing done via real job runs and log validation\n\n🧪 Includes:\n\n- Retry logic\n- Job queue consumption\n- Race condition protection\n- Cancel job mid-execution\n- Real-time log streaming via WebSocket\n\n---\n\n## 🌐 Live URLs\n\n- **Frontend**: [qlio-one.vercel.app](https://qlio-one.vercel.app)\n- **API Server**: [qlio-pprb.onrender.com](https://qlio-pprb.onrender.com)\n- **Worker**: [qlio-job-worker.onrender.com](https://qlio-job-worker.onrender.com)\n\n---\n\n## 📅 Future Improvements\n\n- [ ] Docker & CI/CD setup\n- [ ] CLI interface\n\n---\n\n## 📜 License\n\nMIT — do whatever you want, just don’t resell it as yours.\n\n---\n\n## ✍️ Author\n\n**Md Kaif Ansari**\nBuilt with love, pain, sleep deprivation & passion.\n[@mdkaifansari04](https://github.com/mdkaifansari04)\n"
      }
    },
    {
      "file_path": "frontend/README.md",
      "relative_path": "frontend/README.md",
      "language": "markdown",
      "imports": [],
      "exports": [],
      "classes": [],
      "functions": [],
      "variables": [],
      "description": "Markdown documentation file",
      "lines_of_code": 37,
      "metadata": {
        "size_bytes": 1450,
        "last_modified": "2025-10-07T19:50:38.718Z"
      },
      "analysis_enhanced": {
        "complexity_score": 0,
        "detected_issues": [],
        "semantic_tags": [
          "markdown"
        ],
        "needs_ai_summary": false,
        "priority": "low",
        "summary_type": "rule-based",
        "code_snippet": "This is a [Next.js](https://nextjs.org) project bootstrapped with [`create-next-app`](https://nextjs.org/docs/app/api-reference/cli/create-next-app).\n\n## Getting Started\n\nFirst, run the development server:\n\n```bash\nnpm run dev\n# or\nyarn dev\n# or\npnpm dev\n# or\nbun dev\n```\n\nOpen [http://localhost:3000](http://localhost:3000) with your browser to see the result.\n\nYou can start editing the page by modifying `app/page.tsx`. The page auto-updates as you edit the file.\n\nThis project uses [`next/font`](https://nextjs.org/docs/app/building-your-application/optimizing/fonts) to automatically optimize and load [Geist](https://vercel.com/font), a new font family for Vercel.\n\n## Learn More\n\nTo learn more about Next.js, take a look at the following resources:\n\n- [Next.js Documentation](https://nextjs.org/docs) - learn about Next.js features and API.\n- [Learn Next.js](https://nextjs.org/learn) - an interactive Next.js tutorial.\n\nYou can check out [the Next.js GitHub repository](https://github.com/vercel/next.js) - your feedback and contributions are welcome!\n\n## Deploy on Vercel\n\nThe easiest way to deploy your Next.js app is to use the [Vercel Platform](https://vercel.com/new?utm_medium=default-template&filter=next.js&utm_source=create-next-app&utm_campaign=create-next-app-readme) from the creators of Next.js.\n\nCheck out our [Next.js deployment documentation](https://nextjs.org/docs/app/building-your-application/deploying) for more details.\n",
        "full_content": "This is a [Next.js](https://nextjs.org) project bootstrapped with [`create-next-app`](https://nextjs.org/docs/app/api-reference/cli/create-next-app).\n\n## Getting Started\n\nFirst, run the development server:\n\n```bash\nnpm run dev\n# or\nyarn dev\n# or\npnpm dev\n# or\nbun dev\n```\n\nOpen [http://localhost:3000](http://localhost:3000) with your browser to see the result.\n\nYou can start editing the page by modifying `app/page.tsx`. The page auto-updates as you edit the file.\n\nThis project uses [`next/font`](https://nextjs.org/docs/app/building-your-application/optimizing/fonts) to automatically optimize and load [Geist](https://vercel.com/font), a new font family for Vercel.\n\n## Learn More\n\nTo learn more about Next.js, take a look at the following resources:\n\n- [Next.js Documentation](https://nextjs.org/docs) - learn about Next.js features and API.\n- [Learn Next.js](https://nextjs.org/learn) - an interactive Next.js tutorial.\n\nYou can check out [the Next.js GitHub repository](https://github.com/vercel/next.js) - your feedback and contributions are welcome!\n\n## Deploy on Vercel\n\nThe easiest way to deploy your Next.js app is to use the [Vercel Platform](https://vercel.com/new?utm_medium=default-template&filter=next.js&utm_source=create-next-app&utm_campaign=create-next-app-readme) from the creators of Next.js.\n\nCheck out our [Next.js deployment documentation](https://nextjs.org/docs/app/building-your-application/deploying) for more details.\n"
      }
    },
    {
      "file_path": "frontend/app/api/logout/route.ts",
      "relative_path": "frontend/app/api/logout/route.ts",
      "language": "typescript",
      "imports": [
        "next/server",
        "next/headers"
      ],
      "exports": [
        "GET"
      ],
      "classes": [],
      "functions": [
        {
          "name": "GET",
          "parameters": [],
          "returnType": "unknown",
          "isAsync": true,
          "isExported": true
        }
      ],
      "variables": [],
      "description": "**Technical Summary**\n\n### Purpose\nThis TypeScript API endpoint, located in `frontend/app/api/logout/route.ts`, handles HTTP requests for logging out a user. It clears the user's session token and returns a JSON response indicating successful logout.\n\n### Components\n\n* **GET() function**: The main function responsible for handling HTTP GET requests for logout. It clears the user's session token and returns a JSON response.\n\n### Dependencies\n\n* **next/server**: A module from the Next.js framework, providing functionality for handling HTTP requests and responses.\n* **next/headers**: A module from the Next.js framework, providing functionality for managing HTTP headers, including cookies.\n\n### Issues\nNone detected.\n\n### Impact\nThis API endpoint is crucial for logging out users and",
      "lines_of_code": 14,
      "metadata": {
        "size_bytes": 334,
        "last_modified": "2025-10-07T19:50:38.718Z"
      },
      "analysis_enhanced": {
        "complexity_score": 3,
        "detected_issues": [
          {
            "type": "best-practice",
            "severity": "medium",
            "description": "Missing error handling for async operations",
            "category": "missing-error-handling"
          }
        ],
        "semantic_tags": [
          "typescript",
          "api",
          "nextjs"
        ],
        "needs_ai_summary": true,
        "priority": "medium",
        "summary_type": "ai-generated",
        "code_snippet": "import { NextResponse } from \"next/server\" // if using app/ directory\nimport { cookies } from \"next/headers\"\n\nexport async function GET() {\n  const cookieStore = await cookies()\n  cookieStore.set(\"token\", \"\", {\n    path: \"/\",\n    expires: new Date(0),\n    httpOnly: true,\n  })\n\n  return NextResponse.json({ message: \"Logged out\" })\n}\n",
        "full_content": "import { NextResponse } from \"next/server\" // if using app/ directory\nimport { cookies } from \"next/headers\"\n\nexport async function GET() {\n  const cookieStore = await cookies()\n  cookieStore.set(\"token\", \"\", {\n    path: \"/\",\n    expires: new Date(0),\n    httpOnly: true,\n  })\n\n  return NextResponse.json({ message: \"Logged out\" })\n}\n"
      }
    },
    {
      "file_path": "frontend/app/dashboard/create-job/page.tsx",
      "relative_path": "frontend/app/dashboard/create-job/page.tsx",
      "language": "typescript",
      "imports": [
        "react",
        "react",
        "next/navigation",
        "@/components/ui/button",
        "@/components/ui/card",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/components/ui/select",
        "lucide-react",
        "@/hooks/use-toast",
        "@/hooks/mutation",
        "@/components/ui/textarea",
        "@/lib/utils",
        "@/provider/socket-provider",
        "@/provider/auth-provider",
        "@/components/ui/switch"
      ],
      "exports": [],
      "classes": [],
      "functions": [
        {
          "name": "ScriptParamsInput",
          "parameters": [
            "{\n  onChange,\n}"
          ],
          "returnType": "unknown",
          "isAsync": false,
          "isExported": false
        }
      ],
      "variables": [
        "page"
      ],
      "description": "**Purpose:** \nThis TypeScript code file, located at `frontend/app/dashboard/create-job/page.tsx`, is a React UI component responsible for creating a new job for execution. It allows users to configure and submit a job by providing various input fields, including command, priority, timeout, parameters, and killability.\n\n**Components:**\n\n1. **`page` function**: The main component function that handles the creation of a new job. It uses various hooks and components to manage the job creation process.\n\n**Dependencies:**\n\n1. **`react`**: The React library is used for building the UI component.\n2. **`next/navigation`**: The Next.js navigation library is used for client-side routing.\n3. **`@/components",
      "lines_of_code": 283,
      "metadata": {
        "size_bytes": 9213,
        "last_modified": "2025-10-07T19:50:38.719Z"
      },
      "analysis_enhanced": {
        "complexity_score": 12,
        "detected_issues": [
          {
            "type": "best-practice",
            "severity": "medium",
            "description": "Missing error handling for async operations",
            "category": "missing-error-handling"
          }
        ],
        "semantic_tags": [
          "typescript",
          "react",
          "nextjs",
          "routing",
          "authentication",
          "background-jobs"
        ],
        "needs_ai_summary": true,
        "priority": "medium",
        "summary_type": "ai-generated",
        "code_snippet": "\"use client\"\n\nimport type React from \"react\"\n\nimport { useState } from \"react\"\nimport { useRouter } from \"next/navigation\"\nimport { Button } from \"@/components/ui/button\"\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { Input } from \"@/components/ui/input\"\nimport { Label } from \"@/components/ui/label\"\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/components/ui/select\"\nimport { Plus, Terminal } from \"lucide-react\"\nimport { useToast } from \"@/hooks/use-toast\"\nimport { useCreateJob } from \"@/hooks/mutation\"\nimport { Textarea } from \"@/components/ui/textarea\"\nimport { getErrorMessage } from \"@/lib/utils\"\nimport { useSocket } from \"@/provider/socket-provider\"\nimport withAuth from \"@/provider/auth-provider\"\nimport { Switch } from \"@/components/ui/switch\"\n\nconst page = () => {\n  const router = useRouter()\n  const { toast } = useToast()\n  const { mutate: createJobMutation, isPending: isSubmitting } = useCreateJob()\n  const socket = useSocket()\n  const [formData, setFormData] = useState({\n    command: \"\",\n    priority: 3,\n    timeout: 300000,\n    params: [\"\"],\n    isKillable: true,\n  })\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault()\n\n    createJobMutation(\n      {\n        command: formData.command,\n        priority: Number(formData.priority),\n        timeout: Number(formData.timeout),\n        params: formData.params,\n        isKillable: formData.isKillable,\n      },\n      {\n        onSuccess: (data) => {\n          toast({\n            title: \"Job Created\",\n            description:\n              \"Your job has been successfully created and queued for execution.\",\n          })\n          router.push(`/dashboard/jobs/${data.id}`)\n        },\n        onError: (error) => {\n          toast({\n            title: \"Error\",\n            description: getErrorMessage(error),\n            variant: \"destructive\",\n          })\n        },\n      }\n    )\n  }\n\n  const handleInputChang",
        "full_content": "\"use client\"\n\nimport type React from \"react\"\n\nimport { useState } from \"react\"\nimport { useRouter } from \"next/navigation\"\nimport { Button } from \"@/components/ui/button\"\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { Input } from \"@/components/ui/input\"\nimport { Label } from \"@/components/ui/label\"\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/components/ui/select\"\nimport { Plus, Terminal } from \"lucide-react\"\nimport { useToast } from \"@/hooks/use-toast\"\nimport { useCreateJob } from \"@/hooks/mutation\"\nimport { Textarea } from \"@/components/ui/textarea\"\nimport { getErrorMessage } from \"@/lib/utils\"\nimport { useSocket } from \"@/provider/socket-provider\"\nimport withAuth from \"@/provider/auth-provider\"\nimport { Switch } from \"@/components/ui/switch\"\n\nconst page = () => {\n  const router = useRouter()\n  const { toast } = useToast()\n  const { mutate: createJobMutation, isPending: isSubmitting } = useCreateJob()\n  const socket = useSocket()\n  const [formData, setFormData] = useState({\n    command: \"\",\n    priority: 3,\n    timeout: 300000,\n    params: [\"\"],\n    isKillable: true,\n  })\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault()\n\n    createJobMutation(\n      {\n        command: formData.command,\n        priority: Number(formData.priority),\n        timeout: Number(formData.timeout),\n        params: formData.params,\n        isKillable: formData.isKillable,\n      },\n      {\n        onSuccess: (data) => {\n          toast({\n            title: \"Job Created\",\n            description:\n              \"Your job has been successfully created and queued for execution.\",\n          })\n          router.push(`/dashboard/jobs/${data.id}`)\n        },\n        onError: (error) => {\n          toast({\n            title: \"Error\",\n            description: getErrorMessage(error),\n            variant: \"destructive\",\n          })\n        },\n      }\n    )\n  }\n\n  const handleInputChange = (field: string, value: string) => {\n    setFormData((prev) => ({ ...prev, [field]: value }))\n  }\n\n  const handleParamsChange = (params: string[]) => {\n    setFormData((prev) => ({ ...prev, params }))\n  }\n\n  const handleKillableChange = (value: boolean) => {\n    setFormData((prev) => ({ ...prev, isKillable: value }))\n  }\n\n  return (\n    <div className=\"space-y-6 p-6\">\n      {/* Header */}\n      <div>\n        <h1 className=\"text-3xl font-bold\">Create New Job</h1>\n        <p className=\"text-muted-foreground\">\n          Configure and submit a new job for execution\n        </p>\n      </div>\n\n      {/* Form */}\n      <div className=\"max-w-2xl\">\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"flex items-center gap-2\">\n              <Plus className=\"h-5 w-5\" />\n              Job Configuration\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            <form onSubmit={handleSubmit} className=\"space-y-6\">\n              {/* Command */}\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"command\">Command *</Label>\n                <Textarea\n                  id=\"command\"\n                  placeholder=\"Enter your shell command here...\"\n                  value={formData.command}\n                  onChange={(e) => handleInputChange(\"command\", e.target.value)}\n                  className=\"font-mono min-h-[100px]\"\n                  required\n                />\n                <p className=\"text-xs text-muted-foreground\">\n                  Enter the shell command you want to execute. Use proper shell\n                  syntax.\n                </p>\n              </div>\n\n              <ScriptParamsInput onChange={handleParamsChange} />\n\n              {/* Priority */}\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"priority\">Priority</Label>\n                <Select\n                  value={formData.priority.toString()}\n                  onValueChange={(value) =>\n                    handleInputChange(\"priority\", value)\n                  }\n                >\n                  <SelectTrigger>\n                    <SelectValue placeholder=\"Select priority\" />\n                  </SelectTrigger>\n                  <SelectContent>\n                    <SelectItem value=\"1\">1 - High</SelectItem>\n                    <SelectItem value=\"2\">2 - Normal</SelectItem>\n                    <SelectItem value=\"3\">3 - Low</SelectItem>\n                  </SelectContent>\n                </Select>\n                <p className=\"text-xs text-muted-foreground\">\n                  Higher priority jobs are executed first when resources are\n                  available.\n                </p>\n              </div>\n\n              {/* Timeout */}\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"timeout\">Timeout (milliseconds)</Label>\n                <Input\n                  id=\"timeout\"\n                  type=\"number\"\n                  placeholder=\"300000\"\n                  value={formData.timeout.toString()}\n                  onChange={(e) => handleInputChange(\"timeout\", e.target.value)}\n                  min=\"1000\"\n                  max=\"3600000\"\n                />\n                <p className=\"text-xs text-muted-foreground\">\n                  Maximum execution time in milliseconds (1000ms = 1 second).\n                  Max: 1 hour.\n                </p>\n              </div>\n\n              {/* Preview */}\n              <div className=\"space-y-2\">\n                <Label>Preview</Label>\n                <div className=\"rounded-md bg-muted p-4 space-y-2\">\n                  <div className=\"flex items-center gap-2 text-sm\">\n                    <Terminal className=\"h-4 w-4\" />\n                    <span className=\"font-medium\">Command:</span>\n                    <span className=\"font-mono text-xs bg-background px-2 py-1 rounded\">\n                      {formData.command || \"No command entered\"}\n                    </span>\n                  </div>\n                  <div className=\"flex items-center gap-2 text-sm\">\n                    <Terminal className=\"h-4 w-4\" />\n                    <span className=\"font-medium\">Parameters:</span>\n                    <span className=\"font-mono text-xs bg-background px-2 py-1 rounded\">\n                      {formData.params.join(\" \")}\n                    </span>\n                  </div>\n                  <div className=\"text-sm text-muted-foreground\">\n                    Priority: {formData.priority} | Timeout:{\" \"}\n                    {formData.timeout / 1000}s\n                  </div>\n                </div>\n              </div>\n\n              {/* Killable */}\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"isKillable\">Killable</Label>\n                <Switch\n                  id=\"isKillable\"\n                  checked={formData.isKillable}\n                  onCheckedChange={handleKillableChange}\n                />\n              </div>\n\n              {/* Submit */}\n              <div className=\"flex gap-4\">\n                <Button\n                  type=\"submit\"\n                  disabled={isSubmitting || !formData.command.trim()}\n                  className=\"gap-2\"\n                >\n                  {isSubmitting ? (\n                    <>\n                      <div className=\"h-4 w-4 animate-spin rounded-full border-2 border-current border-t-transparent\" />\n                      Creating...\n                    </>\n                  ) : (\n                    <>\n                      <Plus className=\"h-4 w-4\" />\n                      Create Job\n                    </>\n                  )}\n                </Button>\n                <Button\n                  type=\"button\"\n                  variant=\"outline\"\n                  onClick={() => router.back()}\n                >\n                  Cancel\n                </Button>\n              </div>\n            </form>\n          </CardContent>\n        </Card>\n      </div>\n    </div>\n  )\n}\n\nfunction ScriptParamsInput({\n  onChange,\n}: {\n  onChange: (params: string[]) => void\n}) {\n  const [params, setParams] = useState<string[]>([\"\"])\n\n  const updateParam = (index: number, value: string) => {\n    const updated = [...params]\n    updated[index] = value\n    setParams(updated)\n    onChange(updated.filter((p) => p.trim())) // send only valid ones\n  }\n\n  const addParam = () => {\n    setParams([...params, \"\"])\n  }\n\n  const removeParam = (index: number) => {\n    const updated = params.filter((_, i) => i !== index)\n    setParams(updated)\n    onChange(updated.filter((p) => p.trim()))\n  }\n\n  return (\n    <div className=\"space-y-2\">\n      {params.map((param, index) => (\n        <div key={index} className=\"flex items-center gap-2\">\n          <Input\n            placeholder={`${index + 1} value`}\n            value={param}\n            onChange={(e) => updateParam(index, e.target.value)}\n          />\n          {params.length > 1 && (\n            <Button variant=\"destructive\" onClick={() => removeParam(index)}>\n              Remove\n            </Button>\n          )}\n        </div>\n      ))}\n      <Button type=\"button\" variant=\"secondary\" onClick={addParam}>\n        + Add Parameter\n      </Button>\n    </div>\n  )\n}\n\nexport default withAuth(page)\n"
      }
    },
    {
      "file_path": "frontend/app/dashboard/jobs/[id]/page.tsx",
      "relative_path": "frontend/app/dashboard/jobs/[id]/page.tsx",
      "language": "typescript",
      "imports": [
        "react",
        "date-fns",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/card",
        "@/components/ui/scroll-area",
        "lucide-react",
        "@/hooks/data-type",
        "next/navigation",
        "@/hooks/queries",
        "@/components/shared/wrapper",
        "@/provider/socket-provider",
        "@/provider/auth-provider",
        "@/constants"
      ],
      "exports": [],
      "classes": [],
      "functions": [
        {
          "name": "getStatusBadge",
          "parameters": [
            "status"
          ],
          "returnType": "unknown",
          "isAsync": false,
          "isExported": false
        },
        {
          "name": "formatTimestamp",
          "parameters": [
            "timestamp"
          ],
          "returnType": "unknown",
          "isAsync": false,
          "isExported": false
        },
        {
          "name": "JobCancel",
          "parameters": [
            "{ handleCancelJob }"
          ],
          "returnType": "unknown",
          "isAsync": false,
          "isExported": false
        },
        {
          "name": "OutputLog",
          "parameters": [
            "{ log, index }"
          ],
          "returnType": "unknown",
          "isAsync": false,
          "isExported": false
        },
        {
          "name": "JobRunningStatus",
          "parameters": [],
          "returnType": "unknown",
          "isAsync": false,
          "isExported": false
        }
      ],
      "variables": [
        "page"
      ],
      "description": "**Technical Summary**\n\n### Purpose\nThe provided code file is a React UI component located at `frontend/app/dashboard/jobs/[id]/page.tsx`. It displays a job's details, including its status, output logs, and provides functionality to cancel the job.\n\n### Components\nThe file contains the following key functions:\n\n1. `getStatusBadge`: Returns a badge component with a status icon and text based on the job's status.\n2. `formatTimestamp`: Formats a timestamp string into a human-readable format using the `date-fns` library.\n3. `page`: The main function that renders the job details page.\n\n### Dependencies\nThe file depends on the following external modules and APIs:\n\n1. `react`: The React library for building",
      "lines_of_code": 383,
      "metadata": {
        "size_bytes": 11942,
        "last_modified": "2025-10-07T19:50:38.719Z"
      },
      "analysis_enhanced": {
        "complexity_score": 22,
        "detected_issues": [],
        "semantic_tags": [
          "typescript",
          "react",
          "nextjs",
          "authentication",
          "background-jobs"
        ],
        "needs_ai_summary": true,
        "priority": "high",
        "summary_type": "ai-generated",
        "code_snippet": "\"use client\"\n\nimport { useState, useEffect, useRef } from \"react\"\nimport { format } from \"date-fns\"\nimport { Badge } from \"@/components/ui/badge\"\nimport { Button } from \"@/components/ui/button\"\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { ScrollArea } from \"@/components/ui/scroll-area\"\nimport {\n  Activity,\n  AlertCircle,\n  Calendar,\n  CheckCircle,\n  Clock,\n  Cpu,\n  Database,\n  Loader2,\n  MemoryStick,\n  Play,\n  Terminal,\n  X,\n  XCircle,\n} from \"lucide-react\"\nimport { Job, JobResponse, JobStreamResponse } from \"@/hooks/data-type\"\nimport { useParams } from \"next/navigation\"\nimport { getJobById } from \"@/hooks/queries\"\nimport { DefaultLoader } from \"@/components/shared/wrapper\"\nimport { useSocket } from \"@/provider/socket-provider\"\nimport withAuth from \"@/provider/auth-provider\"\nimport { STATUS } from \"@/constants\"\n\nfunction getStatusBadge(status: Job[\"status\"]) {\n  const variants = {\n    PENDING: {\n      variant: \"secondary\" as const,\n      icon: Clock,\n      color: \"text-gray-500\",\n    },\n    RUNNING: {\n      variant: \"default\" as const,\n      icon: Loader2,\n      color: \"text-yellow-500\",\n    },\n    SUCCESS: {\n      variant: \"default\" as const,\n      icon: CheckCircle,\n      color: \"text-green-500\",\n    },\n    FAILED: {\n      variant: \"destructive\" as const,\n      icon: XCircle,\n      color: \"text-red-500\",\n    },\n    CANCELED: { variant: \"outline\" as const, icon: X, color: \"text-slate-500\" },\n  }\n\n  const config = variants[status as keyof typeof variants]\n  const Icon = config.icon\n\n  return (\n    <Badge variant={config.variant} className=\"flex items-center gap-1\">\n      <Icon\n        className={`h-3 w-3 ${config.color} ${\n          status === \"RUNNING\" ? \"animate-spin\" : \"\"\n        }`}\n      />\n      {status}\n    </Badge>\n  )\n}\n\nfunction formatTimestamp(timestamp: string) {\n  return format(new Date(timestamp), \"dd MMM HH:mm:ss\")\n}\n\nconst page = () => {\n  const scrollAreaRef = useRef<HTMLDivElement>(null)\n  const [outputLo",
        "full_content": "\"use client\"\n\nimport { useState, useEffect, useRef } from \"react\"\nimport { format } from \"date-fns\"\nimport { Badge } from \"@/components/ui/badge\"\nimport { Button } from \"@/components/ui/button\"\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { ScrollArea } from \"@/components/ui/scroll-area\"\nimport {\n  Activity,\n  AlertCircle,\n  Calendar,\n  CheckCircle,\n  Clock,\n  Cpu,\n  Database,\n  Loader2,\n  MemoryStick,\n  Play,\n  Terminal,\n  X,\n  XCircle,\n} from \"lucide-react\"\nimport { Job, JobResponse, JobStreamResponse } from \"@/hooks/data-type\"\nimport { useParams } from \"next/navigation\"\nimport { getJobById } from \"@/hooks/queries\"\nimport { DefaultLoader } from \"@/components/shared/wrapper\"\nimport { useSocket } from \"@/provider/socket-provider\"\nimport withAuth from \"@/provider/auth-provider\"\nimport { STATUS } from \"@/constants\"\n\nfunction getStatusBadge(status: Job[\"status\"]) {\n  const variants = {\n    PENDING: {\n      variant: \"secondary\" as const,\n      icon: Clock,\n      color: \"text-gray-500\",\n    },\n    RUNNING: {\n      variant: \"default\" as const,\n      icon: Loader2,\n      color: \"text-yellow-500\",\n    },\n    SUCCESS: {\n      variant: \"default\" as const,\n      icon: CheckCircle,\n      color: \"text-green-500\",\n    },\n    FAILED: {\n      variant: \"destructive\" as const,\n      icon: XCircle,\n      color: \"text-red-500\",\n    },\n    CANCELED: { variant: \"outline\" as const, icon: X, color: \"text-slate-500\" },\n  }\n\n  const config = variants[status as keyof typeof variants]\n  const Icon = config.icon\n\n  return (\n    <Badge variant={config.variant} className=\"flex items-center gap-1\">\n      <Icon\n        className={`h-3 w-3 ${config.color} ${\n          status === \"RUNNING\" ? \"animate-spin\" : \"\"\n        }`}\n      />\n      {status}\n    </Badge>\n  )\n}\n\nfunction formatTimestamp(timestamp: string) {\n  return format(new Date(timestamp), \"dd MMM HH:mm:ss\")\n}\n\nconst page = () => {\n  const scrollAreaRef = useRef<HTMLDivElement>(null)\n  const [outputLogs, setOutputLogs] = useState<JobResponse[]>([])\n  const [isStreaming, setIsStreaming] = useState(false)\n  const [implicitStatus, setImplicitStatus] = useState<Job[\"status\"] | null>(\n    null\n  )\n  const socket = useSocket()\n\n  const { id } = useParams()\n  const { data: job, isLoading } = getJobById(id as string)\n\n  // Auto-scroll to bottom when new output is added\n  useEffect(() => {\n    if (scrollAreaRef.current) {\n      const scrollContainer = scrollAreaRef.current.querySelector(\n        \"[data-radix-scroll-area-viewport]\"\n      )\n      if (scrollContainer) {\n        scrollContainer.scrollTop = scrollContainer.scrollHeight\n      }\n    }\n  }, [outputLogs])\n\n  const handleCancelJob = () => {\n    if (!job?.id || !socket?.connected) return\n    socket.emit(\"job:cancel\", { jobId: job.id })\n    setImplicitStatus(STATUS.CANCELED)\n    setOutputLogs((prev) => [\n      ...prev,\n      {\n        success: false,\n        response: \"Job canceled\",\n        timestamp: new Date().toISOString(),\n      },\n    ])\n  }\n\n  useEffect(() => {\n    if (!job?.id || !socket?.connected) return\n    if (job.status !== STATUS.PENDING) return\n    socket.emit(\"job:subscribe\", { jobId: job.id, priority: job.priority })\n    setImplicitStatus(STATUS.RUNNING)\n\n    const handleUpdate = (data: JobStreamResponse) => {\n      if (data.jobId === job.id) {\n        if (data.output) {\n          setOutputLogs((prev) => [...prev, data.output])\n        }\n      }\n    }\n\n    const handleDone = (data: JobStreamResponse) => {\n      if (data.jobId === job.id) {\n        setImplicitStatus(data.exitCode === 0 ? STATUS.SUCCESS : STATUS.FAILED)\n        const lastLog = {\n          success: data.exitCode === 0,\n          response:\n            data.exitCode === 0\n              ? \"Your job executed successfully 🎉\"\n              : \"Your job failed 💀\",\n          timestamp: new Date().toISOString(),\n        }\n        setOutputLogs((prev) => [...prev, lastLog])\n      }\n    }\n\n    socket.on(\"job:update\", handleUpdate)\n    socket.on(\"job:done\", handleDone)\n\n    setIsStreaming(true)\n\n    return () => {\n      socket.off(\"job:update\", handleUpdate)\n      socket.off(\"job:done\", handleUpdate)\n      socket.emit(\"job:unsubscribe\", job.id)\n    }\n  }, [job?.id, socket?.connected])\n\n  if (!job && isLoading) return <DefaultLoader className=\"h-screen\" />\n  if (!job)\n    return (\n      <div className=\"flex items-center justify-center h-screen\">\n        Job not found\n      </div>\n    )\n\n  const showStreamingOutput = job.status === STATUS.PENDING && isStreaming\n\n  return (\n    <div className=\"space-y-6 p-6\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <h1 className=\"text-3xl font-bold\">Job Details</h1>\n          <p className=\"text-muted-foreground font-mono\">#{job.id}</p>\n        </div>\n        {getStatusBadge(implicitStatus || job.status)}\n      </div>\n\n      {/* Job Overview */}\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-2\">\n            <Terminal className=\"h-5 w-5\" />\n            Command Execution\n          </CardTitle>\n        </CardHeader>\n        <CardContent className=\"space-y-4\">\n          {/* Command */}\n          <div>\n            <label className=\"text-sm font-medium text-muted-foreground\">\n              Command\n            </label>\n            <div className=\"mt-1 rounded-md bg-muted p-3 font-mono text-sm break-all\">\n              {job.command}\n            </div>\n          </div>\n\n          {/* Metadata Grid */}\n          <div className=\"grid grid-cols-2 gap-4 md:grid-cols-4 lg:grid-cols-6\">\n            <div className=\"space-y-1\">\n              <div className=\"flex items-center gap-1 text-xs text-muted-foreground\">\n                <AlertCircle className=\"h-3 w-3\" />\n                Priority\n              </div>\n              <div className=\"text-sm font-medium\">{job.priority}</div>\n            </div>\n\n            <div className=\"space-y-1\">\n              <div className=\"flex items-center gap-1 text-xs text-muted-foreground\">\n                <Clock className=\"h-3 w-3\" />\n                Timeout\n              </div>\n              <div className=\"text-sm font-medium\">\n                {(job.timeout / 1000).toFixed(0)}s\n              </div>\n            </div>\n\n            <div className=\"space-y-1\">\n              <div className=\"flex items-center gap-1 text-xs text-muted-foreground\">\n                <Activity className=\"h-3 w-3\" />\n                Retries\n              </div>\n              <div className=\"text-sm font-medium\">{job.retries}</div>\n            </div>\n\n            {job.duration && (\n              <div className=\"space-y-1\">\n                <div className=\"flex items-center gap-1 text-xs text-muted-foreground\">\n                  <Calendar className=\"h-3 w-3\" />\n                  Duration\n                </div>\n                <div className=\"text-sm font-medium\">{job.duration}s</div>\n              </div>\n            )}\n\n            {job.cpuUsage && (\n              <div className=\"space-y-1\">\n                <div className=\"flex items-center gap-1 text-xs text-muted-foreground\">\n                  <Cpu className=\"h-3 w-3\" />\n                  CPU\n                </div>\n                <div className=\"text-sm font-medium\">{job.cpuUsage}%</div>\n              </div>\n            )}\n\n            {job.memoryUsage && (\n              <div className=\"space-y-1\">\n                <div className=\"flex items-center gap-1 text-xs text-muted-foreground\">\n                  <MemoryStick className=\"h-3 w-3\" />\n                  Memory\n                </div>\n                <div className=\"text-sm font-medium\">{job.memoryUsage}MB</div>\n              </div>\n            )}\n          </div>\n\n          {/* Additional Info */}\n          <div className=\"grid grid-cols-1 gap-4 md:grid-cols-3\">\n            {job.workerId && (\n              <div className=\"space-y-1\">\n                <div className=\"flex items-center gap-1 text-xs text-muted-foreground\">\n                  <Database className=\"h-3 w-3\" />\n                  Worker ID\n                </div>\n                <div className=\"text-sm font-medium font-mono\">\n                  {job.workerId}\n                </div>\n              </div>\n            )}\n\n            {job.exitCode !== null && (\n              <div className=\"space-y-1\">\n                <div className=\"flex items-center gap-1 text-xs text-muted-foreground\">\n                  <Terminal className=\"h-3 w-3\" />\n                  Exit Code\n                </div>\n                <div className=\"text-sm font-medium\">{job.exitCode}</div>\n              </div>\n            )}\n\n            {job.startedAt && (\n              <div className=\"space-y-1\">\n                <div className=\"flex items-center gap-1 text-xs text-muted-foreground\">\n                  <Play className=\"h-3 w-3\" />\n                  Started At\n                </div>\n                <div className=\"text-sm font-medium\">\n                  {format(new Date(job.startedAt), \"dd MMM yyyy HH:mm:ss\")}\n                </div>\n              </div>\n            )}\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Console Output */}\n      <Card className=\"flex-1\">\n        <CardHeader>\n          <div className=\"flex items-center justify-between\">\n            <CardTitle className=\"flex items-center gap-2\">\n              <Terminal className=\"h-4 w-4\" />\n              Console Output\n            </CardTitle>\n            <Badge variant=\"outline\">{job.output.length} lines</Badge>\n          </div>\n        </CardHeader>\n        <CardContent className=\"p-0\">\n          <ScrollArea className=\"h-[500px] w-full\" ref={scrollAreaRef}>\n            <div className=\"bg-secondary p-4 font-mono text-sm\">\n              {job.output.length === 0 && implicitStatus !== STATUS.PENDING ? (\n                <div className=\"text-gray-700\">No Output logs yet...</div>\n              ) : (\n                job.output.map((log, index) => (\n                  <OutputLog log={log} index={index} />\n                ))\n              )}\n              {implicitStatus === STATUS.RUNNING && <JobRunningStatus />}\n              {showStreamingOutput &&\n                outputLogs.map((log, index) => (\n                  <OutputLog log={log} index={index} />\n                ))}\n            </div>\n          </ScrollArea>\n        </CardContent>\n      </Card>\n\n      {/* Control Panel */}\n      {implicitStatus === STATUS.RUNNING && (\n        <JobCancel handleCancelJob={handleCancelJob} />\n      )}\n    </div>\n  )\n}\n\nfunction JobCancel({ handleCancelJob }: { handleCancelJob: () => void }) {\n  return (\n    <Card>\n      <CardContent className=\"flex items-center justify-between p-4\">\n        <div className=\"flex items-center gap-2\">\n          <Loader2 className=\"h-4 w-4 animate-spin text-yellow-500\" />\n          <span className=\"text-sm\">Job is currently running...</span>\n        </div>\n        <Button\n          variant=\"destructive\"\n          size=\"sm\"\n          onClick={handleCancelJob}\n          className=\"gap-2 cursor-pointer\"\n        >\n          <X className=\"h-4 w-4\" />\n          Cancel Job\n        </Button>\n      </CardContent>\n    </Card>\n  )\n}\n\nfunction OutputLog({ log, index }: { log: JobResponse; index: number }) {\n  return (\n    <div key={index} className=\"flex gap-2 py-0.5\">\n      <span className=\"text-gray-400 shrink-0 select-none\">\n        {formatTimestamp(log?.timestamp || \"\")} ==&gt;\n      </span>\n      <span\n        className={`whitespace-pre-wrap ${\n          log.success ? \"text-gray-100\" : \"text-red-400\"\n        }`}\n      >\n        {log.response.trim()}\n      </span>\n    </div>\n  )\n}\n\nfunction JobRunningStatus() {\n  return (\n    <div className=\"flex gap-2 py-0.5\">\n      <span className=\"text-gray-400 shrink-0\">\n        {formatTimestamp(new Date().toISOString())} ==&gt;\n      </span>\n      <span className=\"text-yellow-400 animate-pulse\">Job is running...</span>\n    </div>\n  )\n}\n\nexport default withAuth(page)\n"
      }
    },
    {
      "file_path": "frontend/app/dashboard/jobs/page.tsx",
      "relative_path": "frontend/app/dashboard/jobs/page.tsx",
      "language": "typescript",
      "imports": [
        "react",
        "next/link",
        "date-fns",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/card",
        "@/components/ui/input",
        "@/components/ui/select",
        "lucide-react",
        "@/hooks/queries",
        "@/components/shared/wrapper",
        "@/components/shared/skeleton",
        "@/hooks/data-type",
        "@/provider/auth-provider"
      ],
      "exports": [],
      "classes": [],
      "functions": [
        {
          "name": "getStatusBadge",
          "parameters": [
            "status"
          ],
          "returnType": "unknown",
          "isAsync": false,
          "isExported": false
        }
      ],
      "variables": [
        "page"
      ],
      "description": "**Purpose:**\nThis TypeScript file, `page.tsx`, is a React UI component responsible for displaying a dashboard for managing and monitoring job executions. It provides features such as searching, filtering by status, and creating new jobs.\n\n**Components:**\n1. `getStatusBadge` function: This function takes a job status as an input and returns a badge component with a corresponding icon and color based on the status.\n2. `page` function: This is the main component of the file, which handles the rendering of the dashboard. It uses the `useState` hook to manage the search query and status filter states. It also uses the `useGetJobs` hook to fetch job data and displays a list of filtered jobs.\n\n**Dependencies:**",
      "lines_of_code": 226,
      "metadata": {
        "size_bytes": 7439,
        "last_modified": "2025-10-07T19:50:38.720Z"
      },
      "analysis_enhanced": {
        "complexity_score": 11,
        "detected_issues": [],
        "semantic_tags": [
          "typescript",
          "react",
          "nextjs",
          "authentication",
          "background-jobs"
        ],
        "needs_ai_summary": true,
        "priority": "medium",
        "summary_type": "ai-generated",
        "code_snippet": "\"use client\"\n\nimport { useState } from \"react\"\nimport Link from \"next/link\"\nimport { format } from \"date-fns\"\nimport { Badge } from \"@/components/ui/badge\"\nimport { Button } from \"@/components/ui/button\"\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { Input } from \"@/components/ui/input\"\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/components/ui/select\"\nimport {\n  CheckCircle,\n  Clock,\n  Cpu,\n  ExternalLink,\n  Loader2,\n  MemoryStick,\n  Plus,\n  Search,\n  Terminal,\n  XCircle,\n} from \"lucide-react\"\nimport { useGetJobs } from \"@/hooks/queries\"\nimport QueryWrapper from \"@/components/shared/wrapper\"\nimport {\n  JobCardPendingView,\n  StatsCardPendingView,\n} from \"@/components/shared/skeleton\"\nimport { Job } from \"@/hooks/data-type\"\nimport withAuth from \"@/provider/auth-provider\"\n\nfunction getStatusBadge(status: Job[\"status\"]) {\n  const variants = {\n    PENDING: {\n      variant: \"secondary\" as const,\n      icon: Clock,\n      color: \"text-gray-500\",\n    },\n    RUNNING: {\n      variant: \"default\" as const,\n      icon: Loader2,\n      color: \"text-yellow-500\",\n    },\n    SUCCESS: {\n      variant: \"default\" as const,\n      icon: CheckCircle,\n      color: \"text-green-500\",\n    },\n    FAILED: {\n      variant: \"destructive\" as const,\n      icon: XCircle,\n      color: \"text-red-500\",\n    },\n    CANCELED: {\n      variant: \"outline\" as const,\n      icon: XCircle,\n      color: \"text-slate-500\",\n    },\n  }\n\n  const config = variants[status as keyof typeof variants]\n  const Icon = config.icon\n\n  return (\n    <Badge variant={config.variant} className=\"flex items-center gap-1\">\n      <Icon\n        className={`h-3 w-3 ${config.color} ${\n          status === \"RUNNING\" ? \"animate-spin\" : \"\"\n        }`}\n      />\n      {status}\n    </Badge>\n  )\n}\n\nconst page = () => {\n  const [searchQuery, setSearchQuery] = useState(\"\")\n  const [statusFilter, setStatusFilter] = useState<string>(\"all\")\n  const { data: jobs, is",
        "full_content": "\"use client\"\n\nimport { useState } from \"react\"\nimport Link from \"next/link\"\nimport { format } from \"date-fns\"\nimport { Badge } from \"@/components/ui/badge\"\nimport { Button } from \"@/components/ui/button\"\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { Input } from \"@/components/ui/input\"\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/components/ui/select\"\nimport {\n  CheckCircle,\n  Clock,\n  Cpu,\n  ExternalLink,\n  Loader2,\n  MemoryStick,\n  Plus,\n  Search,\n  Terminal,\n  XCircle,\n} from \"lucide-react\"\nimport { useGetJobs } from \"@/hooks/queries\"\nimport QueryWrapper from \"@/components/shared/wrapper\"\nimport {\n  JobCardPendingView,\n  StatsCardPendingView,\n} from \"@/components/shared/skeleton\"\nimport { Job } from \"@/hooks/data-type\"\nimport withAuth from \"@/provider/auth-provider\"\n\nfunction getStatusBadge(status: Job[\"status\"]) {\n  const variants = {\n    PENDING: {\n      variant: \"secondary\" as const,\n      icon: Clock,\n      color: \"text-gray-500\",\n    },\n    RUNNING: {\n      variant: \"default\" as const,\n      icon: Loader2,\n      color: \"text-yellow-500\",\n    },\n    SUCCESS: {\n      variant: \"default\" as const,\n      icon: CheckCircle,\n      color: \"text-green-500\",\n    },\n    FAILED: {\n      variant: \"destructive\" as const,\n      icon: XCircle,\n      color: \"text-red-500\",\n    },\n    CANCELED: {\n      variant: \"outline\" as const,\n      icon: XCircle,\n      color: \"text-slate-500\",\n    },\n  }\n\n  const config = variants[status as keyof typeof variants]\n  const Icon = config.icon\n\n  return (\n    <Badge variant={config.variant} className=\"flex items-center gap-1\">\n      <Icon\n        className={`h-3 w-3 ${config.color} ${\n          status === \"RUNNING\" ? \"animate-spin\" : \"\"\n        }`}\n      />\n      {status}\n    </Badge>\n  )\n}\n\nconst page = () => {\n  const [searchQuery, setSearchQuery] = useState(\"\")\n  const [statusFilter, setStatusFilter] = useState<string>(\"all\")\n  const { data: jobs, isError, isPending, error } = useGetJobs()\n\n  const filteredJobs = jobs?.filter((job) => {\n    const matchesSearch = job.command\n      .toLowerCase()\n      .includes(searchQuery.toLowerCase())\n    const matchesStatus = statusFilter === \"all\" || job.status === statusFilter\n    return matchesSearch && matchesStatus\n  })\n\n  return (\n    <div className=\"space-y-6 p-6\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <h1 className=\"text-3xl font-bold\">Jobs</h1>\n          <p className=\"text-muted-foreground\">\n            Manage and monitor your job executions\n          </p>\n        </div>\n        <Link href=\"/dashboard/create-job\">\n          <Button className=\"gap-2\">\n            <Plus className=\"h-4 w-4\" />\n            Create Job\n          </Button>\n        </Link>\n      </div>\n\n      {/* Filters */}\n      <div className=\"flex gap-4\">\n        <div className=\"relative flex-1 max-w-sm\">\n          <Search className=\"absolute left-3 top-1/2 h-4 w-4 -translate-y-1/2 text-muted-foreground\" />\n          <Input\n            placeholder=\"Search jobs...\"\n            value={searchQuery}\n            onChange={(e) => setSearchQuery(e.target.value)}\n            className=\"pl-9\"\n          />\n        </div>\n        <Select value={statusFilter} onValueChange={setStatusFilter}>\n          <SelectTrigger className=\"w-[180px]\">\n            <SelectValue placeholder=\"Filter by status\" />\n          </SelectTrigger>\n          <SelectContent>\n            <SelectItem value=\"all\">All Status</SelectItem>\n            <SelectItem value=\"PENDING\">Pending</SelectItem>\n            <SelectItem value=\"RUNNING\">Running</SelectItem>\n            <SelectItem value=\"SUCCESS\">Success</SelectItem>\n            <SelectItem value=\"FAILED\">Failed</SelectItem>\n            <SelectItem value=\"CANCELED\">Canceled</SelectItem>\n          </SelectContent>\n        </Select>\n      </div>\n\n      <QueryWrapper\n        data={filteredJobs}\n        isPending={isPending}\n        isError={isError}\n        error={error}\n        pendingView={<JobCardPendingView />}\n        view={\n          <div className=\"grid gap-4\">\n            {filteredJobs &&\n              filteredJobs.map((job) => (\n                <Card\n                  key={job.id}\n                  className=\"hover:shadow-md transition-shadow\"\n                >\n                  <CardHeader>\n                    <div className=\"flex items-center justify-between\">\n                      <CardTitle className=\"flex items-center gap-2 text-base\">\n                        <Terminal className=\"h-4 w-4\" />\n                        <span className=\"font-mono text-sm truncate max-w-md\">\n                          {job.command}\n                        </span>\n                      </CardTitle>\n                      <div className=\"flex items-center gap-2\">\n                        {getStatusBadge(job.status as Job[\"status\"])}\n                        <Link href={`/dashboard/jobs/${job.id}`}>\n                          <Button variant=\"ghost\" size=\"sm\" className=\"gap-1\">\n                            <ExternalLink className=\"h-3 w-3\" />\n                            View\n                          </Button>\n                        </Link>\n                      </div>\n                    </div>\n                  </CardHeader>\n                  <CardContent>\n                    <div className=\"flex items-center justify-between\">\n                      <div className=\"flex items-center gap-6 text-sm text-muted-foreground\">\n                        {job.cpuUsage && (\n                          <div className=\"flex items-center gap-1\">\n                            <Cpu className=\"h-3 w-3\" />\n                            {job.cpuUsage}%\n                          </div>\n                        )}\n                        {job.memoryUsage && (\n                          <div className=\"flex items-center gap-1\">\n                            <MemoryStick className=\"h-3 w-3\" />\n                            {job.memoryUsage}MB\n                          </div>\n                        )}\n                        {job.duration && (\n                          <div className=\"flex items-center gap-1\">\n                            <Clock className=\"h-3 w-3\" />\n                            {job.duration}s\n                          </div>\n                        )}\n                      </div>\n                      <div className=\"text-sm text-muted-foreground\">\n                        {format(new Date(job.createdAt), \"MMM dd, HH:mm\")}\n                      </div>\n                    </div>\n                  </CardContent>\n                </Card>\n              ))}\n          </div>\n        }\n      />\n\n      {filteredJobs?.length === 0 && (\n        <Card>\n          <CardContent className=\"flex flex-col items-center justify-center py-12\">\n            <Terminal className=\"h-12 w-12 text-muted-foreground mb-4\" />\n            <h3 className=\"text-lg font-semibold mb-2\">No jobs found</h3>\n            <p className=\"text-muted-foreground text-center mb-4\">\n              {searchQuery || statusFilter !== \"all\"\n                ? \"Try adjusting your search or filter criteria\"\n                : \"Get started by creating your first job\"}\n            </p>\n            <Link href=\"/dashboard/create-job\">\n              <Button>Create Your First Job</Button>\n            </Link>\n          </CardContent>\n        </Card>\n      )}\n    </div>\n  )\n}\n\nexport default withAuth(page)\n"
      }
    },
    {
      "file_path": "frontend/app/dashboard/layout.tsx",
      "relative_path": "frontend/app/dashboard/layout.tsx",
      "language": "typescript",
      "imports": [
        "react",
        "@/components/shared/dashboard-sidebar"
      ],
      "exports": [
        "DashboardLayout"
      ],
      "classes": [],
      "functions": [
        {
          "name": "DashboardLayout",
          "parameters": [
            "{ children }"
          ],
          "returnType": "unknown",
          "isAsync": false,
          "isExported": true
        }
      ],
      "variables": [],
      "description": "React component: DashboardLayout with 1 methods and 0 classes",
      "lines_of_code": 12,
      "metadata": {
        "size_bytes": 347,
        "last_modified": "2025-10-07T19:50:38.720Z"
      },
      "analysis_enhanced": {
        "complexity_score": 3,
        "detected_issues": [],
        "semantic_tags": [
          "typescript",
          "react"
        ],
        "priority": "low",
        "summary_type": "rule-based",
        "code_snippet": "import type React from \"react\";\nimport { DashboardSidebar } from \"@/components/shared/dashboard-sidebar\";\n\nexport default function DashboardLayout({ children }: { children: React.ReactNode }) {\n  return (\n    <div className=\"flex h-screen\">\n      <DashboardSidebar />\n      <div className=\"flex-1 overflow-auto\">{children}</div>\n    </div>\n  );\n}\n",
        "full_content": "import type React from \"react\";\nimport { DashboardSidebar } from \"@/components/shared/dashboard-sidebar\";\n\nexport default function DashboardLayout({ children }: { children: React.ReactNode }) {\n  return (\n    <div className=\"flex h-screen\">\n      <DashboardSidebar />\n      <div className=\"flex-1 overflow-auto\">{children}</div>\n    </div>\n  );\n}\n"
      }
    },
    {
      "file_path": "frontend/app/dashboard/page.tsx",
      "relative_path": "frontend/app/dashboard/page.tsx",
      "language": "typescript",
      "imports": [
        "@/components/shared/skeleton",
        "@/components/shared/wrapper",
        "@/components/ui/badge",
        "@/components/ui/card",
        "@/components/ui/chart",
        "@/hooks/queries",
        "@/lib/utils",
        "@/provider/auth-provider",
        "lucide-react",
        "react",
        "recharts"
      ],
      "exports": [],
      "classes": [],
      "functions": [],
      "variables": [
        "page"
      ],
      "description": "**Purpose:**\nThis TypeScript code file, located at `frontend/app/dashboard/page.tsx`, is a React UI component that displays a dashboard page with various statistics and charts. It fetches job data from an API using the `useGetJobs` hook and calculates job statistics using the `calculateJobStats` and `extractJobGraphs` functions.\n\n**Components:**\nThe code defines a single functional component `page` that returns a JSX element. The component uses several imported components and hooks, including:\n\n* `StatsCardPendingView` from `@/components/shared/skeleton`\n* `QueryWrapper` from `@/components/shared/wrapper`\n* `Badge` from `@/components/ui/badge`\n* `Card` and",
      "lines_of_code": 216,
      "metadata": {
        "size_bytes": 7252,
        "last_modified": "2025-10-07T19:50:38.720Z"
      },
      "analysis_enhanced": {
        "complexity_score": 8,
        "detected_issues": [],
        "semantic_tags": [
          "typescript",
          "react",
          "authentication",
          "background-jobs"
        ],
        "needs_ai_summary": true,
        "priority": "medium",
        "summary_type": "ai-generated",
        "code_snippet": "\"use client\"\n\nimport { StatsCardPendingView } from \"@/components/shared/skeleton\"\nimport QueryWrapper from \"@/components/shared/wrapper\"\nimport { Badge } from \"@/components/ui/badge\"\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport {\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n} from \"@/components/ui/chart\"\nimport { useGetJobs } from \"@/hooks/queries\"\nimport { calculateJobStats, extractJobGraphs } from \"@/lib/utils\"\nimport withAuth from \"@/provider/auth-provider\"\nimport {\n  CheckCircle,\n  Circle,\n  Clock,\n  Terminal,\n  TrendingUp,\n  XCircle,\n} from \"lucide-react\"\nimport { useEffect, useState } from \"react\"\nimport {\n  Bar,\n  BarChart,\n  CartesianGrid,\n  Line,\n  LineChart,\n  ResponsiveContainer,\n  XAxis,\n  YAxis,\n} from \"recharts\"\n\nconst page = () => {\n  const { data: jobs, isError, isPending, error } = useGetJobs()\n  const [currentTime, setCurrentTime] = useState(new Date())\n  const stats = calculateJobStats(jobs || [])\n  const graphs = extractJobGraphs(jobs || [])\n\n  useEffect(() => {\n    const timer = setInterval(() => setCurrentTime(new Date()), 1000)\n    return () => clearInterval(timer)\n  }, [])\n\n  return (\n    <div className=\"space-y-6 p-6\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <h1 className=\"text-3xl font-bold\">Welcome back, Alex</h1>\n          <p className=\"text-muted-foreground\">\n            {currentTime.toLocaleDateString(\"en-US\", {\n              weekday: \"long\",\n              year: \"numeric\",\n              month: \"long\",\n              day: \"numeric\",\n            })}{\" \"}\n            • {currentTime.toLocaleTimeString()}\n          </p>\n        </div>\n        <Badge variant=\"outline\" className=\"gap-1\">\n          <Circle className=\"h-2 w-2 shadow-lg shadow-green-300 bg-green-500 text-green-500 rounded-full\" />\n          Main Server\n        </Badge>\n      </div>\n      <QueryWrapper\n        data={jobs}\n        isPending={isPending}\n        isError",
        "full_content": "\"use client\"\n\nimport { StatsCardPendingView } from \"@/components/shared/skeleton\"\nimport QueryWrapper from \"@/components/shared/wrapper\"\nimport { Badge } from \"@/components/ui/badge\"\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport {\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n} from \"@/components/ui/chart\"\nimport { useGetJobs } from \"@/hooks/queries\"\nimport { calculateJobStats, extractJobGraphs } from \"@/lib/utils\"\nimport withAuth from \"@/provider/auth-provider\"\nimport {\n  CheckCircle,\n  Circle,\n  Clock,\n  Terminal,\n  TrendingUp,\n  XCircle,\n} from \"lucide-react\"\nimport { useEffect, useState } from \"react\"\nimport {\n  Bar,\n  BarChart,\n  CartesianGrid,\n  Line,\n  LineChart,\n  ResponsiveContainer,\n  XAxis,\n  YAxis,\n} from \"recharts\"\n\nconst page = () => {\n  const { data: jobs, isError, isPending, error } = useGetJobs()\n  const [currentTime, setCurrentTime] = useState(new Date())\n  const stats = calculateJobStats(jobs || [])\n  const graphs = extractJobGraphs(jobs || [])\n\n  useEffect(() => {\n    const timer = setInterval(() => setCurrentTime(new Date()), 1000)\n    return () => clearInterval(timer)\n  }, [])\n\n  return (\n    <div className=\"space-y-6 p-6\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <h1 className=\"text-3xl font-bold\">Welcome back, Alex</h1>\n          <p className=\"text-muted-foreground\">\n            {currentTime.toLocaleDateString(\"en-US\", {\n              weekday: \"long\",\n              year: \"numeric\",\n              month: \"long\",\n              day: \"numeric\",\n            })}{\" \"}\n            • {currentTime.toLocaleTimeString()}\n          </p>\n        </div>\n        <Badge variant=\"outline\" className=\"gap-1\">\n          <Circle className=\"h-2 w-2 shadow-lg shadow-green-300 bg-green-500 text-green-500 rounded-full\" />\n          Main Server\n        </Badge>\n      </div>\n      <QueryWrapper\n        data={jobs}\n        isPending={isPending}\n        isError={isError}\n        error={error}\n        pendingView={<StatsCardPendingView />}\n        view={\n          jobs && (\n            <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-4\">\n              <Card>\n                <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n                  <CardTitle className=\"text-sm font-medium\">\n                    Total Jobs\n                  </CardTitle>\n                  <Terminal className=\"h-4 w-4 text-muted-foreground\" />\n                </CardHeader>\n                <CardContent>\n                  <div className=\"text-2xl font-bold\">{stats.totalJobs}</div>\n                  <p className=\"text-xs text-muted-foreground\">\n                    <TrendingUp className=\"inline h-3 w-3\" /> +12% from last\n                    month\n                  </p>\n                </CardContent>\n              </Card>\n\n              <Card>\n                <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n                  <CardTitle className=\"text-sm font-medium\">\n                    Successful Jobs\n                  </CardTitle>\n                  <CheckCircle className=\"h-4 w-4 text-green-500\" />\n                </CardHeader>\n                <CardContent>\n                  <div className=\"text-2xl font-bold\">\n                    {stats.successfulJobs}\n                  </div>\n                  <p className=\"text-xs text-muted-foreground\">\n                    {stats.successRate}% success rate\n                  </p>\n                </CardContent>\n              </Card>\n\n              <Card>\n                <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n                  <CardTitle className=\"text-sm font-medium\">\n                    Failed Jobs\n                  </CardTitle>\n                  <XCircle className=\"h-4 w-4 text-red-500\" />\n                </CardHeader>\n                <CardContent>\n                  <div className=\"text-2xl font-bold\">{stats.failedJobs}</div>\n                  <p className=\"text-xs text-muted-foreground\">\n                    {stats.failureRate}% failure rate\n                  </p>\n                </CardContent>\n              </Card>\n\n              <Card>\n                <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n                  <CardTitle className=\"text-sm font-medium\">\n                    Avg Execution Time\n                  </CardTitle>\n                  <Clock className=\"h-4 w-4 text-muted-foreground\" />\n                </CardHeader>\n                <CardContent>\n                  <div className=\"text-2xl font-bold\">\n                    {stats.avgExecutionTimeSec}s\n                  </div>\n                  <p className=\"text-xs text-muted-foreground\">\n                    -2.1s from last week\n                  </p>\n                </CardContent>\n              </Card>\n            </div>\n          )\n        }\n      />\n\n      {/* Charts */}\n      <div className=\"grid gap-4 md:grid-cols-2\">\n        <Card>\n          <CardHeader>\n            <CardTitle>Jobs Over Time</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <ChartContainer\n              config={{\n                jobs: {\n                  label: \"Jobs\",\n                  color: \"#1570EF\",\n                },\n              }}\n              className=\"h-[300px]\"\n            >\n              <ResponsiveContainer width=\"100%\" height=\"100%\">\n                <LineChart data={graphs.jobsOverTime}>\n                  <CartesianGrid strokeDasharray=\"3 3\" />\n                  <XAxis dataKey=\"date\" />\n                  <YAxis />\n                  <ChartTooltip content={<ChartTooltipContent />} />\n                  <Line\n                    type=\"monotone\"\n                    dataKey=\"jobs\"\n                    stroke=\"var(--color-jobs)\"\n                    strokeWidth={2}\n                  />\n                </LineChart>\n              </ResponsiveContainer>\n            </ChartContainer>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader>\n            <CardTitle>Resource Usage (Recent Jobs)</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <ChartContainer\n              config={{\n                cpu: {\n                  label: \"CPU %\",\n                  color: \"#1570EF\",\n                },\n                memory: {\n                  label: \"Memory %\",\n                  color: \"#83B4FF\",\n                },\n              }}\n              className=\"h-[300px]\"\n            >\n              <ResponsiveContainer width=\"100%\" height=\"100%\">\n                <BarChart className=\"rounded-md\" data={graphs.resourceUsage}>\n                  <CartesianGrid strokeDasharray=\"3 3\" />\n                  <XAxis dataKey=\"job\" />\n                  <YAxis />\n                  <ChartTooltip content={<ChartTooltipContent />} />\n                  <Bar dataKey=\"cpu\" fill=\"#1570EF\" className=\"rounded-md\" />\n                  <Bar dataKey=\"memory\" fill=\"#1570EF\" className=\"rounded-md\" />\n                </BarChart>\n              </ResponsiveContainer>\n            </ChartContainer>\n          </CardContent>\n        </Card>\n      </div>\n    </div>\n  )\n}\n\nexport default withAuth(page)\n"
      }
    },
    {
      "file_path": "frontend/app/dashboard/settings/page.tsx",
      "relative_path": "frontend/app/dashboard/settings/page.tsx",
      "language": "typescript",
      "imports": [
        "react",
        "@/components/ui/button",
        "@/components/ui/card",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/components/ui/switch",
        "next-themes",
        "lucide-react",
        "@/provider/auth-provider"
      ],
      "exports": [],
      "classes": [],
      "functions": [],
      "variables": [
        "SettingsPage"
      ],
      "description": "**Technical Description**\n\n### **Purpose**\nThe provided TypeScript code file, `page.tsx`, is a React UI component responsible for rendering the settings page of a web application. It allows users to manage their account settings and preferences, including theme settings and profile information.\n\n### **Components**\nThe code defines a single React functional component, `SettingsPage`, which is the main component of the settings page.\n\n### **Dependencies**\nThe code depends on the following external modules and APIs:\n\n* `react`: The React library for building user interfaces.\n* `@/components/ui/button`, `@/components/ui/card`, `@/components/ui/input`, `@/components/ui/label`, `@/components/ui/switch`: Custom UI components used in",
      "lines_of_code": 253,
      "metadata": {
        "size_bytes": 8273,
        "last_modified": "2025-10-07T19:50:38.720Z"
      },
      "analysis_enhanced": {
        "complexity_score": 7,
        "detected_issues": [
          {
            "type": "maintainability",
            "severity": "low",
            "description": "Code contains TODO/FIXME comments indicating incomplete work",
            "category": "incomplete-work"
          }
        ],
        "semantic_tags": [
          "typescript",
          "react",
          "nextjs",
          "authentication",
          "background-jobs"
        ],
        "needs_ai_summary": true,
        "priority": "medium",
        "summary_type": "ai-generated",
        "code_snippet": "\"use client\"\n\nimport { useState } from \"react\"\nimport { Button } from \"@/components/ui/button\"\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { Input } from \"@/components/ui/input\"\nimport { Label } from \"@/components/ui/label\"\nimport { Switch } from \"@/components/ui/switch\"\n// import { useToast } from \"@/hooks/use-toast\";\nimport { useTheme } from \"next-themes\"\nimport { Moon, Sun, User, Lock, Bell, Shield, Save } from \"lucide-react\"\nimport withAuth from \"@/provider/auth-provider\"\n\nconst SettingsPage = () => {\n  const { theme, setTheme } = useTheme()\n  //   const { toast } = useToast();\n  const [isLoading, setIsLoading] = useState(false)\n\n  const [profile, setProfile] = useState({\n    name: \"Alex Johnson\",\n    email: \"alex@company.com\",\n  })\n\n  const [notifications, setNotifications] = useState({\n    jobComplete: true,\n    jobFailed: true,\n    systemAlerts: false,\n  })\n\n  const handleSaveProfile = async () => {\n    setIsLoading(true)\n    try {\n      // TODO: Replace with actual API call\n      await new Promise((resolve) => setTimeout(resolve, 1000))\n      /* toast({\n        title: \"Profile Updated\",\n        description: \"Your profile has been successfully updated.\",\n      });\n    } catch (error) {\n      toast({\n        title: \"Error\",\n        description: \"Failed to update profile. Please try again.\",\n        variant: \"destructive\",\n      }); */\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  const handleSaveNotifications = async () => {\n    setIsLoading(true)\n    try {\n      await new Promise((resolve) => setTimeout(resolve, 1000))\n      /* toast({\n        title: \"Notifications Updated\",\n        description: \"Your notification preferences have been saved.\",\n      }); */\n    } catch (error) {\n      /*    toast({\n        title: \"Error\",\n        description: \"Failed to update notifications. Please try again.\",\n        variant: \"destructive\",\n      }); */\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  return (\n    <d",
        "full_content": "\"use client\"\n\nimport { useState } from \"react\"\nimport { Button } from \"@/components/ui/button\"\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { Input } from \"@/components/ui/input\"\nimport { Label } from \"@/components/ui/label\"\nimport { Switch } from \"@/components/ui/switch\"\n// import { useToast } from \"@/hooks/use-toast\";\nimport { useTheme } from \"next-themes\"\nimport { Moon, Sun, User, Lock, Bell, Shield, Save } from \"lucide-react\"\nimport withAuth from \"@/provider/auth-provider\"\n\nconst SettingsPage = () => {\n  const { theme, setTheme } = useTheme()\n  //   const { toast } = useToast();\n  const [isLoading, setIsLoading] = useState(false)\n\n  const [profile, setProfile] = useState({\n    name: \"Alex Johnson\",\n    email: \"alex@company.com\",\n  })\n\n  const [notifications, setNotifications] = useState({\n    jobComplete: true,\n    jobFailed: true,\n    systemAlerts: false,\n  })\n\n  const handleSaveProfile = async () => {\n    setIsLoading(true)\n    try {\n      // TODO: Replace with actual API call\n      await new Promise((resolve) => setTimeout(resolve, 1000))\n      /* toast({\n        title: \"Profile Updated\",\n        description: \"Your profile has been successfully updated.\",\n      });\n    } catch (error) {\n      toast({\n        title: \"Error\",\n        description: \"Failed to update profile. Please try again.\",\n        variant: \"destructive\",\n      }); */\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  const handleSaveNotifications = async () => {\n    setIsLoading(true)\n    try {\n      await new Promise((resolve) => setTimeout(resolve, 1000))\n      /* toast({\n        title: \"Notifications Updated\",\n        description: \"Your notification preferences have been saved.\",\n      }); */\n    } catch (error) {\n      /*    toast({\n        title: \"Error\",\n        description: \"Failed to update notifications. Please try again.\",\n        variant: \"destructive\",\n      }); */\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  return (\n    <div className=\"space-y-6 p-6\">\n      {/* Header */}\n      <div>\n        <h1 className=\"text-3xl font-bold\">Settings</h1>\n        <p className=\"text-muted-foreground\">\n          Manage your account settings and preferences\n        </p>\n      </div>\n\n      <div className=\"grid gap-6 max-w-4xl\">\n        {/* Theme Settings */}\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"flex items-center gap-2\">\n              {theme === \"dark\" ? (\n                <Moon className=\"h-5 w-5\" />\n              ) : (\n                <Sun className=\"h-5 w-5\" />\n              )}\n              Appearance\n            </CardTitle>\n          </CardHeader>\n          <CardContent className=\"space-y-4\">\n            <div className=\"flex items-center justify-between\">\n              <div className=\"space-y-0.5\">\n                <Label>Dark Mode</Label>\n                <p className=\"text-sm text-muted-foreground\">\n                  Toggle between light and dark themes\n                </p>\n              </div>\n              <Switch\n                checked={theme === \"dark\"}\n                onCheckedChange={(checked) =>\n                  setTheme(checked ? \"dark\" : \"light\")\n                }\n              />\n            </div>\n          </CardContent>\n        </Card>\n\n        {/* Profile Settings */}\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"flex items-center gap-2\">\n              <User className=\"h-5 w-5\" />\n              Profile\n            </CardTitle>\n          </CardHeader>\n          <CardContent className=\"space-y-4\">\n            <div className=\"grid gap-4 md:grid-cols-2\">\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"name\">Full Name</Label>\n                <Input\n                  id=\"name\"\n                  value={profile.name}\n                  onChange={(e) =>\n                    setProfile({ ...profile, name: e.target.value })\n                  }\n                />\n              </div>\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"email\">Email</Label>\n                <Input\n                  id=\"email\"\n                  type=\"email\"\n                  value={profile.email}\n                  onChange={(e) =>\n                    setProfile({ ...profile, email: e.target.value })\n                  }\n                />\n              </div>\n            </div>\n            <Button\n              onClick={handleSaveProfile}\n              disabled={isLoading}\n              className=\"gap-2\"\n            >\n              <Save className=\"h-4 w-4\" />\n              {isLoading ? \"Saving...\" : \"Save Profile\"}\n            </Button>\n          </CardContent>\n        </Card>\n\n        {/* Password Settings */}\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"flex items-center gap-2\">\n              <Lock className=\"h-5 w-5\" />\n              Security\n            </CardTitle>\n          </CardHeader>\n          <CardContent className=\"space-y-4\">\n            <div className=\"grid gap-4 md:grid-cols-2\">\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"current-password\">Current Password</Label>\n                <Input id=\"current-password\" type=\"password\" />\n              </div>\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"new-password\">New Password</Label>\n                <Input id=\"new-password\" type=\"password\" />\n              </div>\n            </div>\n            <Button variant=\"outline\" className=\"gap-2 bg-transparent\">\n              <Shield className=\"h-4 w-4\" />\n              Update Password\n            </Button>\n          </CardContent>\n        </Card>\n\n        {/* Notification Settings */}\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"flex items-center gap-2\">\n              <Bell className=\"h-5 w-5\" />\n              Notifications\n            </CardTitle>\n          </CardHeader>\n          <CardContent className=\"space-y-4\">\n            <div className=\"space-y-4\">\n              <div className=\"flex items-center justify-between\">\n                <div className=\"space-y-0.5\">\n                  <Label>Job Completion</Label>\n                  <p className=\"text-sm text-muted-foreground\">\n                    Get notified when jobs complete successfully\n                  </p>\n                </div>\n                <Switch\n                  checked={notifications.jobComplete}\n                  onCheckedChange={(checked) =>\n                    setNotifications({ ...notifications, jobComplete: checked })\n                  }\n                />\n              </div>\n\n              <div className=\"flex items-center justify-between\">\n                <div className=\"space-y-0.5\">\n                  <Label>Job Failures</Label>\n                  <p className=\"text-sm text-muted-foreground\">\n                    Get notified when jobs fail or are canceled\n                  </p>\n                </div>\n                <Switch\n                  checked={notifications.jobFailed}\n                  onCheckedChange={(checked) =>\n                    setNotifications({ ...notifications, jobFailed: checked })\n                  }\n                />\n              </div>\n\n              <div className=\"flex items-center justify-between\">\n                <div className=\"space-y-0.5\">\n                  <Label>System Alerts</Label>\n                  <p className=\"text-sm text-muted-foreground\">\n                    Get notified about system maintenance and updates\n                  </p>\n                </div>\n                <Switch\n                  checked={notifications.systemAlerts}\n                  onCheckedChange={(checked) =>\n                    setNotifications({\n                      ...notifications,\n                      systemAlerts: checked,\n                    })\n                  }\n                />\n              </div>\n            </div>\n\n            <Button\n              onClick={handleSaveNotifications}\n              disabled={isLoading}\n              className=\"gap-2\"\n            >\n              <Save className=\"h-4 w-4\" />\n              {isLoading ? \"Saving...\" : \"Save Notifications\"}\n            </Button>\n          </CardContent>\n        </Card>\n      </div>\n    </div>\n  )\n}\nexport default withAuth(SettingsPage)\n"
      }
    },
    {
      "file_path": "frontend/app/globals.css",
      "relative_path": "frontend/app/globals.css",
      "language": "css",
      "imports": [],
      "exports": [],
      "classes": [],
      "functions": [],
      "variables": [],
      "description": "Non-code file",
      "lines_of_code": 168,
      "metadata": {
        "size_bytes": 6014,
        "last_modified": "2025-10-07T19:50:38.721Z"
      },
      "analysis_enhanced": {
        "complexity_score": 0,
        "detected_issues": [],
        "semantic_tags": [
          "css"
        ],
        "priority": "low",
        "summary_type": "rule-based",
        "code_snippet": "@import \"tailwindcss\";\n@import \"tw-animate-css\";\n\n@custom-variant dark (&:is(.dark *));\n\n:root {\n  --background: oklch(0.99 0 0);\n  --foreground: oklch(0 0 0);\n  --card: oklch(1 0 0);\n  --card-foreground: oklch(0 0 0);\n  --popover: oklch(0.99 0 0);\n  --popover-foreground: oklch(0 0 0);\n  --primary: oklch(0 0 0);\n  --primary-foreground: oklch(1 0 0);\n  --secondary: oklch(0.94 0 0);\n  --secondary-foreground: oklch(0 0 0);\n  --muted: oklch(0.97 0 0);\n  --muted-foreground: oklch(0.44 0 0);\n  --accent: oklch(0.94 0 0);\n  --accent-foreground: oklch(0 0 0);\n  --destructive: oklch(0.63 0.19 23.03);\n  --destructive-foreground: oklch(1 0 0);\n  --border: oklch(0.92 0 0);\n  --input: oklch(0.94 0 0);\n  --ring: oklch(0 0 0);\n  --chart-1: oklch(0.81 0.17 75.35);\n  --chart-2: oklch(0.55 0.22 264.53);\n  --chart-3: oklch(0.72 0 0);\n  --chart-4: oklch(0.92 0 0);\n  --chart-5: oklch(0.56 0 0);\n  --sidebar: oklch(0.99 0 0);\n  --sidebar-foreground: oklch(0 0 0);\n  --sidebar-primary: oklch(0 0 0);\n  --sidebar-primary-foreground: oklch(1 0 0);\n  --sidebar-accent: oklch(0.94 0 0);\n  --sidebar-accent-foreground: oklch(0 0 0);\n  --sidebar-border: oklch(0.94 0 0);\n  --sidebar-ring: oklch(0 0 0);\n  --font-sans: Geist, sans-serif;\n  --font-serif: EB Garamond, serif;\n  --font-mono: Geist Mono, monospace;\n  --radius: 0.5rem;\n  --shadow-2xs: 0px 1px 2px 0px hsl(0 0% 0% / 0.09);\n  --shadow-xs: 0px 1px 2px 0px hsl(0 0% 0% / 0.09);\n  --shadow-sm: 0px 1px 2px 0px hsl(0 0% 0% / 0.18), 0px 1px 2px -1px hsl(0 0% 0% / 0.18);\n  --shadow: 0px 1px 2px 0px hsl(0 0% 0% / 0.18), 0px 1px 2px -1px hsl(0 0% 0% / 0.18);\n  --shadow-md: 0px 1px 2px 0px hsl(0 0% 0% / 0.18), 0px 2px 4px -1px hsl(0 0% 0% / 0.18);\n  --shadow-lg: 0px 1px 2px 0px hsl(0 0% 0% / 0.18), 0px 4px 6px -1px hsl(0 0% 0% / 0.18);\n  --shadow-xl: 0px 1px 2px 0px hsl(0 0% 0% / 0.18), 0px 8px 10px -1px hsl(0 0% 0% / 0.18);\n  --shadow-2xl: 0px 1px 2px 0px hsl(0 0% 0% / 0.45);\n  --tracking-normal: 0em;\n  --spacing: 0.25rem;\n}\n\n.dark {\n  --background: oklch",
        "full_content": "@import \"tailwindcss\";\n@import \"tw-animate-css\";\n\n@custom-variant dark (&:is(.dark *));\n\n:root {\n  --background: oklch(0.99 0 0);\n  --foreground: oklch(0 0 0);\n  --card: oklch(1 0 0);\n  --card-foreground: oklch(0 0 0);\n  --popover: oklch(0.99 0 0);\n  --popover-foreground: oklch(0 0 0);\n  --primary: oklch(0 0 0);\n  --primary-foreground: oklch(1 0 0);\n  --secondary: oklch(0.94 0 0);\n  --secondary-foreground: oklch(0 0 0);\n  --muted: oklch(0.97 0 0);\n  --muted-foreground: oklch(0.44 0 0);\n  --accent: oklch(0.94 0 0);\n  --accent-foreground: oklch(0 0 0);\n  --destructive: oklch(0.63 0.19 23.03);\n  --destructive-foreground: oklch(1 0 0);\n  --border: oklch(0.92 0 0);\n  --input: oklch(0.94 0 0);\n  --ring: oklch(0 0 0);\n  --chart-1: oklch(0.81 0.17 75.35);\n  --chart-2: oklch(0.55 0.22 264.53);\n  --chart-3: oklch(0.72 0 0);\n  --chart-4: oklch(0.92 0 0);\n  --chart-5: oklch(0.56 0 0);\n  --sidebar: oklch(0.99 0 0);\n  --sidebar-foreground: oklch(0 0 0);\n  --sidebar-primary: oklch(0 0 0);\n  --sidebar-primary-foreground: oklch(1 0 0);\n  --sidebar-accent: oklch(0.94 0 0);\n  --sidebar-accent-foreground: oklch(0 0 0);\n  --sidebar-border: oklch(0.94 0 0);\n  --sidebar-ring: oklch(0 0 0);\n  --font-sans: Geist, sans-serif;\n  --font-serif: EB Garamond, serif;\n  --font-mono: Geist Mono, monospace;\n  --radius: 0.5rem;\n  --shadow-2xs: 0px 1px 2px 0px hsl(0 0% 0% / 0.09);\n  --shadow-xs: 0px 1px 2px 0px hsl(0 0% 0% / 0.09);\n  --shadow-sm: 0px 1px 2px 0px hsl(0 0% 0% / 0.18), 0px 1px 2px -1px hsl(0 0% 0% / 0.18);\n  --shadow: 0px 1px 2px 0px hsl(0 0% 0% / 0.18), 0px 1px 2px -1px hsl(0 0% 0% / 0.18);\n  --shadow-md: 0px 1px 2px 0px hsl(0 0% 0% / 0.18), 0px 2px 4px -1px hsl(0 0% 0% / 0.18);\n  --shadow-lg: 0px 1px 2px 0px hsl(0 0% 0% / 0.18), 0px 4px 6px -1px hsl(0 0% 0% / 0.18);\n  --shadow-xl: 0px 1px 2px 0px hsl(0 0% 0% / 0.18), 0px 8px 10px -1px hsl(0 0% 0% / 0.18);\n  --shadow-2xl: 0px 1px 2px 0px hsl(0 0% 0% / 0.45);\n  --tracking-normal: 0em;\n  --spacing: 0.25rem;\n}\n\n.dark {\n  --background: oklch(0 0 0);\n  --foreground: oklch(1 0 0);\n  --card: oklch(0.14 0 0);\n  --card-foreground: oklch(1 0 0);\n  --popover: oklch(0.18 0 0);\n  --popover-foreground: oklch(1 0 0);\n  --primary: oklch(0.572 0.2076 258.9254);\n  --primary-foreground: oklch(0.9851 0 0);\n  --secondary: oklch(0.25 0 0);\n  --secondary-foreground: oklch(1 0 0);\n  --muted: oklch(0.23 0 0);\n  --muted-foreground: oklch(0.72 0 0);\n  --accent: oklch(0.32 0 0);\n  --accent-foreground: oklch(1 0 0);\n  --destructive: oklch(0.69 0.2 23.91);\n  --destructive-foreground: oklch(0 0 0);\n  --border: oklch(0.26 0 0);\n  --input: oklch(0.32 0 0);\n  --ring: oklch(0.72 0 0);\n  --chart-1: oklch(0.81 0.17 75.35);\n  --chart-2: oklch(0.58 0.21 260.84);\n  --chart-3: oklch(0.56 0 0);\n  --chart-4: oklch(0.44 0 0);\n  --chart-5: oklch(0.92 0 0);\n  --sidebar: oklch(0.18 0 0);\n  --sidebar-foreground: oklch(1 0 0);\n  --sidebar-primary: oklch(1 0 0);\n  --sidebar-primary-foreground: oklch(0 0 0);\n  --sidebar-accent: oklch(0.32 0 0);\n  --sidebar-accent-foreground: oklch(1 0 0);\n  --sidebar-border: oklch(0.32 0 0);\n  --sidebar-ring: oklch(0.72 0 0);\n  --font-sans: Geist, sans-serif;\n  --font-serif: Georgia, serif;\n  --font-mono: Geist Mono, monospace;\n  --radius: 0.5rem;\n  --shadow-2xs: 0px 1px 2px 0px hsl(0 0% 0% / 0.09);\n  --shadow-xs: 0px 1px 2px 0px hsl(0 0% 0% / 0.09);\n  --shadow-sm: 0px 1px 2px 0px hsl(0 0% 0% / 0.18), 0px 1px 2px -1px hsl(0 0% 0% / 0.18);\n  --shadow: 0px 1px 2px 0px hsl(0 0% 0% / 0.18), 0px 1px 2px -1px hsl(0 0% 0% / 0.18);\n  --shadow-md: 0px 1px 2px 0px hsl(0 0% 0% / 0.18), 0px 2px 4px -1px hsl(0 0% 0% / 0.18);\n  --shadow-lg: 0px 1px 2px 0px hsl(0 0% 0% / 0.18), 0px 4px 6px -1px hsl(0 0% 0% / 0.18);\n  --shadow-xl: 0px 1px 2px 0px hsl(0 0% 0% / 0.18), 0px 8px 10px -1px hsl(0 0% 0% / 0.18);\n  --shadow-2xl: 0px 1px 2px 0px hsl(0 0% 0% / 0.45);\n}\n\n@theme inline {\n  --color-background: var(--background);\n  --color-foreground: var(--foreground);\n  --color-card: var(--card);\n  --color-card-foreground: var(--card-foreground);\n  --color-popover: var(--popover);\n  --color-popover-foreground: var(--popover-foreground);\n  --color-primary: var(--primary);\n  --color-primary-foreground: var(--primary-foreground);\n  --color-secondary: var(--secondary);\n  --color-secondary-foreground: var(--secondary-foreground);\n  --color-muted: var(--muted);\n  --color-muted-foreground: var(--muted-foreground);\n  --color-accent: var(--accent);\n  --color-accent-foreground: var(--accent-foreground);\n  --color-destructive: var(--destructive);\n  --color-destructive-foreground: var(--destructive-foreground);\n  --color-border: var(--border);\n  --color-input: var(--input);\n  --color-ring: var(--ring);\n  --color-chart-1: var(--chart-1);\n  --color-chart-2: var(--chart-2);\n  --color-chart-3: var(--chart-3);\n  --color-chart-4: var(--chart-4);\n  --color-chart-5: var(--chart-5);\n  --color-sidebar: var(--sidebar);\n  --color-sidebar-foreground: var(--sidebar-foreground);\n  --color-sidebar-primary: var(--sidebar-primary);\n  --color-sidebar-primary-foreground: var(--sidebar-primary-foreground);\n  --color-sidebar-accent: var(--sidebar-accent);\n  --color-sidebar-accent-foreground: var(--sidebar-accent-foreground);\n  --color-sidebar-border: var(--sidebar-border);\n  --color-sidebar-ring: var(--sidebar-ring);\n\n  --font-sans: var(--font-sans);\n  --font-mono: var(--font-mono);\n  --font-serif: var(--font-serif);\n  --font-eb-garamond: var(--font-eb-garamond);\n\n  --radius-sm: calc(var(--radius) - 4px);\n  --radius-md: calc(var(--radius) - 2px);\n  --radius-lg: var(--radius);\n  --radius-xl: calc(var(--radius) + 4px);\n\n  --shadow-2xs: var(--shadow-2xs);\n  --shadow-xs: var(--shadow-xs);\n  --shadow-sm: var(--shadow-sm);\n  --shadow: var(--shadow);\n  --shadow-md: var(--shadow-md);\n  --shadow-lg: var(--shadow-lg);\n  --shadow-xl: var(--shadow-xl);\n  --shadow-2xl: var(--shadow-2xl);\n}\n\nbody {\n  letter-spacing: var(--tracking-normal);\n}\n\n@layer base {\n  * {\n    @apply border-border outline-ring/50;\n  }\n  body {\n    @apply bg-background text-foreground;\n  }\n}\n"
      }
    },
    {
      "file_path": "frontend/app/layout.tsx",
      "relative_path": "frontend/app/layout.tsx",
      "language": "typescript",
      "imports": [
        "@/components/shared/footer",
        "@/components/shared/navbar-container",
        "@/components/shared/theme-provider",
        "next",
        "next/font/google",
        "./globals.css",
        "@/provider/client-provider",
        "@/components/ui/toaster",
        "@/provider/socket-provider"
      ],
      "exports": [
        "RootLayout"
      ],
      "classes": [],
      "functions": [
        {
          "name": "RootLayout",
          "parameters": [
            "{\n  children,\n}"
          ],
          "returnType": "unknown",
          "isAsync": false,
          "isExported": true
        }
      ],
      "variables": [
        "geistSans",
        "geistMono",
        "ebGaramond",
        "metadata"
      ],
      "description": "React component: RootLayout with 1 methods and 0 classes",
      "lines_of_code": 60,
      "metadata": {
        "size_bytes": 1565,
        "last_modified": "2025-10-07T19:50:38.721Z"
      },
      "analysis_enhanced": {
        "complexity_score": 7,
        "detected_issues": [],
        "semantic_tags": [
          "typescript",
          "nextjs",
          "background-jobs"
        ],
        "priority": "low",
        "summary_type": "rule-based",
        "code_snippet": "import Footer from \"@/components/shared/footer\";\nimport NavbarContainer from \"@/components/shared/navbar-container\";\nimport { ThemeProvider } from \"@/components/shared/theme-provider\";\nimport type { Metadata } from \"next\";\nimport { EB_Garamond, Geist, Geist_Mono } from \"next/font/google\";\nimport \"./globals.css\";\nimport ClientProvider from \"@/provider/client-provider\";\nimport { Toaster } from \"@/components/ui/toaster\";\nimport { SocketProvider } from \"@/provider/socket-provider\";\n\nconst geistSans = Geist({\n  variable: \"--font-geist-sans\",\n  subsets: [\"latin\"],\n});\n\nconst geistMono = Geist_Mono({\n  variable: \"--font-geist-mono\",\n  subsets: [\"latin\"],\n});\n\nconst ebGaramond = EB_Garamond({\n  variable: \"--font-eb-garamond\",\n  subsets: [\"latin\"],\n});\n\nexport const metadata: Metadata = {\n  title: \"Qlio\",\n  description: \"A job queue for your business\",\n};\n\nexport default function RootLayout({\n  children,\n}: Readonly<{\n  children: React.ReactNode;\n}>) {\n  return (\n    <html lang=\"en\">\n      <body\n        className={`${geistSans.variable} ${geistMono.variable} ${ebGaramond.variable} antialiased`}\n      >\n        <ClientProvider>\n          <SocketProvider>\n            <ThemeProvider\n              attribute=\"class\"\n              defaultTheme=\"system\"\n              enableSystem\n              disableTransitionOnChange\n            >\n              <NavbarContainer />\n              {children}\n              <Footer />\n              <Toaster />\n            </ThemeProvider>\n          </SocketProvider>\n        </ClientProvider>\n      </body>\n    </html>\n  );\n}\n",
        "full_content": "import Footer from \"@/components/shared/footer\";\nimport NavbarContainer from \"@/components/shared/navbar-container\";\nimport { ThemeProvider } from \"@/components/shared/theme-provider\";\nimport type { Metadata } from \"next\";\nimport { EB_Garamond, Geist, Geist_Mono } from \"next/font/google\";\nimport \"./globals.css\";\nimport ClientProvider from \"@/provider/client-provider\";\nimport { Toaster } from \"@/components/ui/toaster\";\nimport { SocketProvider } from \"@/provider/socket-provider\";\n\nconst geistSans = Geist({\n  variable: \"--font-geist-sans\",\n  subsets: [\"latin\"],\n});\n\nconst geistMono = Geist_Mono({\n  variable: \"--font-geist-mono\",\n  subsets: [\"latin\"],\n});\n\nconst ebGaramond = EB_Garamond({\n  variable: \"--font-eb-garamond\",\n  subsets: [\"latin\"],\n});\n\nexport const metadata: Metadata = {\n  title: \"Qlio\",\n  description: \"A job queue for your business\",\n};\n\nexport default function RootLayout({\n  children,\n}: Readonly<{\n  children: React.ReactNode;\n}>) {\n  return (\n    <html lang=\"en\">\n      <body\n        className={`${geistSans.variable} ${geistMono.variable} ${ebGaramond.variable} antialiased`}\n      >\n        <ClientProvider>\n          <SocketProvider>\n            <ThemeProvider\n              attribute=\"class\"\n              defaultTheme=\"system\"\n              enableSystem\n              disableTransitionOnChange\n            >\n              <NavbarContainer />\n              {children}\n              <Footer />\n              <Toaster />\n            </ThemeProvider>\n          </SocketProvider>\n        </ClientProvider>\n      </body>\n    </html>\n  );\n}\n"
      }
    },
    {
      "file_path": "frontend/app/login/page.tsx",
      "relative_path": "frontend/app/login/page.tsx",
      "language": "typescript",
      "imports": [
        "@/components/container/auth-form",
        "@/provider/redirect-loggedin"
      ],
      "exports": [],
      "classes": [],
      "functions": [],
      "variables": [
        "Login"
      ],
      "description": "**Technical Description**\n\n### Purpose\nThis TypeScript code file, located at `frontend/app/login/page.tsx`, is a React UI component responsible for rendering the login page.\n\n### Components\n- **`Login` component**: The main component of this file, which returns a JSX element containing an `AuthForm` and a `RedirectLoggedIn` component.\n\n### Dependencies\n- **`@/components/container/auth-form`**: An external module that provides the `AuthForm` component, which is used to render the login form.\n- **`@/provider/redirect-loggedin`**: An external module that provides the `RedirectLoggedIn` component, which is used to redirect logged-in users.\n\n### Issues\nNone detected.\n\n### Impact\nThis file is",
      "lines_of_code": 15,
      "metadata": {
        "size_bytes": 334,
        "last_modified": "2025-10-07T19:50:38.721Z"
      },
      "analysis_enhanced": {
        "complexity_score": 1,
        "detected_issues": [],
        "semantic_tags": [
          "typescript",
          "authentication"
        ],
        "needs_ai_summary": true,
        "priority": "medium",
        "summary_type": "ai-generated",
        "code_snippet": "\"use client\"\nimport AuthForm from \"@/components/container/auth-form\"\nimport RedirectLoggedIn from \"@/provider/redirect-loggedin\"\n\nconst Login = () => {\n  return (\n    <div className=\"flex flex-col items-center justify-center h-screen\">\n      <AuthForm type=\"login\" />\n      <RedirectLoggedIn />\n    </div>\n  )\n}\n\nexport default Login\n",
        "full_content": "\"use client\"\nimport AuthForm from \"@/components/container/auth-form\"\nimport RedirectLoggedIn from \"@/provider/redirect-loggedin\"\n\nconst Login = () => {\n  return (\n    <div className=\"flex flex-col items-center justify-center h-screen\">\n      <AuthForm type=\"login\" />\n      <RedirectLoggedIn />\n    </div>\n  )\n}\n\nexport default Login\n"
      }
    },
    {
      "file_path": "frontend/app/page.tsx",
      "relative_path": "frontend/app/page.tsx",
      "language": "typescript",
      "imports": [
        "@/components/card/feature-card",
        "@/components/container/call-to-action",
        "lucide-react",
        "@/components/ui/blur-fade",
        "@/components/ui/separator",
        "@/components/ui/text-rotate",
        "@/components/ui/accordion",
        "@/lib/faqs",
        "@/components/container/feature-section",
        "@/lib/features"
      ],
      "exports": [],
      "classes": [],
      "functions": [],
      "variables": [
        "Home"
      ],
      "description": "TypeScript React file containing basic code structure and definitions",
      "lines_of_code": 136,
      "metadata": {
        "size_bytes": 5527,
        "last_modified": "2025-10-07T19:50:38.721Z"
      },
      "analysis_enhanced": {
        "complexity_score": 7,
        "detected_issues": [],
        "semantic_tags": [
          "typescript",
          "react",
          "background-jobs"
        ],
        "priority": "low",
        "summary_type": "rule-based",
        "code_snippet": "\"use client\"\n\nimport { FeatureCard } from \"@/components/card/feature-card\"\nimport CallToAction from \"@/components/container/call-to-action\"\nimport { HelpCircle, MoveDown, Package, Sparkles } from \"lucide-react\"\n\nimport BlurFade from \"@/components/ui/blur-fade\"\nimport { Separator } from \"@/components/ui/separator\"\nimport TextRotate from \"@/components/ui/text-rotate\"\n\nimport {\n  Accordion,\n  AccordionContent,\n  AccordionItem,\n  AccordionTrigger,\n} from \"@/components/ui/accordion\"\nimport { faqs } from \"@/lib/faqs\"\nimport { FeatureSteps } from \"@/components/container/feature-section\"\nimport { features } from \"@/lib/features\"\n\nconst Home = () => {\n  return (\n    <main className=\"flex text-primary flex-col h-full w-full container mx-auto\">\n      <section className=\"md:min-h-screen sm:h-[calc(100vh-65px)] bg-background text-foreground flex items-center\">\n        <main className=\"px-4 w-full py-8 sm:py-0\">\n          <div className=\"flex justify-center items-center gap-4 md:gap-8 sm:mb-16\">\n            <BlurFade delay={0.2} offset={15} inView={true} inViewMargin=\"0px\">\n              <div className=\"text-center space-y-6 mt-16\">\n                <h1 className=\"font-normal font-eb-garamond text-4xl sm:text-5xl md:text-6xl lg:text-7xl leading-tight text-neutral-900 dark:text-white\">\n                  Run{\" \"}\n                  <TextRotate\n                    texts={[\n                      \"Scripts\",\n                      \"Jobs\",\n                      \"Commands\",\n                      \"Processes\",\n                      \"Workflows\",\n                    ]}\n                    mainClassName=\"inline-block bg-[#1570EF] px-4 py-1 rounded-md text-white\"\n                    staggerFrom=\"first\"\n                    initial={{ y: \"100%\" }}\n                    animate={{ y: 0 }}\n                    exit={{ y: \"-100%\" }}\n                    transition={{ type: \"spring\", damping: 25, stiffness: 500 }}\n                    rotationInterval={2800}\n                  />{\" \"}\n                  <br /",
        "full_content": "\"use client\"\n\nimport { FeatureCard } from \"@/components/card/feature-card\"\nimport CallToAction from \"@/components/container/call-to-action\"\nimport { HelpCircle, MoveDown, Package, Sparkles } from \"lucide-react\"\n\nimport BlurFade from \"@/components/ui/blur-fade\"\nimport { Separator } from \"@/components/ui/separator\"\nimport TextRotate from \"@/components/ui/text-rotate\"\n\nimport {\n  Accordion,\n  AccordionContent,\n  AccordionItem,\n  AccordionTrigger,\n} from \"@/components/ui/accordion\"\nimport { faqs } from \"@/lib/faqs\"\nimport { FeatureSteps } from \"@/components/container/feature-section\"\nimport { features } from \"@/lib/features\"\n\nconst Home = () => {\n  return (\n    <main className=\"flex text-primary flex-col h-full w-full container mx-auto\">\n      <section className=\"md:min-h-screen sm:h-[calc(100vh-65px)] bg-background text-foreground flex items-center\">\n        <main className=\"px-4 w-full py-8 sm:py-0\">\n          <div className=\"flex justify-center items-center gap-4 md:gap-8 sm:mb-16\">\n            <BlurFade delay={0.2} offset={15} inView={true} inViewMargin=\"0px\">\n              <div className=\"text-center space-y-6 mt-16\">\n                <h1 className=\"font-normal font-eb-garamond text-4xl sm:text-5xl md:text-6xl lg:text-7xl leading-tight text-neutral-900 dark:text-white\">\n                  Run{\" \"}\n                  <TextRotate\n                    texts={[\n                      \"Scripts\",\n                      \"Jobs\",\n                      \"Commands\",\n                      \"Processes\",\n                      \"Workflows\",\n                    ]}\n                    mainClassName=\"inline-block bg-[#1570EF] px-4 py-1 rounded-md text-white\"\n                    staggerFrom=\"first\"\n                    initial={{ y: \"100%\" }}\n                    animate={{ y: 0 }}\n                    exit={{ y: \"-100%\" }}\n                    transition={{ type: \"spring\", damping: 25, stiffness: 500 }}\n                    rotationInterval={2800}\n                  />{\" \"}\n                  <br />\n                  Asynchronously Easily.\n                </h1>\n                <p className=\"text-base sm:text-lg text-muted-foreground dark:text-neutral-400 max-w-2xl mx-auto\">\n                  Qlio lets you execute scripts remotely, manage jobs in\n                  real-time, and stream output with zero hassle.\n                  {/* <br className=\"hidden sm:block\" /> */}\n                  Built for developers. Powered by queues. Designed to scale.\n                </p>\n              </div>\n            </BlurFade>\n          </div>\n\n          <BlurFade delay={0.4} offset={25} inView={true} inViewMargin=\"0px\">\n            <div className=\"grid grid-cols-1 md:grid-cols-3 md:gap-8 max-w-5xl mx-auto\">\n              <FeatureCard\n                icon={<Package className=\"w-5 h-5 sm:w-6 sm:h-6\" />}\n                text=\"Professional templates for showcasing your work\"\n              />\n              <FeatureCard\n                icon={<Sparkles className=\"w-5 h-5 sm:w-6 sm:h-6\" />}\n                text=\"Easy customization with live preview\"\n              />\n              <FeatureCard\n                icon={<HelpCircle className=\"w-5 h-5 sm:w-6 sm:h-6\" />}\n                text=\"Intuitive interface for effortless portfolio creation\"\n              />\n            </div>\n          </BlurFade>\n        </main>\n      </section>\n\n      <Separator className=\"mb-12 sm:mb-20\" />\n\n      <BlurFade delay={0.5} offset={30} inView={true} inViewMargin=\"0px\">\n        <section className=\"px-4 sm:px-0\">\n          <h1 className=\"font-medium font-eb-garamond text-2xl sm:text-3xl md:text-5xl lg:text-6xl leading-tight tracking-tight text-neutral-900 dark:text-white text-center mb-8\">\n            Create a Job in{\" \"}\n            <span className=\"underline underline-offset-8 decoration-blue-500\">\n              Minutes\n            </span>{\" \"}\n            <MoveDown className=\"inline-block w-10 h-10 ml-2 -mt-3\" />\n          </h1>\n          <FeatureSteps features={features} autoPlayInterval={3000} />\n        </section>\n      </BlurFade>\n\n      <Separator className=\"my-12 sm:my-20\" />\n\n      <BlurFade delay={0.6} offset={35} inView={true} inViewMargin=\"0px\">\n        <section>\n          <div className=\"px-8 py-16\">\n            <div className=\"mx-auto max-w-3xl space-y-12\">\n              <h1 className=\"font-medium font-eb-garamond text-2xl sm:text-3xl md:text-5xl lg:text-6xl leading-tight tracking-tight text-neutral-900 dark:text-white text-center mb-8\">\n                <span className=\"underline underline-offset-8 decoration-blue-500\">\n                  Frequently\n                </span>{\" \"}\n                Asked Questions{\" \"}\n              </h1>\n\n              <Accordion type=\"single\" collapsible className=\"mt-16 space-y-4\">\n                {faqs.map((faq) => (\n                  <AccordionItem key={faq.id} value={faq.id}>\n                    <AccordionTrigger className=\"dark:text-white\">\n                      {faq.question}\n                    </AccordionTrigger>\n                    <AccordionContent className=\"dark:text-neutral-400\">\n                      {faq.answer}\n                    </AccordionContent>\n                  </AccordionItem>\n                ))}\n              </Accordion>\n            </div>\n          </div>\n        </section>\n      </BlurFade>\n\n      <Separator className=\"my-12 sm:my-20\" />\n\n      <BlurFade delay={0.7} offset={40} inView={true} inViewMargin=\"0px\">\n        <section>\n          <CallToAction />\n        </section>\n      </BlurFade>\n    </main>\n  )\n}\n\nexport default Home\n"
      }
    },
    {
      "file_path": "frontend/app/sign-up/page.tsx",
      "relative_path": "frontend/app/sign-up/page.tsx",
      "language": "typescript",
      "imports": [
        "@/components/container/auth-form",
        "@/provider/redirect-loggedin"
      ],
      "exports": [],
      "classes": [],
      "functions": [],
      "variables": [
        "SignUp"
      ],
      "description": "TypeScript React file containing basic code structure and definitions",
      "lines_of_code": 15,
      "metadata": {
        "size_bytes": 337,
        "last_modified": "2025-10-07T19:50:38.721Z"
      },
      "analysis_enhanced": {
        "complexity_score": 1,
        "detected_issues": [],
        "semantic_tags": [
          "typescript",
          "authentication"
        ],
        "priority": "low",
        "summary_type": "rule-based",
        "code_snippet": "\"use client\"\nimport AuthForm from \"@/components/container/auth-form\"\nimport RedirectLoggedIn from \"@/provider/redirect-loggedin\"\n\nconst SignUp = () => {\n  return (\n    <div className=\"flex flex-col items-center justify-center h-screen\">\n      <AuthForm type=\"signup\" />\n      <RedirectLoggedIn />\n    </div>\n  )\n}\n\nexport default SignUp\n",
        "full_content": "\"use client\"\nimport AuthForm from \"@/components/container/auth-form\"\nimport RedirectLoggedIn from \"@/provider/redirect-loggedin\"\n\nconst SignUp = () => {\n  return (\n    <div className=\"flex flex-col items-center justify-center h-screen\">\n      <AuthForm type=\"signup\" />\n      <RedirectLoggedIn />\n    </div>\n  )\n}\n\nexport default SignUp\n"
      }
    },
    {
      "file_path": "frontend/components/card/feature-card.tsx",
      "relative_path": "frontend/components/card/feature-card.tsx",
      "language": "typescript",
      "imports": [
        "@/components/ui/card"
      ],
      "exports": [
        "FeatureCard"
      ],
      "classes": [],
      "functions": [
        {
          "name": "FeatureCard",
          "parameters": [
            "{ icon, text }"
          ],
          "returnType": "unknown",
          "isAsync": false,
          "isExported": true
        }
      ],
      "variables": [],
      "description": "React component: FeatureCard with 1 methods and 0 classes",
      "lines_of_code": 18,
      "metadata": {
        "size_bytes": 526,
        "last_modified": "2025-10-07T19:50:38.722Z"
      },
      "analysis_enhanced": {
        "complexity_score": 3,
        "detected_issues": [],
        "semantic_tags": [
          "typescript",
          "component"
        ],
        "priority": "low",
        "summary_type": "rule-based",
        "code_snippet": "import { Card, CardContent } from \"@/components/ui/card\";\n\ninterface FeatureCardProps {\n  icon: React.ReactNode;\n  text: string;\n}\n\nexport function FeatureCard({ icon, text }: FeatureCardProps) {\n  return (\n    <Card className=\"border-none shadow-none\">\n      <CardContent className=\"p-6 gap-4 flex items-center\">\n        <div className=\"p-6 rounded-full bg-neutral-100 dark:bg-neutral-800\">{icon}</div>\n        <p className=\"text-sm text-muted-foreground dark:text-neutral\">{text}</p>\n      </CardContent>\n    </Card>\n  );\n}\n",
        "full_content": "import { Card, CardContent } from \"@/components/ui/card\";\n\ninterface FeatureCardProps {\n  icon: React.ReactNode;\n  text: string;\n}\n\nexport function FeatureCard({ icon, text }: FeatureCardProps) {\n  return (\n    <Card className=\"border-none shadow-none\">\n      <CardContent className=\"p-6 gap-4 flex items-center\">\n        <div className=\"p-6 rounded-full bg-neutral-100 dark:bg-neutral-800\">{icon}</div>\n        <p className=\"text-sm text-muted-foreground dark:text-neutral\">{text}</p>\n      </CardContent>\n    </Card>\n  );\n}\n"
      }
    },
    {
      "file_path": "frontend/components/container/auth-form.tsx",
      "relative_path": "frontend/components/container/auth-form.tsx",
      "language": "typescript",
      "imports": [
        "@/components/ui/button",
        "@/components/ui/card",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/hooks/mutation",
        "@/hooks/use-toast",
        "@/lib/token-storage",
        "@/lib/utils",
        "next/link",
        "next/navigation",
        "react"
      ],
      "exports": [
        "AuthForm"
      ],
      "classes": [],
      "functions": [
        {
          "name": "AuthForm",
          "parameters": [
            "{ type }"
          ],
          "returnType": "unknown",
          "isAsync": false,
          "isExported": true
        }
      ],
      "variables": [],
      "description": "**Technical Description**\n\n### Purpose\nThe `auth-form.tsx` file is a React UI component responsible for rendering a login or sign-up form based on the provided `type` prop. It handles user authentication using the `useLogin` and `useSignUp` hooks from the `@/hooks/mutation` module and stores the access token using the `accessTokenStorage` from the `@/lib/token-storage` module.\n\n### Components\n- **AuthForm**: The main function component that renders the login or sign-up form.\n- **Button**: A UI component from the `@/components/ui/button` module used for rendering buttons.\n- **Card**: A UI component from the `@/components/ui/card` module used for rendering cards",
      "lines_of_code": 166,
      "metadata": {
        "size_bytes": 4792,
        "last_modified": "2025-10-07T19:50:38.722Z"
      },
      "analysis_enhanced": {
        "complexity_score": 10,
        "detected_issues": [],
        "semantic_tags": [
          "typescript",
          "component",
          "authentication",
          "nextjs",
          "react",
          "routing"
        ],
        "needs_ai_summary": true,
        "priority": "medium",
        "summary_type": "ai-generated",
        "code_snippet": "\"use client\"\nimport { Button } from \"@/components/ui/button\"\nimport {\n  Card,\n  CardAction,\n  CardContent,\n  CardDescription,\n  CardFooter,\n  CardHeader,\n  CardTitle,\n} from \"@/components/ui/card\"\nimport { Input } from \"@/components/ui/input\"\nimport { Label } from \"@/components/ui/label\"\nimport { useLogin, useSignUp } from \"@/hooks/mutation\"\nimport { useToast } from \"@/hooks/use-toast\"\nimport { accessTokenStorage } from \"@/lib/token-storage\"\nimport { getErrorMessage } from \"@/lib/utils\"\nimport Link from \"next/link\"\nimport { useRouter } from \"next/navigation\"\nimport { useState } from \"react\"\n\nfunction AuthForm({ type }: { type: \"login\" | \"signup\" }) {\n  const [formData, setFormData] = useState({\n    email: \"\",\n    password: \"\",\n    name: \"\",\n  })\n\n  const { mutate: signUp, isPending: isSignUpPending } = useSignUp()\n  const { mutate: login, isPending: isLoginPending } = useLogin()\n  const router = useRouter()\n  const { toast } = useToast()\n\n  const handleLogin = (e: React.MouseEvent<HTMLButtonElement>) => {\n    e.preventDefault()\n    login(\n      { email: formData.email, password: formData.password },\n      {\n        onSuccess: (data) => {\n          accessTokenStorage.set(data)\n          localStorage.setItem(\"user\", data)\n          router.push(\"/dashboard\")\n        },\n        onError: (error) => {\n          toast({\n            title: \"Login failed\",\n            description: getErrorMessage(error),\n            variant: \"destructive\",\n          })\n        },\n      }\n    )\n  }\n\n  const handleSignup = (e: React.MouseEvent<HTMLButtonElement>) => {\n    e.preventDefault()\n\n    signUp(formData, {\n      onSuccess: () => {\n        router.push(\"/login\")\n        toast({\n          title: \"Sign up successful\",\n          description: \"Please login to your account\",\n          variant: \"default\",\n        })\n      },\n      onError: (error) => {\n        toast({\n          title: \"Sign up failed\",\n          description: getErrorMessage(error),\n          variant: \"destructive\",\n        })\n",
        "full_content": "\"use client\"\nimport { Button } from \"@/components/ui/button\"\nimport {\n  Card,\n  CardAction,\n  CardContent,\n  CardDescription,\n  CardFooter,\n  CardHeader,\n  CardTitle,\n} from \"@/components/ui/card\"\nimport { Input } from \"@/components/ui/input\"\nimport { Label } from \"@/components/ui/label\"\nimport { useLogin, useSignUp } from \"@/hooks/mutation\"\nimport { useToast } from \"@/hooks/use-toast\"\nimport { accessTokenStorage } from \"@/lib/token-storage\"\nimport { getErrorMessage } from \"@/lib/utils\"\nimport Link from \"next/link\"\nimport { useRouter } from \"next/navigation\"\nimport { useState } from \"react\"\n\nfunction AuthForm({ type }: { type: \"login\" | \"signup\" }) {\n  const [formData, setFormData] = useState({\n    email: \"\",\n    password: \"\",\n    name: \"\",\n  })\n\n  const { mutate: signUp, isPending: isSignUpPending } = useSignUp()\n  const { mutate: login, isPending: isLoginPending } = useLogin()\n  const router = useRouter()\n  const { toast } = useToast()\n\n  const handleLogin = (e: React.MouseEvent<HTMLButtonElement>) => {\n    e.preventDefault()\n    login(\n      { email: formData.email, password: formData.password },\n      {\n        onSuccess: (data) => {\n          accessTokenStorage.set(data)\n          localStorage.setItem(\"user\", data)\n          router.push(\"/dashboard\")\n        },\n        onError: (error) => {\n          toast({\n            title: \"Login failed\",\n            description: getErrorMessage(error),\n            variant: \"destructive\",\n          })\n        },\n      }\n    )\n  }\n\n  const handleSignup = (e: React.MouseEvent<HTMLButtonElement>) => {\n    e.preventDefault()\n\n    signUp(formData, {\n      onSuccess: () => {\n        router.push(\"/login\")\n        toast({\n          title: \"Sign up successful\",\n          description: \"Please login to your account\",\n          variant: \"default\",\n        })\n      },\n      onError: (error) => {\n        toast({\n          title: \"Sign up failed\",\n          description: getErrorMessage(error),\n          variant: \"destructive\",\n        })\n      },\n    })\n  }\n\n  return (\n    <Card className=\"w-full max-w-sm\">\n      <CardHeader>\n        <CardTitle>\n          {type === \"login\"\n            ? \"Login to your account\"\n            : \"Sign up to your account\"}\n        </CardTitle>\n        <CardDescription>\n          {type === \"login\"\n            ? \"Enter your email below to login to your account\"\n            : \"Enter your email below to sign up to your account\"}\n        </CardDescription>\n        <CardAction>\n          <Link href={type === \"login\" ? \"/sign-up\" : \"/login\"}>\n            <Button variant=\"link\">\n              {type === \"login\" ? \"Sign up\" : \"Login\"}\n            </Button>\n          </Link>\n        </CardAction>\n      </CardHeader>\n      <CardContent>\n        <form>\n          <div className=\"flex flex-col gap-6\">\n            {type === \"signup\" && (\n              <div className=\"grid gap-2\">\n                <Label htmlFor=\"name\">Name</Label>\n                <Input\n                  id=\"name\"\n                  type=\"text\"\n                  placeholder=\"John Doe\"\n                  required\n                  value={formData.name}\n                  onChange={(e) =>\n                    setFormData({ ...formData, name: e.target.value })\n                  }\n                />\n              </div>\n            )}\n            <div className=\"grid gap-2\">\n              <Label htmlFor=\"email\">Email</Label>\n              <Input\n                id=\"email\"\n                type=\"email\"\n                placeholder=\"m@example.com\"\n                required\n                value={formData.email}\n                onChange={(e) =>\n                  setFormData({ ...formData, email: e.target.value })\n                }\n              />\n            </div>\n            <div className=\"grid gap-2\">\n              <div className=\"flex items-center\">\n                <Label htmlFor=\"password\">Password</Label>\n              </div>\n              <Input\n                id=\"password\"\n                type=\"password\"\n                required\n                value={formData.password}\n                onChange={(e) =>\n                  setFormData({ ...formData, password: e.target.value })\n                }\n              />\n            </div>\n          </div>\n        </form>\n      </CardContent>\n      <CardFooter className=\"flex-col gap-2\">\n        <Button\n          onClick={(e) => (type === \"login\" ? handleLogin(e) : handleSignup(e))}\n          className=\"w-full cursor-pointer\"\n          disabled={isLoginPending || isSignUpPending}\n        >\n          {type === \"login\"\n            ? isLoginPending\n              ? \"Logging in...\"\n              : \"Login\"\n            : isSignUpPending\n            ? \"Signing up...\"\n            : \"Sign up\"}\n        </Button>\n      </CardFooter>\n    </Card>\n  )\n}\n\nexport default AuthForm\n"
      }
    },
    {
      "file_path": "frontend/components/container/call-to-action.tsx",
      "relative_path": "frontend/components/container/call-to-action.tsx",
      "language": "typescript",
      "imports": [
        "lucide-react",
        "@/components/ui/button",
        "next/link"
      ],
      "exports": [
        "CallToAction"
      ],
      "classes": [],
      "functions": [
        {
          "name": "CallToAction",
          "parameters": [],
          "returnType": "unknown",
          "isAsync": false,
          "isExported": true
        }
      ],
      "variables": [],
      "description": "React component: CallToAction with 1 methods and 0 classes",
      "lines_of_code": 34,
      "metadata": {
        "size_bytes": 1477,
        "last_modified": "2025-10-07T19:50:38.722Z"
      },
      "analysis_enhanced": {
        "complexity_score": 4,
        "detected_issues": [],
        "semantic_tags": [
          "typescript",
          "component",
          "react",
          "nextjs",
          "background-jobs"
        ],
        "priority": "low",
        "summary_type": "rule-based",
        "code_snippet": "import { MoveRight } from \"lucide-react\"\nimport { Button } from \"@/components/ui/button\"\nimport Link from \"next/link\"\n\nexport default function CallToAction() {\n  return (\n    <div className=\"w-full px-4 sm:px-6\">\n      <div className=\"container mx-auto\">\n        <div className=\"flex flex-col text-center bg-muted/50 rounded-md p-6 sm:p-8 lg:p-14 gap-6 sm:gap-8 items-center\">\n          <div className=\"flex flex-col gap-2 sm:gap-4\">\n            <h3 className=\"font-medium font-eb-garamond text-3xl sm:text-4xl md:text-6xl tracking-tighter max-w-2xl font-regular dark:text-white\">\n              Build Your Job Queue{\" \"}\n              <span className=\"underline underline-offset-8 decoration-blue-500\">\n                Now!\n              </span>\n            </h3>\n            <p className=\"text-base sm:text-lg leading-relaxed tracking-tight text-muted-foreground max-w-2xl mx-auto\">\n              Create a job queue for your business in minutes. Our job queue\n              builder app helps you create a professional, eye-catching job\n              queue in minutes. Stand out from the crowd and make a lasting\n              impression on potential employers or clients.\n            </p>\n          </div>\n          <Link href=\"/dashboard/create-job\">\n            <Button className=\"gap-2 sm:gap-4 w-full md:w-auto min-w-[200px]\">\n              Get Started <MoveRight className=\"w-4 h-4\" />\n            </Button>\n          </Link>\n        </div>\n      </div>\n    </div>\n  )\n}\n",
        "full_content": "import { MoveRight } from \"lucide-react\"\nimport { Button } from \"@/components/ui/button\"\nimport Link from \"next/link\"\n\nexport default function CallToAction() {\n  return (\n    <div className=\"w-full px-4 sm:px-6\">\n      <div className=\"container mx-auto\">\n        <div className=\"flex flex-col text-center bg-muted/50 rounded-md p-6 sm:p-8 lg:p-14 gap-6 sm:gap-8 items-center\">\n          <div className=\"flex flex-col gap-2 sm:gap-4\">\n            <h3 className=\"font-medium font-eb-garamond text-3xl sm:text-4xl md:text-6xl tracking-tighter max-w-2xl font-regular dark:text-white\">\n              Build Your Job Queue{\" \"}\n              <span className=\"underline underline-offset-8 decoration-blue-500\">\n                Now!\n              </span>\n            </h3>\n            <p className=\"text-base sm:text-lg leading-relaxed tracking-tight text-muted-foreground max-w-2xl mx-auto\">\n              Create a job queue for your business in minutes. Our job queue\n              builder app helps you create a professional, eye-catching job\n              queue in minutes. Stand out from the crowd and make a lasting\n              impression on potential employers or clients.\n            </p>\n          </div>\n          <Link href=\"/dashboard/create-job\">\n            <Button className=\"gap-2 sm:gap-4 w-full md:w-auto min-w-[200px]\">\n              Get Started <MoveRight className=\"w-4 h-4\" />\n            </Button>\n          </Link>\n        </div>\n      </div>\n    </div>\n  )\n}\n"
      }
    },
    {
      "file_path": "frontend/components/container/feature-section.tsx",
      "relative_path": "frontend/components/container/feature-section.tsx",
      "language": "typescript",
      "imports": [
        "react",
        "framer-motion",
        "next/image",
        "@/lib/utils"
      ],
      "exports": [
        "FeatureSteps"
      ],
      "classes": [],
      "functions": [
        {
          "name": "FeatureSteps",
          "parameters": [
            "{\n  features,\n  autoPlayInterval = 3000,\n}"
          ],
          "returnType": "unknown",
          "isAsync": false,
          "isExported": true
        }
      ],
      "variables": [],
      "description": "React component: FeatureSteps with 1 methods and 0 classes",
      "lines_of_code": 103,
      "metadata": {
        "size_bytes": 3212,
        "last_modified": "2025-10-07T19:50:38.722Z"
      },
      "analysis_enhanced": {
        "complexity_score": 6,
        "detected_issues": [],
        "semantic_tags": [
          "typescript",
          "component",
          "react",
          "nextjs"
        ],
        "priority": "low",
        "summary_type": "rule-based",
        "code_snippet": "\"use client\"\n\nimport React, { useState, useEffect } from \"react\"\nimport { motion, AnimatePresence } from \"framer-motion\"\nimport Image from \"next/image\"\nimport { cn } from \"@/lib/utils\"\n\ninterface Feature {\n  step: string\n  title?: string\n  content: string\n  image: string\n}\n\ninterface FeatureStepsProps {\n  features: Feature[]\n  className?: string\n  title?: string\n  autoPlayInterval?: number\n  imageHeight?: string\n}\n\nexport function FeatureSteps({\n  features,\n  autoPlayInterval = 3000,\n}: FeatureStepsProps) {\n  const [currentFeature, setCurrentFeature] = useState(0)\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setCurrentFeature((prev) => (prev + 1) % features.length)\n    }, autoPlayInterval)\n\n    return () => clearInterval(interval)\n  }, [autoPlayInterval, features.length])\n\n  return (\n    <div className=\"flex flex-col gap-8 max-w-5xl mx-auto px-4 sm:px-6\">\n      <div className=\"relative aspect-[4/3] sm:aspect-[16/9] w-full\">\n        <AnimatePresence mode=\"wait\">\n          {features.map(\n            (feature, index) =>\n              index === currentFeature && (\n                <motion.div\n                  key={index}\n                  className=\"absolute inset-0 rounded-lg overflow-hidden border\"\n                  initial={{ y: 100, opacity: 0, rotateX: -20 }}\n                  animate={{ y: 0, opacity: 1, rotateX: 0 }}\n                  exit={{ y: -100, opacity: 0, rotateX: 20 }}\n                >\n                  <Image\n                    src={feature.image}\n                    alt={feature.step}\n                    className=\"w-full h-full object-contain transition-transform transform\"\n                    width={500}\n                    height={550}\n                    priority={index === 0}\n                  />\n                </motion.div>\n              )\n          )}\n        </AnimatePresence>\n      </div>\n\n      <div className=\"grid grid-cols-1 sm:grid-cols-3 gap-4\">\n        {features.map((feature, index) => (\n          <div\n         ",
        "full_content": "\"use client\"\n\nimport React, { useState, useEffect } from \"react\"\nimport { motion, AnimatePresence } from \"framer-motion\"\nimport Image from \"next/image\"\nimport { cn } from \"@/lib/utils\"\n\ninterface Feature {\n  step: string\n  title?: string\n  content: string\n  image: string\n}\n\ninterface FeatureStepsProps {\n  features: Feature[]\n  className?: string\n  title?: string\n  autoPlayInterval?: number\n  imageHeight?: string\n}\n\nexport function FeatureSteps({\n  features,\n  autoPlayInterval = 3000,\n}: FeatureStepsProps) {\n  const [currentFeature, setCurrentFeature] = useState(0)\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setCurrentFeature((prev) => (prev + 1) % features.length)\n    }, autoPlayInterval)\n\n    return () => clearInterval(interval)\n  }, [autoPlayInterval, features.length])\n\n  return (\n    <div className=\"flex flex-col gap-8 max-w-5xl mx-auto px-4 sm:px-6\">\n      <div className=\"relative aspect-[4/3] sm:aspect-[16/9] w-full\">\n        <AnimatePresence mode=\"wait\">\n          {features.map(\n            (feature, index) =>\n              index === currentFeature && (\n                <motion.div\n                  key={index}\n                  className=\"absolute inset-0 rounded-lg overflow-hidden border\"\n                  initial={{ y: 100, opacity: 0, rotateX: -20 }}\n                  animate={{ y: 0, opacity: 1, rotateX: 0 }}\n                  exit={{ y: -100, opacity: 0, rotateX: 20 }}\n                >\n                  <Image\n                    src={feature.image}\n                    alt={feature.step}\n                    className=\"w-full h-full object-contain transition-transform transform\"\n                    width={500}\n                    height={550}\n                    priority={index === 0}\n                  />\n                </motion.div>\n              )\n          )}\n        </AnimatePresence>\n      </div>\n\n      <div className=\"grid grid-cols-1 sm:grid-cols-3 gap-4\">\n        {features.map((feature, index) => (\n          <div\n            key={index}\n            className={cn(\n              \"relative p-4 rounded-lg cursor-pointer transition-all duration-300\",\n              index === currentFeature\n                ? \"bg-neutral-100 dark:bg-neutral-800\"\n                : \"hover:bg-neutral-50 dark:hover:bg-neutral-900\"\n            )}\n            onClick={() => setCurrentFeature(index)}\n          >\n            <div className=\"flex flex-col items-center text-center gap-3\">\n              <span\n                className={cn(\n                  \"w-8 h-8 rounded-full flex items-center justify-center text-sm font-medium\",\n                  index === currentFeature\n                    ? \"bg-[#1570EF] text-white\"\n                    : \"bg-neutral-200 dark:bg-neutral-700\"\n                )}\n              >\n                {feature.step}\n              </span>\n              <div>\n                <h3 className=\"text-base font-medium mb-1 dark:text-white\">\n                  {feature.title}\n                </h3>\n                <p className=\"text-sm text-neutral-600 dark:text-neutral-400\">\n                  {feature.content}\n                </p>\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  )\n}\n"
      }
    },
    {
      "file_path": "frontend/components/motion-primitives/morphing-dialog.tsx",
      "relative_path": "frontend/components/motion-primitives/morphing-dialog.tsx",
      "language": "typescript",
      "imports": [
        "react",
        "motion/react",
        "react-dom",
        "@/lib/utils",
        "lucide-react",
        "./useClickOutside"
      ],
      "exports": [
        "MorphingDialog",
        "MorphingDialogTrigger",
        "MorphingDialogContainer",
        "MorphingDialogContent",
        "MorphingDialogClose",
        "MorphingDialogTitle",
        "MorphingDialogSubtitle",
        "MorphingDialogDescription",
        "MorphingDialogImage"
      ],
      "classes": [],
      "functions": [
        {
          "name": "useMorphingDialog",
          "parameters": [],
          "returnType": "unknown",
          "isAsync": false,
          "isExported": false
        },
        {
          "name": "MorphingDialogProvider",
          "parameters": [
            "{ children, transition }"
          ],
          "returnType": "unknown",
          "isAsync": false,
          "isExported": false
        },
        {
          "name": "MorphingDialog",
          "parameters": [
            "{ children, transition }"
          ],
          "returnType": "unknown",
          "isAsync": false,
          "isExported": true
        },
        {
          "name": "MorphingDialogTrigger",
          "parameters": [
            "{\n  children,\n  className,\n  style,\n  triggerRef,\n}"
          ],
          "returnType": "unknown",
          "isAsync": false,
          "isExported": true
        },
        {
          "name": "MorphingDialogContent",
          "parameters": [
            "{ children, className, style }"
          ],
          "returnType": "unknown",
          "isAsync": false,
          "isExported": true
        },
        {
          "name": "MorphingDialogContainer",
          "parameters": [
            "{ children }"
          ],
          "returnType": "unknown",
          "isAsync": false,
          "isExported": true
        },
        {
          "name": "MorphingDialogTitle",
          "parameters": [
            "{ children, className, style }"
          ],
          "returnType": "unknown",
          "isAsync": false,
          "isExported": true
        },
        {
          "name": "MorphingDialogSubtitle",
          "parameters": [
            "{ children, className, style }"
          ],
          "returnType": "unknown",
          "isAsync": false,
          "isExported": true
        },
        {
          "name": "MorphingDialogDescription",
          "parameters": [
            "{\n  children,\n  className,\n  variants,\n  disableLayoutAnimation,\n}"
          ],
          "returnType": "unknown",
          "isAsync": false,
          "isExported": true
        },
        {
          "name": "MorphingDialogImage",
          "parameters": [
            "{ src, alt, className, style }"
          ],
          "returnType": "unknown",
          "isAsync": false,
          "isExported": true
        },
        {
          "name": "MorphingDialogClose",
          "parameters": [
            "{ children, className, variants }"
          ],
          "returnType": "unknown",
          "isAsync": false,
          "isExported": true
        }
      ],
      "variables": [
        "MorphingDialogContext"
      ],
      "description": "**Technical Description**\n\n### Purpose\nThe `morphing-dialog.tsx` file is a React UI component that provides a morphing dialog functionality. It allows users to create a dialog box that can be triggered by a button or other interactive element, and the dialog box can be customized with various props.\n\n### Components\nThe file exports several components:\n\n* `MorphingDialogContext`: a React context that provides the necessary state and functions for the morphing dialog.\n* `useMorphingDialog`: a custom hook that provides the context value to the components.\n* `MorphingDialogProvider`: a provider component that wraps the children with the morphing dialog context.\n* `MorphingDialog`: a component that wraps the children with the",
      "lines_of_code": 372,
      "metadata": {
        "size_bytes": 9682,
        "last_modified": "2025-10-07T19:50:38.723Z"
      },
      "analysis_enhanced": {
        "complexity_score": 30,
        "detected_issues": [],
        "semantic_tags": [
          "typescript",
          "component",
          "react"
        ],
        "needs_ai_summary": true,
        "priority": "high",
        "summary_type": "ai-generated",
        "code_snippet": "\"use client\";\n\nimport React, { useCallback, useContext, useEffect, useId, useMemo, useRef, useState } from \"react\";\nimport { motion, AnimatePresence, MotionConfig, Transition, Variant } from \"motion/react\";\nimport { createPortal } from \"react-dom\";\nimport { cn } from \"@/lib/utils\";\nimport { XIcon } from \"lucide-react\";\nimport useClickOutside from \"./useClickOutside\";\n\nexport type MorphingDialogContextType = {\n  isOpen: boolean;\n  setIsOpen: React.Dispatch<React.SetStateAction<boolean>>;\n  uniqueId: string;\n  triggerRef: React.RefObject<HTMLButtonElement | null>;\n};\n\nconst MorphingDialogContext = React.createContext<MorphingDialogContextType | null>(null);\n\nfunction useMorphingDialog() {\n  const context = useContext(MorphingDialogContext);\n  if (!context) {\n    throw new Error(\"useMorphingDialog must be used within a MorphingDialogProvider\");\n  }\n  return context;\n}\n\nexport type MorphingDialogProviderProps = {\n  children: React.ReactNode;\n  transition?: Transition;\n};\n\nfunction MorphingDialogProvider({ children, transition }: MorphingDialogProviderProps) {\n  const [isOpen, setIsOpen] = useState(false);\n  const uniqueId = useId();\n  const triggerRef = useRef<HTMLButtonElement>(null!);\n\n  const contextValue = useMemo(\n    () => ({\n      isOpen,\n      setIsOpen,\n      uniqueId,\n      triggerRef,\n    }),\n    [isOpen, uniqueId]\n  );\n\n  return (\n    <MorphingDialogContext.Provider value={contextValue}>\n      <MotionConfig transition={transition}>{children}</MotionConfig>\n    </MorphingDialogContext.Provider>\n  );\n}\n\nexport type MorphingDialogProps = {\n  children: React.ReactNode;\n  transition?: Transition;\n};\n\nfunction MorphingDialog({ children, transition }: MorphingDialogProps) {\n  return (\n    <MorphingDialogProvider>\n      <MotionConfig transition={transition}>{children}</MotionConfig>\n    </MorphingDialogProvider>\n  );\n}\n\nexport type MorphingDialogTriggerProps = {\n  children: React.ReactNode;\n  className?: string;\n  style?: React.CSSProperties;\n  triggerRef?: React.Re",
        "full_content": "\"use client\";\n\nimport React, { useCallback, useContext, useEffect, useId, useMemo, useRef, useState } from \"react\";\nimport { motion, AnimatePresence, MotionConfig, Transition, Variant } from \"motion/react\";\nimport { createPortal } from \"react-dom\";\nimport { cn } from \"@/lib/utils\";\nimport { XIcon } from \"lucide-react\";\nimport useClickOutside from \"./useClickOutside\";\n\nexport type MorphingDialogContextType = {\n  isOpen: boolean;\n  setIsOpen: React.Dispatch<React.SetStateAction<boolean>>;\n  uniqueId: string;\n  triggerRef: React.RefObject<HTMLButtonElement | null>;\n};\n\nconst MorphingDialogContext = React.createContext<MorphingDialogContextType | null>(null);\n\nfunction useMorphingDialog() {\n  const context = useContext(MorphingDialogContext);\n  if (!context) {\n    throw new Error(\"useMorphingDialog must be used within a MorphingDialogProvider\");\n  }\n  return context;\n}\n\nexport type MorphingDialogProviderProps = {\n  children: React.ReactNode;\n  transition?: Transition;\n};\n\nfunction MorphingDialogProvider({ children, transition }: MorphingDialogProviderProps) {\n  const [isOpen, setIsOpen] = useState(false);\n  const uniqueId = useId();\n  const triggerRef = useRef<HTMLButtonElement>(null!);\n\n  const contextValue = useMemo(\n    () => ({\n      isOpen,\n      setIsOpen,\n      uniqueId,\n      triggerRef,\n    }),\n    [isOpen, uniqueId]\n  );\n\n  return (\n    <MorphingDialogContext.Provider value={contextValue}>\n      <MotionConfig transition={transition}>{children}</MotionConfig>\n    </MorphingDialogContext.Provider>\n  );\n}\n\nexport type MorphingDialogProps = {\n  children: React.ReactNode;\n  transition?: Transition;\n};\n\nfunction MorphingDialog({ children, transition }: MorphingDialogProps) {\n  return (\n    <MorphingDialogProvider>\n      <MotionConfig transition={transition}>{children}</MotionConfig>\n    </MorphingDialogProvider>\n  );\n}\n\nexport type MorphingDialogTriggerProps = {\n  children: React.ReactNode;\n  className?: string;\n  style?: React.CSSProperties;\n  triggerRef?: React.RefObject<HTMLButtonElement>;\n};\n\nfunction MorphingDialogTrigger({\n  children,\n  className,\n  style,\n  triggerRef,\n}: MorphingDialogTriggerProps) {\n  const { setIsOpen, isOpen, uniqueId } = useMorphingDialog();\n\n  const handleClick = useCallback(() => {\n    setIsOpen(!isOpen);\n  }, [isOpen, setIsOpen]);\n\n  const handleKeyDown = useCallback(\n    (event: React.KeyboardEvent) => {\n      if (event.key === \"Enter\" || event.key === \" \") {\n        event.preventDefault();\n        setIsOpen(!isOpen);\n      }\n    },\n    [isOpen, setIsOpen]\n  );\n\n  return (\n    <motion.button\n      ref={triggerRef}\n      layoutId={`dialog-${uniqueId}`}\n      className={cn(\"relative cursor-pointer\", className)}\n      onClick={handleClick}\n      onKeyDown={handleKeyDown}\n      style={style}\n      aria-haspopup=\"dialog\"\n      aria-expanded={isOpen}\n      aria-controls={`motion-ui-morphing-dialog-content-${uniqueId}`}\n      aria-label={`Open dialog ${uniqueId}`}\n    >\n      {children}\n    </motion.button>\n  );\n}\n\nexport type MorphingDialogContentProps = {\n  children: React.ReactNode;\n  className?: string;\n  style?: React.CSSProperties;\n};\n\nfunction MorphingDialogContent({ children, className, style }: MorphingDialogContentProps) {\n  const { setIsOpen, isOpen, uniqueId, triggerRef } = useMorphingDialog();\n  const containerRef = useRef<HTMLDivElement>(null!);\n  const [firstFocusableElement, setFirstFocusableElement] = useState<HTMLElement | null>(null);\n  const [lastFocusableElement, setLastFocusableElement] = useState<HTMLElement | null>(null);\n\n  useEffect(() => {\n    const handleKeyDown = (event: KeyboardEvent) => {\n      if (event.key === \"Escape\") {\n        setIsOpen(false);\n      }\n      if (event.key === \"Tab\") {\n        if (!firstFocusableElement || !lastFocusableElement) return;\n\n        if (event.shiftKey) {\n          if (document.activeElement === firstFocusableElement) {\n            event.preventDefault();\n            lastFocusableElement.focus();\n          }\n        } else {\n          if (document.activeElement === lastFocusableElement) {\n            event.preventDefault();\n            firstFocusableElement.focus();\n          }\n        }\n      }\n    };\n\n    document.addEventListener(\"keydown\", handleKeyDown);\n\n    return () => {\n      document.removeEventListener(\"keydown\", handleKeyDown);\n    };\n  }, [setIsOpen, firstFocusableElement, lastFocusableElement]);\n\n  useEffect(() => {\n    if (isOpen) {\n      document.body.classList.add(\"overflow-hidden\");\n      const focusableElements = containerRef.current?.querySelectorAll(\n        'button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])'\n      );\n      if (focusableElements && focusableElements.length > 0) {\n        setFirstFocusableElement(focusableElements[0] as HTMLElement);\n        setLastFocusableElement(focusableElements[focusableElements.length - 1] as HTMLElement);\n        (focusableElements[0] as HTMLElement).focus();\n      }\n    } else {\n      document.body.classList.remove(\"overflow-hidden\");\n      triggerRef.current?.focus();\n    }\n  }, [isOpen, triggerRef]);\n\n  useClickOutside(containerRef, () => {\n    if (isOpen) {\n      setIsOpen(false);\n    }\n  });\n\n  return (\n    <motion.div\n      ref={containerRef}\n      layoutId={`dialog-${uniqueId}`}\n      className={cn(\"overflow-hidden\", className)}\n      style={style}\n      role=\"dialog\"\n      aria-modal=\"true\"\n      aria-labelledby={`motion-ui-morphing-dialog-title-${uniqueId}`}\n      aria-describedby={`motion-ui-morphing-dialog-description-${uniqueId}`}\n    >\n      {children}\n    </motion.div>\n  );\n}\n\nexport type MorphingDialogContainerProps = {\n  children: React.ReactNode;\n  className?: string;\n  style?: React.CSSProperties;\n};\n\nfunction MorphingDialogContainer({ children }: MorphingDialogContainerProps) {\n  const { isOpen, uniqueId } = useMorphingDialog();\n  const [mounted, setMounted] = useState(false);\n\n  useEffect(() => {\n    setMounted(true);\n    return () => setMounted(false);\n  }, []);\n\n  if (!mounted) return null;\n\n  return createPortal(\n    <AnimatePresence initial={false} mode=\"sync\">\n      {isOpen && (\n        <>\n          <motion.div\n            key={`backdrop-${uniqueId}`}\n            className=\"fixed inset-0 h-full w-full bg-white/40 backdrop-blur-xs dark:bg-black/40\"\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            exit={{ opacity: 0 }}\n          />\n          <div className=\"fixed inset-0 z-50 flex items-center justify-center\">{children}</div>\n        </>\n      )}\n    </AnimatePresence>,\n    document.body\n  );\n}\n\nexport type MorphingDialogTitleProps = {\n  children: React.ReactNode;\n  className?: string;\n  style?: React.CSSProperties;\n};\n\nfunction MorphingDialogTitle({ children, className, style }: MorphingDialogTitleProps) {\n  const { uniqueId } = useMorphingDialog();\n\n  return (\n    <motion.div\n      layoutId={`dialog-title-container-${uniqueId}`}\n      className={className}\n      style={style}\n      layout\n    >\n      {children}\n    </motion.div>\n  );\n}\n\nexport type MorphingDialogSubtitleProps = {\n  children: React.ReactNode;\n  className?: string;\n  style?: React.CSSProperties;\n};\n\nfunction MorphingDialogSubtitle({ children, className, style }: MorphingDialogSubtitleProps) {\n  const { uniqueId } = useMorphingDialog();\n\n  return (\n    <motion.div\n      layoutId={`dialog-subtitle-container-${uniqueId}`}\n      className={className}\n      style={style}\n    >\n      {children}\n    </motion.div>\n  );\n}\n\nexport type MorphingDialogDescriptionProps = {\n  children: React.ReactNode;\n  className?: string;\n  disableLayoutAnimation?: boolean;\n  variants?: {\n    initial: Variant;\n    animate: Variant;\n    exit: Variant;\n  };\n};\n\nfunction MorphingDialogDescription({\n  children,\n  className,\n  variants,\n  disableLayoutAnimation,\n}: MorphingDialogDescriptionProps) {\n  const { uniqueId } = useMorphingDialog();\n\n  return (\n    <motion.div\n      key={`dialog-description-${uniqueId}`}\n      layoutId={disableLayoutAnimation ? undefined : `dialog-description-content-${uniqueId}`}\n      variants={variants}\n      className={className}\n      initial=\"initial\"\n      animate=\"animate\"\n      exit=\"exit\"\n      id={`dialog-description-${uniqueId}`}\n    >\n      {children}\n    </motion.div>\n  );\n}\n\nexport type MorphingDialogImageProps = {\n  src: string;\n  alt: string;\n  className?: string;\n  style?: React.CSSProperties;\n};\n\nfunction MorphingDialogImage({ src, alt, className, style }: MorphingDialogImageProps) {\n  const { uniqueId } = useMorphingDialog();\n\n  return (\n    <motion.img\n      src={src}\n      alt={alt}\n      className={cn(className)}\n      layoutId={`dialog-img-${uniqueId}`}\n      style={style}\n    />\n  );\n}\n\nexport type MorphingDialogCloseProps = {\n  children?: React.ReactNode;\n  className?: string;\n  variants?: {\n    initial: Variant;\n    animate: Variant;\n    exit: Variant;\n  };\n};\n\nfunction MorphingDialogClose({ children, className, variants }: MorphingDialogCloseProps) {\n  const { setIsOpen, uniqueId } = useMorphingDialog();\n\n  const handleClose = useCallback(() => {\n    setIsOpen(false);\n  }, [setIsOpen]);\n\n  return (\n    <motion.button\n      onClick={handleClose}\n      type=\"button\"\n      aria-label=\"Close dialog\"\n      key={`dialog-close-${uniqueId}`}\n      className={cn(\"absolute top-6 right-6\", className)}\n      initial=\"initial\"\n      animate=\"animate\"\n      exit=\"exit\"\n      variants={variants}\n    >\n      {children || <XIcon size={24} />}\n    </motion.button>\n  );\n}\n\nexport {\n  MorphingDialog,\n  MorphingDialogTrigger,\n  MorphingDialogContainer,\n  MorphingDialogContent,\n  MorphingDialogClose,\n  MorphingDialogTitle,\n  MorphingDialogSubtitle,\n  MorphingDialogDescription,\n  MorphingDialogImage,\n};\n"
      }
    },
    {
      "file_path": "frontend/components/motion-primitives/useClickOutside.tsx",
      "relative_path": "frontend/components/motion-primitives/useClickOutside.tsx",
      "language": "typescript",
      "imports": [
        "react"
      ],
      "exports": [
        "useClickOutside"
      ],
      "classes": [],
      "functions": [
        {
          "name": "useClickOutside",
          "parameters": [
            "ref",
            "handler"
          ],
          "returnType": "void",
          "isAsync": false,
          "isExported": true
        }
      ],
      "variables": [],
      "description": "React component: useClickOutside with 1 methods and 0 classes",
      "lines_of_code": 27,
      "metadata": {
        "size_bytes": 755,
        "last_modified": "2025-10-07T19:50:38.723Z"
      },
      "analysis_enhanced": {
        "complexity_score": 3,
        "detected_issues": [],
        "semantic_tags": [
          "typescript",
          "component",
          "react"
        ],
        "priority": "low",
        "summary_type": "rule-based",
        "code_snippet": "import { RefObject, useEffect } from 'react';\n\nfunction useClickOutside<T extends HTMLElement>(\n  ref: RefObject<T>,\n  handler: (event: MouseEvent | TouchEvent) => void\n): void {\n  useEffect(() => {\n    const handleClickOutside = (event: MouseEvent | TouchEvent) => {\n      if (!ref || !ref.current || ref.current.contains(event.target as Node)) {\n        return;\n      }\n\n      handler(event);\n    };\n\n    document.addEventListener('mousedown', handleClickOutside);\n    document.addEventListener('touchstart', handleClickOutside);\n\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n      document.removeEventListener('touchstart', handleClickOutside);\n    };\n  }, [ref, handler]);\n}\n\nexport default useClickOutside;\n",
        "full_content": "import { RefObject, useEffect } from 'react';\n\nfunction useClickOutside<T extends HTMLElement>(\n  ref: RefObject<T>,\n  handler: (event: MouseEvent | TouchEvent) => void\n): void {\n  useEffect(() => {\n    const handleClickOutside = (event: MouseEvent | TouchEvent) => {\n      if (!ref || !ref.current || ref.current.contains(event.target as Node)) {\n        return;\n      }\n\n      handler(event);\n    };\n\n    document.addEventListener('mousedown', handleClickOutside);\n    document.addEventListener('touchstart', handleClickOutside);\n\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n      document.removeEventListener('touchstart', handleClickOutside);\n    };\n  }, [ref, handler]);\n}\n\nexport default useClickOutside;\n"
      }
    },
    {
      "file_path": "frontend/components/shared/dashboard-sidebar.tsx",
      "relative_path": "frontend/components/shared/dashboard-sidebar.tsx",
      "language": "typescript",
      "imports": [
        "lucide-react",
        "next/link",
        "next/navigation",
        "@/components/ui/button",
        "@/constants",
        "@/lib/token-storage",
        "@/lib/utils",
        "./logo"
      ],
      "exports": [
        "DashboardSidebar"
      ],
      "classes": [],
      "functions": [
        {
          "name": "DashboardSidebar",
          "parameters": [],
          "returnType": "unknown",
          "isAsync": false,
          "isExported": true
        }
      ],
      "variables": [
        "navigationItems"
      ],
      "description": "React component: DashboardSidebar with 1 methods and 0 classes",
      "lines_of_code": 92,
      "metadata": {
        "size_bytes": 2738,
        "last_modified": "2025-10-07T19:50:38.723Z"
      },
      "analysis_enhanced": {
        "complexity_score": 6,
        "detected_issues": [
          {
            "type": "best-practice",
            "severity": "medium",
            "description": "Missing error handling for async operations",
            "category": "missing-error-handling"
          }
        ],
        "semantic_tags": [
          "typescript",
          "component",
          "react",
          "nextjs",
          "http-client",
          "routing",
          "background-jobs"
        ],
        "priority": "low",
        "summary_type": "rule-based",
        "code_snippet": "\"use client\"\n\nimport { Activity, Home, LogOut, Plus, Settings, Terminal } from \"lucide-react\"\nimport Link from \"next/link\"\nimport { usePathname, useRouter } from \"next/navigation\"\n\nimport { Button } from \"@/components/ui/button\"\nimport { APP_NAME, APP_VERSION } from \"@/constants\"\nimport { accessTokenStorage } from \"@/lib/token-storage\"\nimport { cn } from \"@/lib/utils\"\nimport { Logo } from \"./logo\"\n\nconst navigationItems = [\n  { title: \"Dashboard\", icon: Home, href: \"/dashboard\" },\n  { title: \"Jobs\", icon: Terminal, href: \"/dashboard/jobs\" },\n  { title: \"Settings\", icon: Settings, href: \"/dashboard/settings\" },\n]\n\nexport function DashboardSidebar() {\n  const pathname = usePathname()\n  const router = useRouter()\n\n  const handleLogout = async () => {\n    accessTokenStorage.delete()\n    await fetch(\"/api/logout\")\n    router.push(\"/\")\n  }\n\n  return (\n    <div className=\"flex h-full w-64 flex-col border-r bg-card\">\n      {/* Header */}\n      <div className=\"flex h-16 items-center border-b px-6\">\n        <div className=\"flex items-center gap-2\">\n          <Logo />\n          <div className=\"flex flex-col\">\n            <span className=\"text-sm font-semibold\">{APP_NAME}</span>\n            <span className=\"text-xs text-muted-foreground\">\n              v{APP_VERSION}\n            </span>\n          </div>\n        </div>\n      </div>\n\n      {/* Navigation */}\n      <nav className=\"flex-1 space-y-1 p-4\">\n        {navigationItems.map((item) => {\n          const isActive =\n            pathname === item.href || pathname.split(item.href).pop() === \"\"\n          return (\n            <Link key={item.href} href={item.href}>\n              <Button\n                variant={isActive ? \"secondary\" : \"ghost\"}\n                className={cn(\n                  \"w-full justify-start gap-2\",\n                  isActive && \"bg-secondary font-medium\"\n                )}\n              >\n                <item.icon className=\"h-4 w-4\" />\n                {item.title}\n              </Button>\n            </Lin",
        "full_content": "\"use client\"\n\nimport { Activity, Home, LogOut, Plus, Settings, Terminal } from \"lucide-react\"\nimport Link from \"next/link\"\nimport { usePathname, useRouter } from \"next/navigation\"\n\nimport { Button } from \"@/components/ui/button\"\nimport { APP_NAME, APP_VERSION } from \"@/constants\"\nimport { accessTokenStorage } from \"@/lib/token-storage\"\nimport { cn } from \"@/lib/utils\"\nimport { Logo } from \"./logo\"\n\nconst navigationItems = [\n  { title: \"Dashboard\", icon: Home, href: \"/dashboard\" },\n  { title: \"Jobs\", icon: Terminal, href: \"/dashboard/jobs\" },\n  { title: \"Settings\", icon: Settings, href: \"/dashboard/settings\" },\n]\n\nexport function DashboardSidebar() {\n  const pathname = usePathname()\n  const router = useRouter()\n\n  const handleLogout = async () => {\n    accessTokenStorage.delete()\n    await fetch(\"/api/logout\")\n    router.push(\"/\")\n  }\n\n  return (\n    <div className=\"flex h-full w-64 flex-col border-r bg-card\">\n      {/* Header */}\n      <div className=\"flex h-16 items-center border-b px-6\">\n        <div className=\"flex items-center gap-2\">\n          <Logo />\n          <div className=\"flex flex-col\">\n            <span className=\"text-sm font-semibold\">{APP_NAME}</span>\n            <span className=\"text-xs text-muted-foreground\">\n              v{APP_VERSION}\n            </span>\n          </div>\n        </div>\n      </div>\n\n      {/* Navigation */}\n      <nav className=\"flex-1 space-y-1 p-4\">\n        {navigationItems.map((item) => {\n          const isActive =\n            pathname === item.href || pathname.split(item.href).pop() === \"\"\n          return (\n            <Link key={item.href} href={item.href}>\n              <Button\n                variant={isActive ? \"secondary\" : \"ghost\"}\n                className={cn(\n                  \"w-full justify-start gap-2\",\n                  isActive && \"bg-secondary font-medium\"\n                )}\n              >\n                <item.icon className=\"h-4 w-4\" />\n                {item.title}\n              </Button>\n            </Link>\n          )\n        })}\n      </nav>\n\n      {/* Quick Actions */}\n      <div className=\"border-t p-4 flex flex-col gap-2\">\n        <Link href=\"/dashboard/create-job\">\n          <Button className=\"w-full gap-2\">\n            <Plus className=\"h-4 w-4\" />\n            New Job\n          </Button>\n        </Link>\n\n        <Button\n          onClick={handleLogout}\n          variant={\"ghost\"}\n          className=\"w-full gap-2 cursor-pointer\"\n        >\n          <LogOut className=\"h-4 w-4\" />\n          Logout\n        </Button>\n\n        <div className=\"mt-3 flex items-center gap-2 text-xs text-muted-foreground\">\n          <Activity className=\"h-3 w-3 text-green-500\" />\n          System Online\n        </div>\n      </div>\n    </div>\n  )\n}\n"
      }
    },
    {
      "file_path": "frontend/components/shared/footer.tsx",
      "relative_path": "frontend/components/shared/footer.tsx",
      "language": "typescript",
      "imports": [
        "next/image",
        "next/link",
        "next/navigation",
        "./logo",
        "@/constants"
      ],
      "exports": [
        "Footer"
      ],
      "classes": [],
      "functions": [
        {
          "name": "Footer",
          "parameters": [],
          "returnType": "unknown",
          "isAsync": false,
          "isExported": true
        }
      ],
      "variables": [],
      "description": "React component: Footer with 1 methods and 0 classes",
      "lines_of_code": 51,
      "metadata": {
        "size_bytes": 2014,
        "last_modified": "2025-10-07T19:50:38.723Z"
      },
      "analysis_enhanced": {
        "complexity_score": 5,
        "detected_issues": [],
        "semantic_tags": [
          "typescript",
          "component",
          "nextjs"
        ],
        "priority": "low",
        "summary_type": "rule-based",
        "code_snippet": "\"use client\";\n\nimport Image from \"next/image\";\nimport Link from \"next/link\";\nimport { usePathname } from \"next/navigation\";\nimport { Logo } from \"./logo\";\nimport { APP_DESCRIPTION, APP_NAME } from \"@/constants\";\n\nexport default function Footer() {\n  const paths = usePathname().split(\"/\");\n\n  if (paths.includes(\"dashboard\")) {\n    return null;\n  }\n\n  return (\n    <footer className=\"mt-20 pt-10 px-4 md:px-6 bg-background border-t\">\n      <div className=\"mx-auto max-w-6xl\">\n        <div className=\"flex flex-col md:flex-row justify-between items-start\">\n          <div className=\"mb-8 md:mb-0\">\n            <Link className=\"flex items-center gap-2\" href=\"/\">\n              <Logo />\n              <span className=\"text-2xl font-bold\">{APP_NAME}</span>\n            </Link>\n            <p className=\"text-sm text-neutral-600 dark:text-neutral-400 mt-2\">{APP_DESCRIPTION}</p>\n          </div>\n          <div className=\"grid grid-cols-1 gap-8\">\n            <div>\n              <h3 className=\"text-lg font-semibold mb-4\">Quick Links</h3>\n              <ul className=\"space-y-2\">\n                <li className=\"text-neutral-600 hover:text-neutral-900 dark:text-neutral-400 dark:hover:text-white\">\n                  <Link href=\"/\">Home</Link>\n                </li>\n                <li className=\"text-neutral-600 hover:text-neutral-900 dark:text-neutral-400 dark:hover:text-white\">\n                  <Link href=\"/dashboard\">Dashboard</Link>\n                </li>\n                <li className=\"text-neutral-600 hover:text-neutral-900 dark:text-neutral-400 dark:hover:text-white\">\n                  <Link href=\"https://github.com/mdkaifansari04/qlio\">Github</Link>\n                </li>\n              </ul>\n            </div>\n          </div>\n        </div>\n        <h1 className=\"font-eb-garamond text-center md:text-left text-[5rem] md:text-[8rem] lg:text-[10rem] font-bold bg-clip-text text-transparent bg-gradient-to-b from-neutral-700 to-neutral-900\">\n          qlio.\n        </h1>\n      </div>\n    </f",
        "full_content": "\"use client\";\n\nimport Image from \"next/image\";\nimport Link from \"next/link\";\nimport { usePathname } from \"next/navigation\";\nimport { Logo } from \"./logo\";\nimport { APP_DESCRIPTION, APP_NAME } from \"@/constants\";\n\nexport default function Footer() {\n  const paths = usePathname().split(\"/\");\n\n  if (paths.includes(\"dashboard\")) {\n    return null;\n  }\n\n  return (\n    <footer className=\"mt-20 pt-10 px-4 md:px-6 bg-background border-t\">\n      <div className=\"mx-auto max-w-6xl\">\n        <div className=\"flex flex-col md:flex-row justify-between items-start\">\n          <div className=\"mb-8 md:mb-0\">\n            <Link className=\"flex items-center gap-2\" href=\"/\">\n              <Logo />\n              <span className=\"text-2xl font-bold\">{APP_NAME}</span>\n            </Link>\n            <p className=\"text-sm text-neutral-600 dark:text-neutral-400 mt-2\">{APP_DESCRIPTION}</p>\n          </div>\n          <div className=\"grid grid-cols-1 gap-8\">\n            <div>\n              <h3 className=\"text-lg font-semibold mb-4\">Quick Links</h3>\n              <ul className=\"space-y-2\">\n                <li className=\"text-neutral-600 hover:text-neutral-900 dark:text-neutral-400 dark:hover:text-white\">\n                  <Link href=\"/\">Home</Link>\n                </li>\n                <li className=\"text-neutral-600 hover:text-neutral-900 dark:text-neutral-400 dark:hover:text-white\">\n                  <Link href=\"/dashboard\">Dashboard</Link>\n                </li>\n                <li className=\"text-neutral-600 hover:text-neutral-900 dark:text-neutral-400 dark:hover:text-white\">\n                  <Link href=\"https://github.com/mdkaifansari04/qlio\">Github</Link>\n                </li>\n              </ul>\n            </div>\n          </div>\n        </div>\n        <h1 className=\"font-eb-garamond text-center md:text-left text-[5rem] md:text-[8rem] lg:text-[10rem] font-bold bg-clip-text text-transparent bg-gradient-to-b from-neutral-700 to-neutral-900\">\n          qlio.\n        </h1>\n      </div>\n    </footer>\n  );\n}\n"
      }
    },
    {
      "file_path": "frontend/components/shared/logo.tsx",
      "relative_path": "frontend/components/shared/logo.tsx",
      "language": "typescript",
      "imports": [
        "lucide-react"
      ],
      "exports": [
        "Logo"
      ],
      "classes": [],
      "functions": [
        {
          "name": "Logo",
          "parameters": [],
          "returnType": "unknown",
          "isAsync": false,
          "isExported": true
        }
      ],
      "variables": [],
      "description": "React component: Logo with 1 methods and 0 classes",
      "lines_of_code": 10,
      "metadata": {
        "size_bytes": 232,
        "last_modified": "2025-10-07T19:50:38.723Z"
      },
      "analysis_enhanced": {
        "complexity_score": 3,
        "detected_issues": [],
        "semantic_tags": [
          "typescript",
          "component",
          "react"
        ],
        "priority": "low",
        "summary_type": "rule-based",
        "code_snippet": "import { Zap } from \"lucide-react\"\n\nexport function Logo() {\n  return (\n    <div className=\"flex h-8 w-8 bg-primary items-center justify-center rounded-lg text-primary-foreground\">\n      <Zap className=\"h-4 w-4\" />\n    </div>\n  )\n}\n",
        "full_content": "import { Zap } from \"lucide-react\"\n\nexport function Logo() {\n  return (\n    <div className=\"flex h-8 w-8 bg-primary items-center justify-center rounded-lg text-primary-foreground\">\n      <Zap className=\"h-4 w-4\" />\n    </div>\n  )\n}\n"
      }
    },
    {
      "file_path": "frontend/components/shared/mode-toggler.tsx",
      "relative_path": "frontend/components/shared/mode-toggler.tsx",
      "language": "typescript",
      "imports": [
        "next-themes",
        "@/components/ui/button",
        "lucide-react"
      ],
      "exports": [
        "ModeToggle"
      ],
      "classes": [],
      "functions": [
        {
          "name": "ModeToggle",
          "parameters": [],
          "returnType": "unknown",
          "isAsync": false,
          "isExported": true
        }
      ],
      "variables": [],
      "description": "React component: ModeToggle with 1 methods and 0 classes",
      "lines_of_code": 22,
      "metadata": {
        "size_bytes": 662,
        "last_modified": "2025-10-07T19:50:38.723Z"
      },
      "analysis_enhanced": {
        "complexity_score": 4,
        "detected_issues": [],
        "semantic_tags": [
          "typescript",
          "component",
          "nextjs",
          "react"
        ],
        "priority": "low",
        "summary_type": "rule-based",
        "code_snippet": "\"use client\";\n\nimport { useTheme } from \"next-themes\";\nimport { Button } from \"@/components/ui/button\";\nimport { Moon, Sun } from \"lucide-react\";\n\nexport function ModeToggle() {\n  const { theme, setTheme } = useTheme();\n\n  return (\n    <Button\n      variant=\"ghost\"\n      size=\"icon\"\n      onClick={() => setTheme(theme === \"dark\" ? \"light\" : \"dark\")}\n    >\n      <Sun className=\"h-[1.2rem] w-[1.2rem] rotate-0 scale-100 transition-all dark:-rotate-90 dark:scale-0\" />\n      <Moon className=\"absolute h-[1.2rem] w-[1.2rem] rotate-90 scale-0 transition-all dark:rotate-0 dark:scale-100\" />\n      <span className=\"sr-only\">Toggle theme</span>\n    </Button>\n  );\n}\n",
        "full_content": "\"use client\";\n\nimport { useTheme } from \"next-themes\";\nimport { Button } from \"@/components/ui/button\";\nimport { Moon, Sun } from \"lucide-react\";\n\nexport function ModeToggle() {\n  const { theme, setTheme } = useTheme();\n\n  return (\n    <Button\n      variant=\"ghost\"\n      size=\"icon\"\n      onClick={() => setTheme(theme === \"dark\" ? \"light\" : \"dark\")}\n    >\n      <Sun className=\"h-[1.2rem] w-[1.2rem] rotate-0 scale-100 transition-all dark:-rotate-90 dark:scale-0\" />\n      <Moon className=\"absolute h-[1.2rem] w-[1.2rem] rotate-90 scale-0 transition-all dark:rotate-0 dark:scale-100\" />\n      <span className=\"sr-only\">Toggle theme</span>\n    </Button>\n  );\n}\n"
      }
    },
    {
      "file_path": "frontend/components/shared/navbar-container.tsx",
      "relative_path": "frontend/components/shared/navbar-container.tsx",
      "language": "typescript",
      "imports": [
        "next/navigation",
        "../ui/navbar"
      ],
      "exports": [
        "NavbarContainer"
      ],
      "classes": [],
      "functions": [
        {
          "name": "NavbarContainer",
          "parameters": [],
          "returnType": "unknown",
          "isAsync": false,
          "isExported": true
        }
      ],
      "variables": [],
      "description": "React component: NavbarContainer with 1 methods and 0 classes",
      "lines_of_code": 15,
      "metadata": {
        "size_bytes": 271,
        "last_modified": "2025-10-07T19:50:38.723Z"
      },
      "analysis_enhanced": {
        "complexity_score": 3,
        "detected_issues": [],
        "semantic_tags": [
          "typescript",
          "component",
          "nextjs"
        ],
        "priority": "low",
        "summary_type": "rule-based",
        "code_snippet": "\"use client\";\n\nimport { usePathname } from \"next/navigation\";\nimport { Navbar } from \"../ui/navbar\";\n\nexport default function NavbarContainer() {\n  const paths = usePathname().split(\"/\");\n\n  if (paths.includes(\"dashboard\")) {\n    return null;\n  }\n\n  return <Navbar />;\n}\n",
        "full_content": "\"use client\";\n\nimport { usePathname } from \"next/navigation\";\nimport { Navbar } from \"../ui/navbar\";\n\nexport default function NavbarContainer() {\n  const paths = usePathname().split(\"/\");\n\n  if (paths.includes(\"dashboard\")) {\n    return null;\n  }\n\n  return <Navbar />;\n}\n"
      }
    },
    {
      "file_path": "frontend/components/shared/skeleton.tsx",
      "relative_path": "frontend/components/shared/skeleton.tsx",
      "language": "typescript",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/skeleton",
        "lucide-react",
        "@/components/ui/button",
        "date-fns",
        "lucide-react",
        "next/link"
      ],
      "exports": [
        "CardSkeleton"
      ],
      "classes": [],
      "functions": [
        {
          "name": "CardSkeleton",
          "parameters": [
            "{ title, icon }"
          ],
          "returnType": "unknown",
          "isAsync": false,
          "isExported": true
        }
      ],
      "variables": [
        "StatsCardPendingView",
        "JobCardPendingView",
        "JobCardView"
      ],
      "description": "React component: CardSkeleton with 1 methods and 0 classes",
      "lines_of_code": 101,
      "metadata": {
        "size_bytes": 3371,
        "last_modified": "2025-10-07T19:50:38.724Z"
      },
      "analysis_enhanced": {
        "complexity_score": 8,
        "detected_issues": [],
        "semantic_tags": [
          "typescript",
          "component",
          "react",
          "nextjs"
        ],
        "priority": "low",
        "summary_type": "rule-based",
        "code_snippet": "import { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Skeleton } from \"@/components/ui/skeleton\";\nimport { CheckCircle, Clock, MemoryStick, Terminal, XCircle } from \"lucide-react\";\n\nimport { Button } from \"@/components/ui/button\";\nimport { format } from \"date-fns\";\nimport { Cpu, ExternalLink } from \"lucide-react\";\nimport Link from \"next/link\";\n\nexport default function CardSkeleton({ title, icon }: { title: string; icon: React.ReactNode }) {\n  return (\n    <Card>\n      <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n        <CardTitle className=\"text-sm font-medium\">{title}</CardTitle>\n        {icon}\n      </CardHeader>\n      <CardContent>\n        <div className=\"text-2xl font-bold\">\n          <Skeleton className=\"h-6 w-8\" />\n        </div>\n        <p className=\"text-xs text-muted-foreground mt-3\">\n          <Skeleton className=\"h-3 w-30\" />\n        </p>\n      </CardContent>\n    </Card>\n  );\n}\n\nexport const StatsCardPendingView = () => {\n  return (\n    <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-4\">\n      <CardSkeleton\n        title=\"Total Jobs\"\n        icon={<Terminal className=\"h-4 w-4 text-muted-foreground\" />}\n      />\n      <CardSkeleton\n        title=\"Successful Jobs\"\n        icon={<CheckCircle className=\"h-4 w-4 text-green-500\" />}\n      />\n      <CardSkeleton title=\"Failed Jobs\" icon={<XCircle className=\"h-4 w-4 text-red-500\" />} />\n      <CardSkeleton\n        title=\"Avg Execution Time\"\n        icon={<Clock className=\"h-4 w-4 text-muted-foreground\" />}\n      />\n    </div>\n  );\n};\n\nexport const JobCardPendingView = () => {\n  return (\n    <div className=\"grid gap-4\">\n      <JobCardView />\n      <JobCardView />\n    </div>\n  );\n};\n\nexport const JobCardView = () => {\n  return (\n    <Card className=\"hover:shadow-md transition-shadow\">\n      <CardHeader>\n        <div className=\"flex items-center justify-between\">\n          <CardTitle className=\"flex items-center gap-2 text-base w-full\"",
        "full_content": "import { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Skeleton } from \"@/components/ui/skeleton\";\nimport { CheckCircle, Clock, MemoryStick, Terminal, XCircle } from \"lucide-react\";\n\nimport { Button } from \"@/components/ui/button\";\nimport { format } from \"date-fns\";\nimport { Cpu, ExternalLink } from \"lucide-react\";\nimport Link from \"next/link\";\n\nexport default function CardSkeleton({ title, icon }: { title: string; icon: React.ReactNode }) {\n  return (\n    <Card>\n      <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n        <CardTitle className=\"text-sm font-medium\">{title}</CardTitle>\n        {icon}\n      </CardHeader>\n      <CardContent>\n        <div className=\"text-2xl font-bold\">\n          <Skeleton className=\"h-6 w-8\" />\n        </div>\n        <p className=\"text-xs text-muted-foreground mt-3\">\n          <Skeleton className=\"h-3 w-30\" />\n        </p>\n      </CardContent>\n    </Card>\n  );\n}\n\nexport const StatsCardPendingView = () => {\n  return (\n    <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-4\">\n      <CardSkeleton\n        title=\"Total Jobs\"\n        icon={<Terminal className=\"h-4 w-4 text-muted-foreground\" />}\n      />\n      <CardSkeleton\n        title=\"Successful Jobs\"\n        icon={<CheckCircle className=\"h-4 w-4 text-green-500\" />}\n      />\n      <CardSkeleton title=\"Failed Jobs\" icon={<XCircle className=\"h-4 w-4 text-red-500\" />} />\n      <CardSkeleton\n        title=\"Avg Execution Time\"\n        icon={<Clock className=\"h-4 w-4 text-muted-foreground\" />}\n      />\n    </div>\n  );\n};\n\nexport const JobCardPendingView = () => {\n  return (\n    <div className=\"grid gap-4\">\n      <JobCardView />\n      <JobCardView />\n    </div>\n  );\n};\n\nexport const JobCardView = () => {\n  return (\n    <Card className=\"hover:shadow-md transition-shadow\">\n      <CardHeader>\n        <div className=\"flex items-center justify-between\">\n          <CardTitle className=\"flex items-center gap-2 text-base w-full\">\n            <Terminal className=\"h-4 w-4\" />\n            <span className=\"font-mono text-sm truncate max-w-md\">\n              <Skeleton className=\"h-8 min-w-100\" />\n            </span>\n          </CardTitle>\n          <div className=\"flex items-center gap-2\">\n            <Button variant=\"ghost\" size=\"sm\" className=\"gap-1\">\n              <ExternalLink className=\"h-3 w-3\" />\n              View\n            </Button>\n          </div>\n        </div>\n      </CardHeader>\n      <CardContent>\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center gap-6 text-sm text-muted-foreground\">\n            <div className=\"flex items-center gap-1\">\n              <Cpu className=\"h-3 w-3\" />\n              <Skeleton className=\"h-5 w-10 rounded-sm\" />\n            </div>\n            <div className=\"flex items-center gap-1\">\n              <MemoryStick className=\"h-3 w-3\" />\n              <Skeleton className=\"h-5 w-10 rounded-sm\" />\n            </div>\n            <div className=\"flex items-center gap-1\">\n              <Clock className=\"h-3 w-3\" />\n              <Skeleton className=\"h-5 w-10 rounded-sm\" />\n            </div>\n          </div>\n          <div className=\"text-sm text-muted-foreground\">\n            <Skeleton className=\"h-5 w-20 rounded-sm \" />\n          </div>\n        </div>\n      </CardContent>\n    </Card>\n  );\n};\n"
      }
    },
    {
      "file_path": "frontend/components/shared/theme-provider.tsx",
      "relative_path": "frontend/components/shared/theme-provider.tsx",
      "language": "typescript",
      "imports": [
        "react",
        "next-themes"
      ],
      "exports": [
        "ThemeProvider"
      ],
      "classes": [],
      "functions": [
        {
          "name": "ThemeProvider",
          "parameters": [
            "{\n  children,\n  ...props\n}"
          ],
          "returnType": "unknown",
          "isAsync": false,
          "isExported": true
        }
      ],
      "variables": [],
      "description": "React component: ThemeProvider with 1 methods and 0 classes",
      "lines_of_code": 12,
      "metadata": {
        "size_bytes": 299,
        "last_modified": "2025-10-07T19:50:38.724Z"
      },
      "analysis_enhanced": {
        "complexity_score": 3,
        "detected_issues": [],
        "semantic_tags": [
          "typescript",
          "component",
          "react",
          "nextjs"
        ],
        "priority": "low",
        "summary_type": "rule-based",
        "code_snippet": "\"use client\";\n\nimport * as React from \"react\";\nimport { ThemeProvider as NextThemesProvider } from \"next-themes\";\n\nexport function ThemeProvider({\n  children,\n  ...props\n}: React.ComponentProps<typeof NextThemesProvider>) {\n  return <NextThemesProvider {...props}>{children}</NextThemesProvider>;\n}\n",
        "full_content": "\"use client\";\n\nimport * as React from \"react\";\nimport { ThemeProvider as NextThemesProvider } from \"next-themes\";\n\nexport function ThemeProvider({\n  children,\n  ...props\n}: React.ComponentProps<typeof NextThemesProvider>) {\n  return <NextThemesProvider {...props}>{children}</NextThemesProvider>;\n}\n"
      }
    },
    {
      "file_path": "frontend/components/shared/wrapper.tsx",
      "relative_path": "frontend/components/shared/wrapper.tsx",
      "language": "typescript",
      "imports": [
        "@/lib/utils",
        "framer-motion",
        "lucide-react"
      ],
      "exports": [
        "QueryWrapper",
        "DefaultLoader",
        "MainSectionWrapper"
      ],
      "classes": [],
      "functions": [
        {
          "name": "QueryWrapper",
          "parameters": [
            "props"
          ],
          "returnType": "unknown",
          "isAsync": false,
          "isExported": true
        },
        {
          "name": "DefaultLoader",
          "parameters": [
            "{ className }"
          ],
          "returnType": "unknown",
          "isAsync": false,
          "isExported": true
        },
        {
          "name": "QueryErrorIndicator",
          "parameters": [
            "props"
          ],
          "returnType": "unknown",
          "isAsync": false,
          "isExported": false
        },
        {
          "name": "MainSectionWrapper",
          "parameters": [
            "props"
          ],
          "returnType": "unknown",
          "isAsync": false,
          "isExported": true
        }
      ],
      "variables": [],
      "description": "React component: QueryWrapper with 4 methods and 0 classes",
      "lines_of_code": 61,
      "metadata": {
        "size_bytes": 2116,
        "last_modified": "2025-10-07T19:50:38.724Z"
      },
      "analysis_enhanced": {
        "complexity_score": 10,
        "detected_issues": [],
        "semantic_tags": [
          "typescript",
          "component",
          "react"
        ],
        "priority": "low",
        "summary_type": "rule-based",
        "code_snippet": "import { cn } from \"@/lib/utils\";\nimport { AnimatePresence } from \"framer-motion\";\nimport { Loader2, TriangleAlertIcon } from \"lucide-react\";\n\ninterface QueryWrapperProps {\n  data: unknown;\n  isPending: boolean;\n  isLoading?: boolean;\n  isError: boolean;\n  error: any;\n  view: React.ReactNode;\n  pendingView?: React.ReactNode;\n  className?: string;\n  emptyDataView?: React.ReactNode;\n}\n/* prettier-ignore */\nexport default function QueryWrapper(props: QueryWrapperProps) {\n  const canShowData = !props.isError && !props.error && !props.isPending && props.data;\n  const showError = props.isError && !props.isPending && props.error;\n  const showDefaultPendingView = (props.isPending && !props.pendingView) || props.isLoading;\n  // prettier-ignore\n  const showEmptyData = (!props.data && props.emptyDataView && !props.isPending) ||\n    (Array.isArray(props.data) && props.data?.length === 0 && props.emptyDataView && !props.isPending);\n\n  return (\n    <AnimatePresence mode=\"wait\">\n      {canShowData ? <div className={props.className}>{ props.view }</div> : null}\n      {showError && <QueryErrorIndicator />}\n      {props.isPending && (showDefaultPendingView ? <DefaultLoader /> : props.pendingView)}\n      {showEmptyData && props.emptyDataView}\n    </AnimatePresence>\n  );\n}\n\nexport function DefaultLoader({ className }: { className?: string }) {\n  return (\n    <div className={cn(\"flex items-center justify-center w-full\", className)}>\n      <Loader2 className=\"w-3 h-3 animate-spin\" />\n    </div>\n  );\n}\n\nfunction QueryErrorIndicator(props: { errorMessage?: string }) {\n  return (\n    <div className=\"flex flex-col items-center justify-center w-full gap-3 text-red-600\">\n      <TriangleAlertIcon className=\"w-10 h-10\" />\n      <p className=\"text-sm font-normal tracking-tighter\">\n        {props.errorMessage ? props.errorMessage : \"Something went wrong\"}\n      </p>\n    </div>\n  );\n}\n\nexport function MainSectionWrapper(props: { children: React.ReactNode; className?: string }) {\n  return (\n    <mai",
        "full_content": "import { cn } from \"@/lib/utils\";\nimport { AnimatePresence } from \"framer-motion\";\nimport { Loader2, TriangleAlertIcon } from \"lucide-react\";\n\ninterface QueryWrapperProps {\n  data: unknown;\n  isPending: boolean;\n  isLoading?: boolean;\n  isError: boolean;\n  error: any;\n  view: React.ReactNode;\n  pendingView?: React.ReactNode;\n  className?: string;\n  emptyDataView?: React.ReactNode;\n}\n/* prettier-ignore */\nexport default function QueryWrapper(props: QueryWrapperProps) {\n  const canShowData = !props.isError && !props.error && !props.isPending && props.data;\n  const showError = props.isError && !props.isPending && props.error;\n  const showDefaultPendingView = (props.isPending && !props.pendingView) || props.isLoading;\n  // prettier-ignore\n  const showEmptyData = (!props.data && props.emptyDataView && !props.isPending) ||\n    (Array.isArray(props.data) && props.data?.length === 0 && props.emptyDataView && !props.isPending);\n\n  return (\n    <AnimatePresence mode=\"wait\">\n      {canShowData ? <div className={props.className}>{ props.view }</div> : null}\n      {showError && <QueryErrorIndicator />}\n      {props.isPending && (showDefaultPendingView ? <DefaultLoader /> : props.pendingView)}\n      {showEmptyData && props.emptyDataView}\n    </AnimatePresence>\n  );\n}\n\nexport function DefaultLoader({ className }: { className?: string }) {\n  return (\n    <div className={cn(\"flex items-center justify-center w-full\", className)}>\n      <Loader2 className=\"w-3 h-3 animate-spin\" />\n    </div>\n  );\n}\n\nfunction QueryErrorIndicator(props: { errorMessage?: string }) {\n  return (\n    <div className=\"flex flex-col items-center justify-center w-full gap-3 text-red-600\">\n      <TriangleAlertIcon className=\"w-10 h-10\" />\n      <p className=\"text-sm font-normal tracking-tighter\">\n        {props.errorMessage ? props.errorMessage : \"Something went wrong\"}\n      </p>\n    </div>\n  );\n}\n\nexport function MainSectionWrapper(props: { children: React.ReactNode; className?: string }) {\n  return (\n    <main className={cn(\"w-full h-screen p-4 overflow-y-auto\", props.className)}>\n      {props.children}\n    </main>\n  );\n}\n"
      }
    },
    {
      "file_path": "frontend/components/ui/accordion.tsx",
      "relative_path": "frontend/components/ui/accordion.tsx",
      "language": "typescript",
      "imports": [
        "react",
        "@radix-ui/react-accordion",
        "lucide-react",
        "@/lib/utils"
      ],
      "exports": [
        "Accordion",
        "AccordionItem",
        "AccordionTrigger",
        "AccordionContent"
      ],
      "classes": [],
      "functions": [
        {
          "name": "Accordion",
          "parameters": [
            "{\n  ...props\n}"
          ],
          "returnType": "unknown",
          "isAsync": false,
          "isExported": true
        },
        {
          "name": "AccordionItem",
          "parameters": [
            "{\n  className,\n  ...props\n}"
          ],
          "returnType": "unknown",
          "isAsync": false,
          "isExported": true
        },
        {
          "name": "AccordionTrigger",
          "parameters": [
            "{\n  className,\n  children,\n  ...props\n}"
          ],
          "returnType": "unknown",
          "isAsync": false,
          "isExported": true
        },
        {
          "name": "AccordionContent",
          "parameters": [
            "{\n  className,\n  children,\n  ...props\n}"
          ],
          "returnType": "unknown",
          "isAsync": false,
          "isExported": true
        }
      ],
      "variables": [],
      "description": "React component: Accordion with 4 methods and 0 classes",
      "lines_of_code": 67,
      "metadata": {
        "size_bytes": 2053,
        "last_modified": "2025-10-07T19:50:38.724Z"
      },
      "analysis_enhanced": {
        "complexity_score": 10,
        "detected_issues": [],
        "semantic_tags": [
          "typescript",
          "component",
          "react"
        ],
        "priority": "low",
        "summary_type": "rule-based",
        "code_snippet": "\"use client\"\n\nimport * as React from \"react\"\nimport * as AccordionPrimitive from \"@radix-ui/react-accordion\"\nimport { ChevronDownIcon } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Accordion({\n  ...props\n}: React.ComponentProps<typeof AccordionPrimitive.Root>) {\n  return <AccordionPrimitive.Root data-slot=\"accordion\" {...props} />\n}\n\nfunction AccordionItem({\n  className,\n  ...props\n}: React.ComponentProps<typeof AccordionPrimitive.Item>) {\n  return (\n    <AccordionPrimitive.Item\n      data-slot=\"accordion-item\"\n      className={cn(\"border-b last:border-b-0\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction AccordionTrigger({\n  className,\n  children,\n  ...props\n}: React.ComponentProps<typeof AccordionPrimitive.Trigger>) {\n  return (\n    <AccordionPrimitive.Header className=\"flex\">\n      <AccordionPrimitive.Trigger\n        data-slot=\"accordion-trigger\"\n        className={cn(\n          \"focus-visible:border-ring focus-visible:ring-ring/50 flex flex-1 items-start justify-between gap-4 rounded-md py-4 text-left text-sm font-medium transition-all outline-none hover:underline focus-visible:ring-[3px] disabled:pointer-events-none disabled:opacity-50 [&[data-state=open]>svg]:rotate-180\",\n          className\n        )}\n        {...props}\n      >\n        {children}\n        <ChevronDownIcon className=\"text-muted-foreground pointer-events-none size-4 shrink-0 translate-y-0.5 transition-transform duration-200\" />\n      </AccordionPrimitive.Trigger>\n    </AccordionPrimitive.Header>\n  )\n}\n\nfunction AccordionContent({\n  className,\n  children,\n  ...props\n}: React.ComponentProps<typeof AccordionPrimitive.Content>) {\n  return (\n    <AccordionPrimitive.Content\n      data-slot=\"accordion-content\"\n      className=\"data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down overflow-hidden text-sm\"\n      {...props}\n    >\n      <div className={cn(\"pt-0 pb-4\", className)}>{children}</div>\n    </AccordionPrimitive.Content>\n  )\n}\n\nexport { Accordion,",
        "full_content": "\"use client\"\n\nimport * as React from \"react\"\nimport * as AccordionPrimitive from \"@radix-ui/react-accordion\"\nimport { ChevronDownIcon } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Accordion({\n  ...props\n}: React.ComponentProps<typeof AccordionPrimitive.Root>) {\n  return <AccordionPrimitive.Root data-slot=\"accordion\" {...props} />\n}\n\nfunction AccordionItem({\n  className,\n  ...props\n}: React.ComponentProps<typeof AccordionPrimitive.Item>) {\n  return (\n    <AccordionPrimitive.Item\n      data-slot=\"accordion-item\"\n      className={cn(\"border-b last:border-b-0\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction AccordionTrigger({\n  className,\n  children,\n  ...props\n}: React.ComponentProps<typeof AccordionPrimitive.Trigger>) {\n  return (\n    <AccordionPrimitive.Header className=\"flex\">\n      <AccordionPrimitive.Trigger\n        data-slot=\"accordion-trigger\"\n        className={cn(\n          \"focus-visible:border-ring focus-visible:ring-ring/50 flex flex-1 items-start justify-between gap-4 rounded-md py-4 text-left text-sm font-medium transition-all outline-none hover:underline focus-visible:ring-[3px] disabled:pointer-events-none disabled:opacity-50 [&[data-state=open]>svg]:rotate-180\",\n          className\n        )}\n        {...props}\n      >\n        {children}\n        <ChevronDownIcon className=\"text-muted-foreground pointer-events-none size-4 shrink-0 translate-y-0.5 transition-transform duration-200\" />\n      </AccordionPrimitive.Trigger>\n    </AccordionPrimitive.Header>\n  )\n}\n\nfunction AccordionContent({\n  className,\n  children,\n  ...props\n}: React.ComponentProps<typeof AccordionPrimitive.Content>) {\n  return (\n    <AccordionPrimitive.Content\n      data-slot=\"accordion-content\"\n      className=\"data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down overflow-hidden text-sm\"\n      {...props}\n    >\n      <div className={cn(\"pt-0 pb-4\", className)}>{children}</div>\n    </AccordionPrimitive.Content>\n  )\n}\n\nexport { Accordion, AccordionItem, AccordionTrigger, AccordionContent }\n"
      }
    },
    {
      "file_path": "frontend/components/ui/badge.tsx",
      "relative_path": "frontend/components/ui/badge.tsx",
      "language": "typescript",
      "imports": [
        "react",
        "@radix-ui/react-slot",
        "class-variance-authority",
        "@/lib/utils"
      ],
      "exports": [
        "Badge",
        "badgeVariants"
      ],
      "classes": [],
      "functions": [
        {
          "name": "Badge",
          "parameters": [
            "{\n  className,\n  variant,\n  asChild = false,\n  ...props\n}"
          ],
          "returnType": "unknown",
          "isAsync": false,
          "isExported": true
        }
      ],
      "variables": [
        "badgeVariants"
      ],
      "description": "React component: Badge with 1 methods and 0 classes",
      "lines_of_code": 47,
      "metadata": {
        "size_bytes": 1631,
        "last_modified": "2025-10-07T19:50:38.724Z"
      },
      "analysis_enhanced": {
        "complexity_score": 4,
        "detected_issues": [],
        "semantic_tags": [
          "typescript",
          "component",
          "react",
          "authentication"
        ],
        "priority": "low",
        "summary_type": "rule-based",
        "code_snippet": "import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center justify-center rounded-md border px-2 py-0.5 text-xs font-medium w-fit whitespace-nowrap shrink-0 [&>svg]:size-3 gap-1 [&>svg]:pointer-events-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive transition-[color,box-shadow] overflow-hidden\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground [a&]:hover:bg-primary/90\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground [a&]:hover:bg-secondary/90\",\n        destructive:\n          \"border-transparent bg-destructive text-white [a&]:hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"text-foreground [a&]:hover:bg-accent [a&]:hover:text-accent-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nfunction Badge({\n  className,\n  variant,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"span\"> &\n  VariantProps<typeof badgeVariants> & { asChild?: boolean }) {\n  const Comp = asChild ? Slot : \"span\"\n\n  return (\n    <Comp\n      data-slot=\"badge\"\n      className={cn(badgeVariants({ variant }), className)}\n      {...props}\n    />\n  )\n}\n\nexport { Badge, badgeVariants }\n",
        "full_content": "import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center justify-center rounded-md border px-2 py-0.5 text-xs font-medium w-fit whitespace-nowrap shrink-0 [&>svg]:size-3 gap-1 [&>svg]:pointer-events-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive transition-[color,box-shadow] overflow-hidden\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground [a&]:hover:bg-primary/90\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground [a&]:hover:bg-secondary/90\",\n        destructive:\n          \"border-transparent bg-destructive text-white [a&]:hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"text-foreground [a&]:hover:bg-accent [a&]:hover:text-accent-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nfunction Badge({\n  className,\n  variant,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"span\"> &\n  VariantProps<typeof badgeVariants> & { asChild?: boolean }) {\n  const Comp = asChild ? Slot : \"span\"\n\n  return (\n    <Comp\n      data-slot=\"badge\"\n      className={cn(badgeVariants({ variant }), className)}\n      {...props}\n    />\n  )\n}\n\nexport { Badge, badgeVariants }\n"
      }
    },
    {
      "file_path": "frontend/components/ui/blur-fade.tsx",
      "relative_path": "frontend/components/ui/blur-fade.tsx",
      "language": "typescript",
      "imports": [
        "react",
        "framer-motion"
      ],
      "exports": [
        "BlurFade"
      ],
      "classes": [],
      "functions": [
        {
          "name": "BlurFade",
          "parameters": [
            "{\n  children,\n  className,\n  variant,\n  duration = 0.4,\n  delay = 0,\n  offset = 6,\n  direction = \"down\",\n  inView = false,\n  inViewMargin = \"-50px\",\n  blur = \"6px\",\n}"
          ],
          "returnType": "unknown",
          "isAsync": false,
          "isExported": true
        }
      ],
      "variables": [],
      "description": "React component: BlurFade with 1 methods and 0 classes",
      "lines_of_code": 73,
      "metadata": {
        "size_bytes": 1750,
        "last_modified": "2025-10-07T19:50:38.724Z"
      },
      "analysis_enhanced": {
        "complexity_score": 3,
        "detected_issues": [],
        "semantic_tags": [
          "typescript",
          "component",
          "react"
        ],
        "priority": "low",
        "summary_type": "rule-based",
        "code_snippet": "\"use client\";\n\nimport { useRef } from \"react\";\nimport { AnimatePresence, motion, useInView, UseInViewOptions, Variants } from \"framer-motion\";\n\ntype MarginType = UseInViewOptions[\"margin\"];\n\ninterface BlurFadeProps {\n  children: React.ReactNode;\n  className?: string;\n  variant?: {\n    hidden: { y: number };\n    visible: { y: number };\n  };\n  duration?: number;\n  delay?: number;\n  offset?: number;\n  direction?: \"up\" | \"down\" | \"left\" | \"right\";\n  inView?: boolean;\n  inViewMargin?: MarginType;\n  blur?: string;\n}\n\nexport default function BlurFade({\n  children,\n  className,\n  variant,\n  duration = 0.4,\n  delay = 0,\n  offset = 6,\n  direction = \"down\",\n  inView = false,\n  inViewMargin = \"-50px\",\n  blur = \"6px\",\n}: BlurFadeProps) {\n  const ref = useRef(null);\n  const inViewResult = useInView(ref, { once: true, margin: inViewMargin });\n  const isInView = !inView || inViewResult;\n  const defaultVariants: Variants = {\n    hidden: {\n      [direction === \"left\" || direction === \"right\" ? \"x\" : \"y\"]:\n        direction === \"right\" || direction === \"down\" ? -offset : offset,\n      opacity: 0,\n      filter: `blur(${blur})`,\n    },\n    visible: {\n      [direction === \"left\" || direction === \"right\" ? \"x\" : \"y\"]: 0,\n      opacity: 1,\n      filter: `blur(0px)`,\n    },\n  };\n  const combinedVariants = variant || defaultVariants;\n  return (\n    <AnimatePresence>\n      <motion.div\n        ref={ref}\n        initial=\"hidden\"\n        animate={isInView ? \"visible\" : \"hidden\"}\n        exit=\"hidden\"\n        variants={combinedVariants}\n        transition={{\n          delay: 0.04 + delay,\n          duration,\n          ease: \"easeOut\",\n        }}\n        className={className}\n      >\n        {children}\n      </motion.div>\n    </AnimatePresence>\n  );\n}\n",
        "full_content": "\"use client\";\n\nimport { useRef } from \"react\";\nimport { AnimatePresence, motion, useInView, UseInViewOptions, Variants } from \"framer-motion\";\n\ntype MarginType = UseInViewOptions[\"margin\"];\n\ninterface BlurFadeProps {\n  children: React.ReactNode;\n  className?: string;\n  variant?: {\n    hidden: { y: number };\n    visible: { y: number };\n  };\n  duration?: number;\n  delay?: number;\n  offset?: number;\n  direction?: \"up\" | \"down\" | \"left\" | \"right\";\n  inView?: boolean;\n  inViewMargin?: MarginType;\n  blur?: string;\n}\n\nexport default function BlurFade({\n  children,\n  className,\n  variant,\n  duration = 0.4,\n  delay = 0,\n  offset = 6,\n  direction = \"down\",\n  inView = false,\n  inViewMargin = \"-50px\",\n  blur = \"6px\",\n}: BlurFadeProps) {\n  const ref = useRef(null);\n  const inViewResult = useInView(ref, { once: true, margin: inViewMargin });\n  const isInView = !inView || inViewResult;\n  const defaultVariants: Variants = {\n    hidden: {\n      [direction === \"left\" || direction === \"right\" ? \"x\" : \"y\"]:\n        direction === \"right\" || direction === \"down\" ? -offset : offset,\n      opacity: 0,\n      filter: `blur(${blur})`,\n    },\n    visible: {\n      [direction === \"left\" || direction === \"right\" ? \"x\" : \"y\"]: 0,\n      opacity: 1,\n      filter: `blur(0px)`,\n    },\n  };\n  const combinedVariants = variant || defaultVariants;\n  return (\n    <AnimatePresence>\n      <motion.div\n        ref={ref}\n        initial=\"hidden\"\n        animate={isInView ? \"visible\" : \"hidden\"}\n        exit=\"hidden\"\n        variants={combinedVariants}\n        transition={{\n          delay: 0.04 + delay,\n          duration,\n          ease: \"easeOut\",\n        }}\n        className={className}\n      >\n        {children}\n      </motion.div>\n    </AnimatePresence>\n  );\n}\n"
      }
    },
    {
      "file_path": "frontend/components/ui/button.tsx",
      "relative_path": "frontend/components/ui/button.tsx",
      "language": "typescript",
      "imports": [
        "react",
        "@radix-ui/react-slot",
        "class-variance-authority",
        "@/lib/utils"
      ],
      "exports": [
        "Button",
        "buttonVariants"
      ],
      "classes": [],
      "functions": [
        {
          "name": "Button",
          "parameters": [
            "{\n  className,\n  variant,\n  size,\n  asChild = false,\n  ...props\n}"
          ],
          "returnType": "unknown",
          "isAsync": false,
          "isExported": true
        }
      ],
      "variables": [
        "buttonVariants"
      ],
      "description": "React component: Button with 1 methods and 0 classes",
      "lines_of_code": 60,
      "metadata": {
        "size_bytes": 2123,
        "last_modified": "2025-10-07T19:50:38.724Z"
      },
      "analysis_enhanced": {
        "complexity_score": 4,
        "detected_issues": [],
        "semantic_tags": [
          "typescript",
          "component",
          "react",
          "authentication"
        ],
        "priority": "low",
        "summary_type": "rule-based",
        "code_snippet": "import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow-xs hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80\",\n        ghost:\n          \"hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\n        sm: \"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5\",\n        lg: \"h-10 rounded-md px-6 has-[>svg]:px-4\",\n        icon: \"size-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nfunction Button({\n  className,\n  variant,\n  size,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"button\"> &\n  VariantProps<typeof buttonVariants> & {\n    asChild?: boolean\n  }) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"button\"\n      cla",
        "full_content": "import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow-xs hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80\",\n        ghost:\n          \"hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\n        sm: \"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5\",\n        lg: \"h-10 rounded-md px-6 has-[>svg]:px-4\",\n        icon: \"size-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nfunction Button({\n  className,\n  variant,\n  size,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"button\"> &\n  VariantProps<typeof buttonVariants> & {\n    asChild?: boolean\n  }) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"button\"\n      className={cn(buttonVariants({ variant, size, className }))}\n      {...props}\n    />\n  )\n}\n\nexport { Button, buttonVariants }\n"
      }
    },
    {
      "file_path": "frontend/components/ui/card.tsx",
      "relative_path": "frontend/components/ui/card.tsx",
      "language": "typescript",
      "imports": [
        "react",
        "@/lib/utils"
      ],
      "exports": [
        "Card",
        "CardHeader",
        "CardFooter",
        "CardTitle",
        "CardAction",
        "CardDescription",
        "CardContent"
      ],
      "classes": [],
      "functions": [
        {
          "name": "Card",
          "parameters": [
            "{ className, ...props }"
          ],
          "returnType": "unknown",
          "isAsync": false,
          "isExported": true
        },
        {
          "name": "CardHeader",
          "parameters": [
            "{ className, ...props }"
          ],
          "returnType": "unknown",
          "isAsync": false,
          "isExported": true
        },
        {
          "name": "CardTitle",
          "parameters": [
            "{ className, ...props }"
          ],
          "returnType": "unknown",
          "isAsync": false,
          "isExported": true
        },
        {
          "name": "CardDescription",
          "parameters": [
            "{ className, ...props }"
          ],
          "returnType": "unknown",
          "isAsync": false,
          "isExported": true
        },
        {
          "name": "CardAction",
          "parameters": [
            "{ className, ...props }"
          ],
          "returnType": "unknown",
          "isAsync": false,
          "isExported": true
        },
        {
          "name": "CardContent",
          "parameters": [
            "{ className, ...props }"
          ],
          "returnType": "unknown",
          "isAsync": false,
          "isExported": true
        },
        {
          "name": "CardFooter",
          "parameters": [
            "{ className, ...props }"
          ],
          "returnType": "unknown",
          "isAsync": false,
          "isExported": true
        }
      ],
      "variables": [],
      "description": "**Technical Description**\n\n### Purpose\nThis TypeScript file (`card.tsx`) is a React UI component library that exports six reusable card components: `Card`, `CardHeader`, `CardFooter`, `CardTitle`, `CardAction`, and `CardDescription`. These components are designed to be used together to create a consistent card layout.\n\n### Components\nThe file contains the following key functions:\n\n1. **Card**: The main card component that wraps the entire card content.\n2. **CardHeader**: The header section of the card, typically containing the title and action buttons.\n3. **CardFooter**: The footer section of the card, often used for additional information or actions.\n4. **CardTitle**: The title section of the card, displaying",
      "lines_of_code": 93,
      "metadata": {
        "size_bytes": 1989,
        "last_modified": "2025-10-07T19:50:38.724Z"
      },
      "analysis_enhanced": {
        "complexity_score": 15,
        "detected_issues": [],
        "semantic_tags": [
          "typescript",
          "component",
          "react"
        ],
        "needs_ai_summary": true,
        "priority": "medium",
        "summary_type": "ai-generated",
        "code_snippet": "import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Card({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card\"\n      className={cn(\n        \"bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-header\"\n      className={cn(\n        \"@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-title\"\n      className={cn(\"leading-none font-semibold\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardDescription({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardAction({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-action\"\n      className={cn(\n        \"col-start-2 row-span-2 row-start-1 self-start justify-self-end\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardContent({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-content\"\n      className={cn(\"px-6\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-footer\"\n      className={cn(\"flex items-center px-6 [.border-t]:pt-6\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardAction,\n  CardDescription,\n  CardContent,\n}\n",
        "full_content": "import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Card({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card\"\n      className={cn(\n        \"bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-header\"\n      className={cn(\n        \"@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-title\"\n      className={cn(\"leading-none font-semibold\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardDescription({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardAction({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-action\"\n      className={cn(\n        \"col-start-2 row-span-2 row-start-1 self-start justify-self-end\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardContent({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-content\"\n      className={cn(\"px-6\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-footer\"\n      className={cn(\"flex items-center px-6 [.border-t]:pt-6\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardAction,\n  CardDescription,\n  CardContent,\n}\n"
      }
    },
    {
      "file_path": "frontend/components/ui/chart.tsx",
      "relative_path": "frontend/components/ui/chart.tsx",
      "language": "typescript",
      "imports": [
        "react",
        "recharts",
        "@/lib/utils"
      ],
      "exports": [
        "ChartContainer",
        "ChartTooltip",
        "ChartTooltipContent",
        "ChartLegend",
        "ChartLegendContent",
        "ChartStyle"
      ],
      "classes": [],
      "functions": [
        {
          "name": "useChart",
          "parameters": [],
          "returnType": "unknown",
          "isAsync": false,
          "isExported": false
        },
        {
          "name": "ChartContainer",
          "parameters": [
            "{\n  id,\n  className,\n  children,\n  config,\n  ...props\n}"
          ],
          "returnType": "unknown",
          "isAsync": false,
          "isExported": true
        },
        {
          "name": "ChartTooltipContent",
          "parameters": [
            "{\n  active,\n  payload,\n  className,\n  indicator = \"dot\",\n  hideLabel = false,\n  hideIndicator = false,\n  label,\n  labelFormatter,\n  labelClassName,\n  formatter,\n  color,\n  nameKey,\n  labelKey,\n}"
          ],
          "returnType": "unknown",
          "isAsync": false,
          "isExported": true
        },
        {
          "name": "ChartLegendContent",
          "parameters": [
            "{\n  className,\n  hideIcon = false,\n  payload,\n  verticalAlign = \"bottom\",\n  nameKey,\n}"
          ],
          "returnType": "unknown",
          "isAsync": false,
          "isExported": true
        },
        {
          "name": "getPayloadConfigFromPayload",
          "parameters": [
            "config",
            "payload",
            "key"
          ],
          "returnType": "unknown",
          "isAsync": false,
          "isExported": false
        }
      ],
      "variables": [
        "THEMES",
        "ChartContext",
        "ChartStyle",
        "ChartTooltip",
        "ChartLegend"
      ],
      "description": "**Purpose:** \nThis file defines a React UI component named `Chart` that utilizes the `recharts` library for chart rendering. The component is designed to be customizable through a configuration object, allowing users to tailor the appearance and behavior of the chart.\n\n**Components:**\n\n1. **ChartContainer**: The main component that wraps the chart and provides a context for the chart configuration.\n2. **ChartStyle**: A component that generates CSS styles for the chart based on the provided configuration.\n3. **ChartTooltip**: A component that renders a tooltip for the chart, utilizing the `recharts` library.\n4. **ChartTooltipContent**: A component that defines the content of the tooltip, allowing customization of the label, indicator, and other properties",
      "lines_of_code": 354,
      "metadata": {
        "size_bytes": 9781,
        "last_modified": "2025-10-07T19:50:38.724Z"
      },
      "analysis_enhanced": {
        "complexity_score": 17,
        "detected_issues": [
          {
            "type": "security",
            "severity": "high",
            "description": "Potential SQL injection vulnerability - use parameterized queries",
            "category": "sql-injection-risk"
          }
        ],
        "semantic_tags": [
          "typescript",
          "component",
          "react",
          "sql"
        ],
        "needs_ai_summary": true,
        "priority": "high",
        "summary_type": "ai-generated",
        "code_snippet": "\"use client\"\n\nimport * as React from \"react\"\nimport * as RechartsPrimitive from \"recharts\"\n\nimport { cn } from \"@/lib/utils\"\n\n// Format: { THEME_NAME: CSS_SELECTOR }\nconst THEMES = { light: \"\", dark: \".dark\" } as const\n\nexport type ChartConfig = {\n  [k in string]: {\n    label?: React.ReactNode\n    icon?: React.ComponentType\n  } & (\n    | { color?: string; theme?: never }\n    | { color?: never; theme: Record<keyof typeof THEMES, string> }\n  )\n}\n\ntype ChartContextProps = {\n  config: ChartConfig\n}\n\nconst ChartContext = React.createContext<ChartContextProps | null>(null)\n\nfunction useChart() {\n  const context = React.useContext(ChartContext)\n\n  if (!context) {\n    throw new Error(\"useChart must be used within a <ChartContainer />\")\n  }\n\n  return context\n}\n\nfunction ChartContainer({\n  id,\n  className,\n  children,\n  config,\n  ...props\n}: React.ComponentProps<\"div\"> & {\n  config: ChartConfig\n  children: React.ComponentProps<\n    typeof RechartsPrimitive.ResponsiveContainer\n  >[\"children\"]\n}) {\n  const uniqueId = React.useId()\n  const chartId = `chart-${id || uniqueId.replace(/:/g, \"\")}`\n\n  return (\n    <ChartContext.Provider value={{ config }}>\n      <div\n        data-slot=\"chart\"\n        data-chart={chartId}\n        className={cn(\n          \"[&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border flex aspect-video justify-center text-xs [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-hidden [&_.recharts-sector]:outline-hidden [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-surface]:outline-hidden\",\n          className\n        )}\n        {...props}\n      >\n        <ChartSt",
        "full_content": "\"use client\"\n\nimport * as React from \"react\"\nimport * as RechartsPrimitive from \"recharts\"\n\nimport { cn } from \"@/lib/utils\"\n\n// Format: { THEME_NAME: CSS_SELECTOR }\nconst THEMES = { light: \"\", dark: \".dark\" } as const\n\nexport type ChartConfig = {\n  [k in string]: {\n    label?: React.ReactNode\n    icon?: React.ComponentType\n  } & (\n    | { color?: string; theme?: never }\n    | { color?: never; theme: Record<keyof typeof THEMES, string> }\n  )\n}\n\ntype ChartContextProps = {\n  config: ChartConfig\n}\n\nconst ChartContext = React.createContext<ChartContextProps | null>(null)\n\nfunction useChart() {\n  const context = React.useContext(ChartContext)\n\n  if (!context) {\n    throw new Error(\"useChart must be used within a <ChartContainer />\")\n  }\n\n  return context\n}\n\nfunction ChartContainer({\n  id,\n  className,\n  children,\n  config,\n  ...props\n}: React.ComponentProps<\"div\"> & {\n  config: ChartConfig\n  children: React.ComponentProps<\n    typeof RechartsPrimitive.ResponsiveContainer\n  >[\"children\"]\n}) {\n  const uniqueId = React.useId()\n  const chartId = `chart-${id || uniqueId.replace(/:/g, \"\")}`\n\n  return (\n    <ChartContext.Provider value={{ config }}>\n      <div\n        data-slot=\"chart\"\n        data-chart={chartId}\n        className={cn(\n          \"[&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border flex aspect-video justify-center text-xs [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-hidden [&_.recharts-sector]:outline-hidden [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-surface]:outline-hidden\",\n          className\n        )}\n        {...props}\n      >\n        <ChartStyle id={chartId} config={config} />\n        <RechartsPrimitive.ResponsiveContainer>\n          {children}\n        </RechartsPrimitive.ResponsiveContainer>\n      </div>\n    </ChartContext.Provider>\n  )\n}\n\nconst ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {\n  const colorConfig = Object.entries(config).filter(\n    ([, config]) => config.theme || config.color\n  )\n\n  if (!colorConfig.length) {\n    return null\n  }\n\n  return (\n    <style\n      dangerouslySetInnerHTML={{\n        __html: Object.entries(THEMES)\n          .map(\n            ([theme, prefix]) => `\n${prefix} [data-chart=${id}] {\n${colorConfig\n  .map(([key, itemConfig]) => {\n    const color =\n      itemConfig.theme?.[theme as keyof typeof itemConfig.theme] ||\n      itemConfig.color\n    return color ? `  --color-${key}: ${color};` : null\n  })\n  .join(\"\\n\")}\n}\n`\n          )\n          .join(\"\\n\"),\n      }}\n    />\n  )\n}\n\nconst ChartTooltip = RechartsPrimitive.Tooltip\n\nfunction ChartTooltipContent({\n  active,\n  payload,\n  className,\n  indicator = \"dot\",\n  hideLabel = false,\n  hideIndicator = false,\n  label,\n  labelFormatter,\n  labelClassName,\n  formatter,\n  color,\n  nameKey,\n  labelKey,\n}: React.ComponentProps<typeof RechartsPrimitive.Tooltip> &\n  React.ComponentProps<\"div\"> & {\n    hideLabel?: boolean\n    hideIndicator?: boolean\n    indicator?: \"line\" | \"dot\" | \"dashed\"\n    nameKey?: string\n    labelKey?: string\n  }) {\n  const { config } = useChart()\n\n  const tooltipLabel = React.useMemo(() => {\n    if (hideLabel || !payload?.length) {\n      return null\n    }\n\n    const [item] = payload\n    const key = `${labelKey || item?.dataKey || item?.name || \"value\"}`\n    const itemConfig = getPayloadConfigFromPayload(config, item, key)\n    const value =\n      !labelKey && typeof label === \"string\"\n        ? config[label as keyof typeof config]?.label || label\n        : itemConfig?.label\n\n    if (labelFormatter) {\n      return (\n        <div className={cn(\"font-medium\", labelClassName)}>\n          {labelFormatter(value, payload)}\n        </div>\n      )\n    }\n\n    if (!value) {\n      return null\n    }\n\n    return <div className={cn(\"font-medium\", labelClassName)}>{value}</div>\n  }, [\n    label,\n    labelFormatter,\n    payload,\n    hideLabel,\n    labelClassName,\n    config,\n    labelKey,\n  ])\n\n  if (!active || !payload?.length) {\n    return null\n  }\n\n  const nestLabel = payload.length === 1 && indicator !== \"dot\"\n\n  return (\n    <div\n      className={cn(\n        \"border-border/50 bg-background grid min-w-[8rem] items-start gap-1.5 rounded-lg border px-2.5 py-1.5 text-xs shadow-xl\",\n        className\n      )}\n    >\n      {!nestLabel ? tooltipLabel : null}\n      <div className=\"grid gap-1.5\">\n        {payload.map((item, index) => {\n          const key = `${nameKey || item.name || item.dataKey || \"value\"}`\n          const itemConfig = getPayloadConfigFromPayload(config, item, key)\n          const indicatorColor = color || item.payload.fill || item.color\n\n          return (\n            <div\n              key={item.dataKey}\n              className={cn(\n                \"[&>svg]:text-muted-foreground flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5\",\n                indicator === \"dot\" && \"items-center\"\n              )}\n            >\n              {formatter && item?.value !== undefined && item.name ? (\n                formatter(item.value, item.name, item, index, item.payload)\n              ) : (\n                <>\n                  {itemConfig?.icon ? (\n                    <itemConfig.icon />\n                  ) : (\n                    !hideIndicator && (\n                      <div\n                        className={cn(\n                          \"shrink-0 rounded-[2px] border-(--color-border) bg-(--color-bg)\",\n                          {\n                            \"h-2.5 w-2.5\": indicator === \"dot\",\n                            \"w-1\": indicator === \"line\",\n                            \"w-0 border-[1.5px] border-dashed bg-transparent\":\n                              indicator === \"dashed\",\n                            \"my-0.5\": nestLabel && indicator === \"dashed\",\n                          }\n                        )}\n                        style={\n                          {\n                            \"--color-bg\": indicatorColor,\n                            \"--color-border\": indicatorColor,\n                          } as React.CSSProperties\n                        }\n                      />\n                    )\n                  )}\n                  <div\n                    className={cn(\n                      \"flex flex-1 justify-between leading-none\",\n                      nestLabel ? \"items-end\" : \"items-center\"\n                    )}\n                  >\n                    <div className=\"grid gap-1.5\">\n                      {nestLabel ? tooltipLabel : null}\n                      <span className=\"text-muted-foreground\">\n                        {itemConfig?.label || item.name}\n                      </span>\n                    </div>\n                    {item.value && (\n                      <span className=\"text-foreground font-mono font-medium tabular-nums\">\n                        {item.value.toLocaleString()}\n                      </span>\n                    )}\n                  </div>\n                </>\n              )}\n            </div>\n          )\n        })}\n      </div>\n    </div>\n  )\n}\n\nconst ChartLegend = RechartsPrimitive.Legend\n\nfunction ChartLegendContent({\n  className,\n  hideIcon = false,\n  payload,\n  verticalAlign = \"bottom\",\n  nameKey,\n}: React.ComponentProps<\"div\"> &\n  Pick<RechartsPrimitive.LegendProps, \"payload\" | \"verticalAlign\"> & {\n    hideIcon?: boolean\n    nameKey?: string\n  }) {\n  const { config } = useChart()\n\n  if (!payload?.length) {\n    return null\n  }\n\n  return (\n    <div\n      className={cn(\n        \"flex items-center justify-center gap-4\",\n        verticalAlign === \"top\" ? \"pb-3\" : \"pt-3\",\n        className\n      )}\n    >\n      {payload.map((item) => {\n        const key = `${nameKey || item.dataKey || \"value\"}`\n        const itemConfig = getPayloadConfigFromPayload(config, item, key)\n\n        return (\n          <div\n            key={item.value}\n            className={cn(\n              \"[&>svg]:text-muted-foreground flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3\"\n            )}\n          >\n            {itemConfig?.icon && !hideIcon ? (\n              <itemConfig.icon />\n            ) : (\n              <div\n                className=\"h-2 w-2 shrink-0 rounded-[2px]\"\n                style={{\n                  backgroundColor: item.color,\n                }}\n              />\n            )}\n            {itemConfig?.label}\n          </div>\n        )\n      })}\n    </div>\n  )\n}\n\n// Helper to extract item config from a payload.\nfunction getPayloadConfigFromPayload(\n  config: ChartConfig,\n  payload: unknown,\n  key: string\n) {\n  if (typeof payload !== \"object\" || payload === null) {\n    return undefined\n  }\n\n  const payloadPayload =\n    \"payload\" in payload &&\n    typeof payload.payload === \"object\" &&\n    payload.payload !== null\n      ? payload.payload\n      : undefined\n\n  let configLabelKey: string = key\n\n  if (\n    key in payload &&\n    typeof payload[key as keyof typeof payload] === \"string\"\n  ) {\n    configLabelKey = payload[key as keyof typeof payload] as string\n  } else if (\n    payloadPayload &&\n    key in payloadPayload &&\n    typeof payloadPayload[key as keyof typeof payloadPayload] === \"string\"\n  ) {\n    configLabelKey = payloadPayload[\n      key as keyof typeof payloadPayload\n    ] as string\n  }\n\n  return configLabelKey in config\n    ? config[configLabelKey]\n    : config[key as keyof typeof config]\n}\n\nexport {\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n  ChartLegend,\n  ChartLegendContent,\n  ChartStyle,\n}\n"
      }
    },
    {
      "file_path": "frontend/components/ui/checkbox.tsx",
      "relative_path": "frontend/components/ui/checkbox.tsx",
      "language": "typescript",
      "imports": [
        "react",
        "@radix-ui/react-checkbox",
        "lucide-react",
        "@/lib/utils"
      ],
      "exports": [
        "Checkbox"
      ],
      "classes": [],
      "functions": [
        {
          "name": "Checkbox",
          "parameters": [
            "{\n  className,\n  ...props\n}"
          ],
          "returnType": "unknown",
          "isAsync": false,
          "isExported": true
        }
      ],
      "variables": [],
      "description": "React component: Checkbox with 1 methods and 0 classes",
      "lines_of_code": 33,
      "metadata": {
        "size_bytes": 1226,
        "last_modified": "2025-10-07T19:50:38.725Z"
      },
      "analysis_enhanced": {
        "complexity_score": 4,
        "detected_issues": [],
        "semantic_tags": [
          "typescript",
          "component",
          "react"
        ],
        "priority": "low",
        "summary_type": "rule-based",
        "code_snippet": "\"use client\"\n\nimport * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { CheckIcon } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Checkbox({\n  className,\n  ...props\n}: React.ComponentProps<typeof CheckboxPrimitive.Root>) {\n  return (\n    <CheckboxPrimitive.Root\n      data-slot=\"checkbox\"\n      className={cn(\n        \"peer border-input dark:bg-input/30 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground dark:data-[state=checked]:bg-primary data-[state=checked]:border-primary focus-visible:border-ring focus-visible:ring-ring/50 aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive size-4 shrink-0 rounded-[4px] border shadow-xs transition-shadow outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <CheckboxPrimitive.Indicator\n        data-slot=\"checkbox-indicator\"\n        className=\"flex items-center justify-center text-current transition-none\"\n      >\n        <CheckIcon className=\"size-3.5\" />\n      </CheckboxPrimitive.Indicator>\n    </CheckboxPrimitive.Root>\n  )\n}\n\nexport { Checkbox }\n",
        "full_content": "\"use client\"\n\nimport * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { CheckIcon } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Checkbox({\n  className,\n  ...props\n}: React.ComponentProps<typeof CheckboxPrimitive.Root>) {\n  return (\n    <CheckboxPrimitive.Root\n      data-slot=\"checkbox\"\n      className={cn(\n        \"peer border-input dark:bg-input/30 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground dark:data-[state=checked]:bg-primary data-[state=checked]:border-primary focus-visible:border-ring focus-visible:ring-ring/50 aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive size-4 shrink-0 rounded-[4px] border shadow-xs transition-shadow outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <CheckboxPrimitive.Indicator\n        data-slot=\"checkbox-indicator\"\n        className=\"flex items-center justify-center text-current transition-none\"\n      >\n        <CheckIcon className=\"size-3.5\" />\n      </CheckboxPrimitive.Indicator>\n    </CheckboxPrimitive.Root>\n  )\n}\n\nexport { Checkbox }\n"
      }
    },
    {
      "file_path": "frontend/components/ui/dialog.tsx",
      "relative_path": "frontend/components/ui/dialog.tsx",
      "language": "typescript",
      "imports": [
        "react",
        "@radix-ui/react-dialog",
        "lucide-react",
        "@/lib/utils"
      ],
      "exports": [
        "Dialog",
        "DialogClose",
        "DialogContent",
        "DialogDescription",
        "DialogFooter",
        "DialogHeader",
        "DialogOverlay",
        "DialogPortal",
        "DialogTitle",
        "DialogTrigger"
      ],
      "classes": [],
      "functions": [
        {
          "name": "Dialog",
          "parameters": [
            "{\n  ...props\n}"
          ],
          "returnType": "unknown",
          "isAsync": false,
          "isExported": true
        },
        {
          "name": "DialogTrigger",
          "parameters": [
            "{\n  ...props\n}"
          ],
          "returnType": "unknown",
          "isAsync": false,
          "isExported": true
        },
        {
          "name": "DialogPortal",
          "parameters": [
            "{\n  ...props\n}"
          ],
          "returnType": "unknown",
          "isAsync": false,
          "isExported": true
        },
        {
          "name": "DialogClose",
          "parameters": [
            "{\n  ...props\n}"
          ],
          "returnType": "unknown",
          "isAsync": false,
          "isExported": true
        },
        {
          "name": "DialogOverlay",
          "parameters": [
            "{\n  className,\n  ...props\n}"
          ],
          "returnType": "unknown",
          "isAsync": false,
          "isExported": true
        },
        {
          "name": "DialogContent",
          "parameters": [
            "{\n  className,\n  children,\n  showCloseButton = true,\n  ...props\n}"
          ],
          "returnType": "unknown",
          "isAsync": false,
          "isExported": true
        },
        {
          "name": "DialogHeader",
          "parameters": [
            "{ className, ...props }"
          ],
          "returnType": "unknown",
          "isAsync": false,
          "isExported": true
        },
        {
          "name": "DialogFooter",
          "parameters": [
            "{ className, ...props }"
          ],
          "returnType": "unknown",
          "isAsync": false,
          "isExported": true
        },
        {
          "name": "DialogTitle",
          "parameters": [
            "{\n  className,\n  ...props\n}"
          ],
          "returnType": "unknown",
          "isAsync": false,
          "isExported": true
        },
        {
          "name": "DialogDescription",
          "parameters": [
            "{\n  className,\n  ...props\n}"
          ],
          "returnType": "unknown",
          "isAsync": false,
          "isExported": true
        }
      ],
      "variables": [],
      "description": "**Technical Description**\n\n### Purpose\nThe `dialog.tsx` file is a React UI component that provides a customizable dialog system. It exports five components: `Dialog`, `DialogTrigger`, `DialogPortal`, `DialogClose`, and `DialogContent`. These components can be used to create a dialog box with various features such as a title, description, and close button.\n\n### Components\n\n* **Dialog**: The main dialog component that wraps the entire dialog box.\n* **DialogTrigger**: A component that triggers the dialog box to open or close.\n* **DialogPortal**: A component that provides a portal for the dialog box to render in.\n* **DialogClose**: A component that closes the dialog box.\n* **DialogContent**: The content of the dialog",
      "lines_of_code": 144,
      "metadata": {
        "size_bytes": 3982,
        "last_modified": "2025-10-07T19:50:38.725Z"
      },
      "analysis_enhanced": {
        "complexity_score": 24,
        "detected_issues": [],
        "semantic_tags": [
          "typescript",
          "component",
          "react"
        ],
        "needs_ai_summary": true,
        "priority": "high",
        "summary_type": "ai-generated",
        "code_snippet": "\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { XIcon } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Dialog({\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Root>) {\n  return <DialogPrimitive.Root data-slot=\"dialog\" {...props} />\n}\n\nfunction DialogTrigger({\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Trigger>) {\n  return <DialogPrimitive.Trigger data-slot=\"dialog-trigger\" {...props} />\n}\n\nfunction DialogPortal({\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Portal>) {\n  return <DialogPrimitive.Portal data-slot=\"dialog-portal\" {...props} />\n}\n\nfunction DialogClose({\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Close>) {\n  return <DialogPrimitive.Close data-slot=\"dialog-close\" {...props} />\n}\n\nfunction DialogOverlay({\n  className,\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Overlay>) {\n  return (\n    <DialogPrimitive.Overlay\n      data-slot=\"dialog-overlay\"\n      className={cn(\n        \"data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 fixed inset-0 z-50 bg-black/50\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction DialogContent({\n  className,\n  children,\n  showCloseButton = true,\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Content> & {\n  showCloseButton?: boolean\n}) {\n  return (\n    <DialogPortal data-slot=\"dialog-portal\">\n      <DialogOverlay />\n      <DialogPrimitive.Content\n        data-slot=\"dialog-content\"\n        className={cn(\n          \"bg-background data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 fixed top-[50%] left-[50%] z-50 grid w-full max-w-[calc(100%-2rem)] translate-x-[-50%] translate-y-[-50%] gap-4 rounded-lg border p-6 shadow-lg duration-200 sm:max-w-lg\",\n          classNam",
        "full_content": "\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { XIcon } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Dialog({\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Root>) {\n  return <DialogPrimitive.Root data-slot=\"dialog\" {...props} />\n}\n\nfunction DialogTrigger({\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Trigger>) {\n  return <DialogPrimitive.Trigger data-slot=\"dialog-trigger\" {...props} />\n}\n\nfunction DialogPortal({\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Portal>) {\n  return <DialogPrimitive.Portal data-slot=\"dialog-portal\" {...props} />\n}\n\nfunction DialogClose({\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Close>) {\n  return <DialogPrimitive.Close data-slot=\"dialog-close\" {...props} />\n}\n\nfunction DialogOverlay({\n  className,\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Overlay>) {\n  return (\n    <DialogPrimitive.Overlay\n      data-slot=\"dialog-overlay\"\n      className={cn(\n        \"data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 fixed inset-0 z-50 bg-black/50\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction DialogContent({\n  className,\n  children,\n  showCloseButton = true,\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Content> & {\n  showCloseButton?: boolean\n}) {\n  return (\n    <DialogPortal data-slot=\"dialog-portal\">\n      <DialogOverlay />\n      <DialogPrimitive.Content\n        data-slot=\"dialog-content\"\n        className={cn(\n          \"bg-background data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 fixed top-[50%] left-[50%] z-50 grid w-full max-w-[calc(100%-2rem)] translate-x-[-50%] translate-y-[-50%] gap-4 rounded-lg border p-6 shadow-lg duration-200 sm:max-w-lg\",\n          className\n        )}\n        {...props}\n      >\n        {children}\n        {showCloseButton && (\n          <DialogPrimitive.Close\n            data-slot=\"dialog-close\"\n            className=\"ring-offset-background focus:ring-ring data-[state=open]:bg-accent data-[state=open]:text-muted-foreground absolute top-4 right-4 rounded-xs opacity-70 transition-opacity hover:opacity-100 focus:ring-2 focus:ring-offset-2 focus:outline-hidden disabled:pointer-events-none [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\"\n          >\n            <XIcon />\n            <span className=\"sr-only\">Close</span>\n          </DialogPrimitive.Close>\n        )}\n      </DialogPrimitive.Content>\n    </DialogPortal>\n  )\n}\n\nfunction DialogHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"dialog-header\"\n      className={cn(\"flex flex-col gap-2 text-center sm:text-left\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction DialogFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"dialog-footer\"\n      className={cn(\n        \"flex flex-col-reverse gap-2 sm:flex-row sm:justify-end\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction DialogTitle({\n  className,\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Title>) {\n  return (\n    <DialogPrimitive.Title\n      data-slot=\"dialog-title\"\n      className={cn(\"text-lg leading-none font-semibold\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction DialogDescription({\n  className,\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Description>) {\n  return (\n    <DialogPrimitive.Description\n      data-slot=\"dialog-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Dialog,\n  DialogClose,\n  DialogContent,\n  DialogDescription,\n  DialogFooter,\n  DialogHeader,\n  DialogOverlay,\n  DialogPortal,\n  DialogTitle,\n  DialogTrigger,\n}\n"
      }
    },
    {
      "file_path": "frontend/components/ui/input.tsx",
      "relative_path": "frontend/components/ui/input.tsx",
      "language": "typescript",
      "imports": [
        "react",
        "@/lib/utils"
      ],
      "exports": [
        "Input"
      ],
      "classes": [],
      "functions": [
        {
          "name": "Input",
          "parameters": [
            "{ className, type, ...props }"
          ],
          "returnType": "unknown",
          "isAsync": false,
          "isExported": true
        }
      ],
      "variables": [],
      "description": "React component: Input with 1 methods and 0 classes",
      "lines_of_code": 22,
      "metadata": {
        "size_bytes": 967,
        "last_modified": "2025-10-07T19:50:38.725Z"
      },
      "analysis_enhanced": {
        "complexity_score": 3,
        "detected_issues": [],
        "semantic_tags": [
          "typescript",
          "component",
          "react"
        ],
        "priority": "low",
        "summary_type": "rule-based",
        "code_snippet": "import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Input({ className, type, ...props }: React.ComponentProps<\"input\">) {\n  return (\n    <input\n      type={type}\n      data-slot=\"input\"\n      className={cn(\n        \"file:text-foreground placeholder:text-muted-foreground selection:bg-primary selection:text-primary-foreground dark:bg-input/30 border-input flex h-9 w-full min-w-0 rounded-md border bg-transparent px-3 py-1 text-base shadow-xs transition-[color,box-shadow] outline-none file:inline-flex file:h-7 file:border-0 file:bg-transparent file:text-sm file:font-medium disabled:pointer-events-none disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        \"focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px]\",\n        \"aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Input }\n",
        "full_content": "import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Input({ className, type, ...props }: React.ComponentProps<\"input\">) {\n  return (\n    <input\n      type={type}\n      data-slot=\"input\"\n      className={cn(\n        \"file:text-foreground placeholder:text-muted-foreground selection:bg-primary selection:text-primary-foreground dark:bg-input/30 border-input flex h-9 w-full min-w-0 rounded-md border bg-transparent px-3 py-1 text-base shadow-xs transition-[color,box-shadow] outline-none file:inline-flex file:h-7 file:border-0 file:bg-transparent file:text-sm file:font-medium disabled:pointer-events-none disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        \"focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px]\",\n        \"aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Input }\n"
      }
    },
    {
      "file_path": "frontend/components/ui/label.tsx",
      "relative_path": "frontend/components/ui/label.tsx",
      "language": "typescript",
      "imports": [
        "react",
        "@radix-ui/react-label",
        "@/lib/utils"
      ],
      "exports": [
        "Label"
      ],
      "classes": [],
      "functions": [
        {
          "name": "Label",
          "parameters": [
            "{\n  className,\n  ...props\n}"
          ],
          "returnType": "unknown",
          "isAsync": false,
          "isExported": true
        }
      ],
      "variables": [],
      "description": "React component: Label with 1 methods and 0 classes",
      "lines_of_code": 25,
      "metadata": {
        "size_bytes": 611,
        "last_modified": "2025-10-07T19:50:38.725Z"
      },
      "analysis_enhanced": {
        "complexity_score": 4,
        "detected_issues": [],
        "semantic_tags": [
          "typescript",
          "component",
          "react"
        ],
        "priority": "low",
        "summary_type": "rule-based",
        "code_snippet": "\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Label({\n  className,\n  ...props\n}: React.ComponentProps<typeof LabelPrimitive.Root>) {\n  return (\n    <LabelPrimitive.Root\n      data-slot=\"label\"\n      className={cn(\n        \"flex items-center gap-2 text-sm leading-none font-medium select-none group-data-[disabled=true]:pointer-events-none group-data-[disabled=true]:opacity-50 peer-disabled:cursor-not-allowed peer-disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Label }\n",
        "full_content": "\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Label({\n  className,\n  ...props\n}: React.ComponentProps<typeof LabelPrimitive.Root>) {\n  return (\n    <LabelPrimitive.Root\n      data-slot=\"label\"\n      className={cn(\n        \"flex items-center gap-2 text-sm leading-none font-medium select-none group-data-[disabled=true]:pointer-events-none group-data-[disabled=true]:opacity-50 peer-disabled:cursor-not-allowed peer-disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Label }\n"
      }
    },
    {
      "file_path": "frontend/components/ui/navbar.tsx",
      "relative_path": "frontend/components/ui/navbar.tsx",
      "language": "typescript",
      "imports": [
        "next/image",
        "next/link",
        "react",
        "../shared/logo",
        "@/lib/token-storage"
      ],
      "exports": [
        "Navbar"
      ],
      "classes": [],
      "functions": [
        {
          "name": "Navbar",
          "parameters": [],
          "returnType": "unknown",
          "isAsync": false,
          "isExported": true
        }
      ],
      "variables": [
        "AnimatedNavLink"
      ],
      "description": "React component: Navbar with 1 methods and 0 classes",
      "lines_of_code": 196,
      "metadata": {
        "size_bytes": 6443,
        "last_modified": "2025-10-07T19:50:38.725Z"
      },
      "analysis_enhanced": {
        "complexity_score": 7,
        "detected_issues": [
          {
            "type": "maintainability",
            "severity": "low",
            "description": "Console.log statements should be removed from production code",
            "category": "debug-code"
          }
        ],
        "semantic_tags": [
          "typescript",
          "component",
          "nextjs",
          "react",
          "authentication"
        ],
        "priority": "low",
        "summary_type": "rule-based",
        "code_snippet": "\"use client\";\n\nimport Image from \"next/image\";\nimport Link from \"next/link\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { Logo } from \"../shared/logo\";\nimport { accessTokenStorage } from \"@/lib/token-storage\";\n\nconst AnimatedNavLink = ({ href, children }: { href: string; children: React.ReactNode }) => {\n  const defaultTextColor = \"text-gray-300\";\n  const hoverTextColor = \"text-white\";\n  const textSizeClass = \"text-sm\";\n\n  return (\n    <a\n      href={href}\n      className={`group relative flex inline-block overflow-hidden h-5  items-center ${textSizeClass}`}\n    >\n      <div className=\"flex flex-col transition-transform duration-400 ease-out transform group-hover:-translate-y-1/2\">\n        <span className={defaultTextColor}>{children}</span>\n        <span className={hoverTextColor}>{children}</span>\n      </div>\n    </a>\n  );\n};\n\nexport function Navbar() {\n  const [isOpen, setIsOpen] = useState(false);\n  const [headerShapeClass, setHeaderShapeClass] = useState(\"rounded-full\");\n  const shapeTimeoutRef = useRef<NodeJS.Timeout | null>(null);\n\n  const toggleMenu = () => {\n    setIsOpen(!isOpen);\n  };\n\n  useEffect(() => {\n    if (shapeTimeoutRef.current) {\n      clearTimeout(shapeTimeoutRef.current);\n    }\n\n    if (isOpen) {\n      setHeaderShapeClass(\"rounded-xl\");\n    } else {\n      shapeTimeoutRef.current = setTimeout(() => {\n        setHeaderShapeClass(\"rounded-full\");\n      }, 300);\n    }\n\n    return () => {\n      if (shapeTimeoutRef.current) {\n        clearTimeout(shapeTimeoutRef.current);\n      }\n    };\n  }, [isOpen]);\n\n  const navLinksData = [\n    { label: \"Home\", href: \"/\" },\n    { label: \"About\", href: \"/about\" },\n  ];\n  const isLoggedIn = accessTokenStorage.get() !== null;\n  console.log(isLoggedIn);\n\n  const loginButtonElement = (\n    <Link href=\"/login\">\n      <button className=\"px-4 cursor-pointer py-2 sm:px-3 text-xs sm:text-sm border border-[#333] bg-[rgba(31,31,31,0.62)] text-gray-300 rounded-full hover:border-white/50 hover:text-wh",
        "full_content": "\"use client\";\n\nimport Image from \"next/image\";\nimport Link from \"next/link\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { Logo } from \"../shared/logo\";\nimport { accessTokenStorage } from \"@/lib/token-storage\";\n\nconst AnimatedNavLink = ({ href, children }: { href: string; children: React.ReactNode }) => {\n  const defaultTextColor = \"text-gray-300\";\n  const hoverTextColor = \"text-white\";\n  const textSizeClass = \"text-sm\";\n\n  return (\n    <a\n      href={href}\n      className={`group relative flex inline-block overflow-hidden h-5  items-center ${textSizeClass}`}\n    >\n      <div className=\"flex flex-col transition-transform duration-400 ease-out transform group-hover:-translate-y-1/2\">\n        <span className={defaultTextColor}>{children}</span>\n        <span className={hoverTextColor}>{children}</span>\n      </div>\n    </a>\n  );\n};\n\nexport function Navbar() {\n  const [isOpen, setIsOpen] = useState(false);\n  const [headerShapeClass, setHeaderShapeClass] = useState(\"rounded-full\");\n  const shapeTimeoutRef = useRef<NodeJS.Timeout | null>(null);\n\n  const toggleMenu = () => {\n    setIsOpen(!isOpen);\n  };\n\n  useEffect(() => {\n    if (shapeTimeoutRef.current) {\n      clearTimeout(shapeTimeoutRef.current);\n    }\n\n    if (isOpen) {\n      setHeaderShapeClass(\"rounded-xl\");\n    } else {\n      shapeTimeoutRef.current = setTimeout(() => {\n        setHeaderShapeClass(\"rounded-full\");\n      }, 300);\n    }\n\n    return () => {\n      if (shapeTimeoutRef.current) {\n        clearTimeout(shapeTimeoutRef.current);\n      }\n    };\n  }, [isOpen]);\n\n  const navLinksData = [\n    { label: \"Home\", href: \"/\" },\n    { label: \"About\", href: \"/about\" },\n  ];\n  const isLoggedIn = accessTokenStorage.get() !== null;\n  console.log(isLoggedIn);\n\n  const loginButtonElement = (\n    <Link href=\"/login\">\n      <button className=\"px-4 cursor-pointer py-2 sm:px-3 text-xs sm:text-sm border border-[#333] bg-[rgba(31,31,31,0.62)] text-gray-300 rounded-full hover:border-white/50 hover:text-white transition-colors duration-200 w-full sm:w-auto\">\n        LogIn\n      </button>\n    </Link>\n  );\n\n  const consoleButtonElement = (\n    <div className=\"relative group w-full sm:w-auto\">\n      <div\n        className=\"absolute inset-0 -m-2 rounded-full\n                     hidden sm:block\n                     bg-gray-100\n                     opacity-40 filter blur-lg pointer-events-none\n                     transition-all duration-300 ease-out\n                     group-hover:opacity-60 group-hover:blur-xl group-hover:-m-3\"\n      ></div>\n      <Link href=\"/dashboard\">\n        <button className=\"relative z-10 px-4 cursor-pointer py-2 sm:px-3 text-xs sm:text-sm font-semibold text-black bg-gradient-to-br from-gray-100 to-gray-300 rounded-full hover:from-gray-200 hover:to-gray-400 transition-all duration-200 w-full sm:w-auto\">\n          Console\n        </button>\n      </Link>\n    </div>\n  );\n\n  const signupButtonElement = (\n    <div className=\"relative group w-full sm:w-auto\">\n      <div\n        className=\"absolute inset-0 -m-2 rounded-full\n                     hidden sm:block\n                     bg-gray-100\n                     opacity-40 filter blur-lg pointer-events-none\n                     transition-all duration-300 ease-out\n                     group-hover:opacity-60 group-hover:blur-xl group-hover:-m-3\"\n      ></div>\n      <Link href=\"/sign-up\">\n        <button className=\"relative z-10 px-4 py-2 sm:px-3 text-xs sm:text-sm font-semibold text-black bg-gradient-to-br from-gray-100 to-gray-300 rounded-full hover:from-gray-200 hover:to-gray-400 transition-all duration-200 w-full sm:w-auto\">\n          Signup\n        </button>\n      </Link>\n    </div>\n  );\n\n  return (\n    <header\n      className={`fixed top-6 left-1/2 transform -translate-x-1/2 z-20\n                       flex flex-col items-center\n                       pl-6 pr-6 py-3 backdrop-blur-sm\n                       ${headerShapeClass}\n                       border border-[#333] bg-[#1f1f1f57]\n                       w-[calc(100%-2rem)] min-w-[60%] sm:w-auto\n                       transition-[border-radius] duration-0 ease-in-out`}\n    >\n      <div className=\"flex items-center justify-between w-full gap-x-6 sm:gap-x-8\">\n        <div className=\"flex items-center\">\n          <Link href=\"/\">\n            <Logo />\n          </Link>\n        </div>\n\n        <div className=\"hidden sm:flex items-center gap-2 sm:gap-3\">\n          {isLoggedIn ? (\n            consoleButtonElement\n          ) : (\n            <>\n              {loginButtonElement}\n              {signupButtonElement}\n            </>\n          )}\n        </div>\n\n        <button\n          className=\"sm:hidden flex items-center justify-center w-8 h-8 text-gray-300 focus:outline-none\"\n          onClick={toggleMenu}\n          aria-label={isOpen ? \"Close Menu\" : \"Open Menu\"}\n        >\n          {isOpen ? (\n            <svg\n              className=\"w-6 h-6\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              viewBox=\"0 0 24 24\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth=\"2\"\n                d=\"M6 18L18 6M6 6l12 12\"\n              ></path>\n            </svg>\n          ) : (\n            <svg\n              className=\"w-6 h-6\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              viewBox=\"0 0 24 24\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth=\"2\"\n                d=\"M4 6h16M4 12h16M4 18h16\"\n              ></path>\n            </svg>\n          )}\n        </button>\n      </div>\n\n      <div\n        className={`sm:hidden flex flex-col items-center w-full transition-all ease-in-out duration-300 overflow-hidden\n                       ${\n                         isOpen\n                           ? \"max-h-[1000px] opacity-100 pt-4\"\n                           : \"max-h-0 opacity-0 pt-0 pointer-events-none\"\n                       }`}\n      >\n        <div className=\"flex flex-col items-center space-y-4 mt-4 w-full\">\n          {isLoggedIn ? (\n            consoleButtonElement\n          ) : (\n            <>\n              {loginButtonElement}\n              {signupButtonElement}\n            </>\n          )}\n        </div>\n      </div>\n    </header>\n  );\n}\n"
      }
    },
    {
      "file_path": "frontend/components/ui/scroll-area.tsx",
      "relative_path": "frontend/components/ui/scroll-area.tsx",
      "language": "typescript",
      "imports": [
        "react",
        "@radix-ui/react-scroll-area",
        "@/lib/utils"
      ],
      "exports": [
        "ScrollArea",
        "ScrollBar"
      ],
      "classes": [],
      "functions": [
        {
          "name": "ScrollArea",
          "parameters": [
            "{\n  className,\n  children,\n  ...props\n}"
          ],
          "returnType": "unknown",
          "isAsync": false,
          "isExported": true
        },
        {
          "name": "ScrollBar",
          "parameters": [
            "{\n  className,\n  orientation = \"vertical\",\n  ...props\n}"
          ],
          "returnType": "unknown",
          "isAsync": false,
          "isExported": true
        }
      ],
      "variables": [],
      "description": "React component: ScrollArea with 2 methods and 0 classes",
      "lines_of_code": 59,
      "metadata": {
        "size_bytes": 1645,
        "last_modified": "2025-10-07T19:50:38.725Z"
      },
      "analysis_enhanced": {
        "complexity_score": 6,
        "detected_issues": [],
        "semantic_tags": [
          "typescript",
          "component",
          "react"
        ],
        "priority": "low",
        "summary_type": "rule-based",
        "code_snippet": "\"use client\"\n\nimport * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction ScrollArea({\n  className,\n  children,\n  ...props\n}: React.ComponentProps<typeof ScrollAreaPrimitive.Root>) {\n  return (\n    <ScrollAreaPrimitive.Root\n      data-slot=\"scroll-area\"\n      className={cn(\"relative\", className)}\n      {...props}\n    >\n      <ScrollAreaPrimitive.Viewport\n        data-slot=\"scroll-area-viewport\"\n        className=\"focus-visible:ring-ring/50 size-full rounded-[inherit] transition-[color,box-shadow] outline-none focus-visible:ring-[3px] focus-visible:outline-1\"\n      >\n        {children}\n      </ScrollAreaPrimitive.Viewport>\n      <ScrollBar />\n      <ScrollAreaPrimitive.Corner />\n    </ScrollAreaPrimitive.Root>\n  )\n}\n\nfunction ScrollBar({\n  className,\n  orientation = \"vertical\",\n  ...props\n}: React.ComponentProps<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>) {\n  return (\n    <ScrollAreaPrimitive.ScrollAreaScrollbar\n      data-slot=\"scroll-area-scrollbar\"\n      orientation={orientation}\n      className={cn(\n        \"flex touch-none p-px transition-colors select-none\",\n        orientation === \"vertical\" &&\n          \"h-full w-2.5 border-l border-l-transparent\",\n        orientation === \"horizontal\" &&\n          \"h-2.5 flex-col border-t border-t-transparent\",\n        className\n      )}\n      {...props}\n    >\n      <ScrollAreaPrimitive.ScrollAreaThumb\n        data-slot=\"scroll-area-thumb\"\n        className=\"bg-border relative flex-1 rounded-full\"\n      />\n    </ScrollAreaPrimitive.ScrollAreaScrollbar>\n  )\n}\n\nexport { ScrollArea, ScrollBar }\n",
        "full_content": "\"use client\"\n\nimport * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction ScrollArea({\n  className,\n  children,\n  ...props\n}: React.ComponentProps<typeof ScrollAreaPrimitive.Root>) {\n  return (\n    <ScrollAreaPrimitive.Root\n      data-slot=\"scroll-area\"\n      className={cn(\"relative\", className)}\n      {...props}\n    >\n      <ScrollAreaPrimitive.Viewport\n        data-slot=\"scroll-area-viewport\"\n        className=\"focus-visible:ring-ring/50 size-full rounded-[inherit] transition-[color,box-shadow] outline-none focus-visible:ring-[3px] focus-visible:outline-1\"\n      >\n        {children}\n      </ScrollAreaPrimitive.Viewport>\n      <ScrollBar />\n      <ScrollAreaPrimitive.Corner />\n    </ScrollAreaPrimitive.Root>\n  )\n}\n\nfunction ScrollBar({\n  className,\n  orientation = \"vertical\",\n  ...props\n}: React.ComponentProps<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>) {\n  return (\n    <ScrollAreaPrimitive.ScrollAreaScrollbar\n      data-slot=\"scroll-area-scrollbar\"\n      orientation={orientation}\n      className={cn(\n        \"flex touch-none p-px transition-colors select-none\",\n        orientation === \"vertical\" &&\n          \"h-full w-2.5 border-l border-l-transparent\",\n        orientation === \"horizontal\" &&\n          \"h-2.5 flex-col border-t border-t-transparent\",\n        className\n      )}\n      {...props}\n    >\n      <ScrollAreaPrimitive.ScrollAreaThumb\n        data-slot=\"scroll-area-thumb\"\n        className=\"bg-border relative flex-1 rounded-full\"\n      />\n    </ScrollAreaPrimitive.ScrollAreaScrollbar>\n  )\n}\n\nexport { ScrollArea, ScrollBar }\n"
      }
    },
    {
      "file_path": "frontend/components/ui/select.tsx",
      "relative_path": "frontend/components/ui/select.tsx",
      "language": "typescript",
      "imports": [
        "react",
        "@radix-ui/react-select",
        "lucide-react",
        "@/lib/utils"
      ],
      "exports": [
        "Select",
        "SelectContent",
        "SelectGroup",
        "SelectItem",
        "SelectLabel",
        "SelectScrollDownButton",
        "SelectScrollUpButton",
        "SelectSeparator",
        "SelectTrigger",
        "SelectValue"
      ],
      "classes": [],
      "functions": [
        {
          "name": "Select",
          "parameters": [
            "{\n  ...props\n}"
          ],
          "returnType": "unknown",
          "isAsync": false,
          "isExported": true
        },
        {
          "name": "SelectGroup",
          "parameters": [
            "{\n  ...props\n}"
          ],
          "returnType": "unknown",
          "isAsync": false,
          "isExported": true
        },
        {
          "name": "SelectValue",
          "parameters": [
            "{\n  ...props\n}"
          ],
          "returnType": "unknown",
          "isAsync": false,
          "isExported": true
        },
        {
          "name": "SelectTrigger",
          "parameters": [
            "{\n  className,\n  size = \"default\",\n  children,\n  ...props\n}"
          ],
          "returnType": "unknown",
          "isAsync": false,
          "isExported": true
        },
        {
          "name": "SelectContent",
          "parameters": [
            "{\n  className,\n  children,\n  position = \"popper\",\n  ...props\n}"
          ],
          "returnType": "unknown",
          "isAsync": false,
          "isExported": true
        },
        {
          "name": "SelectLabel",
          "parameters": [
            "{\n  className,\n  ...props\n}"
          ],
          "returnType": "unknown",
          "isAsync": false,
          "isExported": true
        },
        {
          "name": "SelectItem",
          "parameters": [
            "{\n  className,\n  children,\n  ...props\n}"
          ],
          "returnType": "unknown",
          "isAsync": false,
          "isExported": true
        },
        {
          "name": "SelectSeparator",
          "parameters": [
            "{\n  className,\n  ...props\n}"
          ],
          "returnType": "unknown",
          "isAsync": false,
          "isExported": true
        },
        {
          "name": "SelectScrollUpButton",
          "parameters": [
            "{\n  className,\n  ...props\n}"
          ],
          "returnType": "unknown",
          "isAsync": false,
          "isExported": true
        },
        {
          "name": "SelectScrollDownButton",
          "parameters": [
            "{\n  className,\n  ...props\n}"
          ],
          "returnType": "unknown",
          "isAsync": false,
          "isExported": true
        }
      ],
      "variables": [],
      "description": "**Technical Description**\n\n### Purpose\nThe provided TypeScript file, `select.tsx`, is a React UI component that implements a customizable select dropdown menu. It utilizes the Radix UI library for its functionality and Lucide React for icons.\n\n### Components\nThe file exports five key functions:\n\n1. `Select`: A wrapper component that renders the Radix UI `SelectPrimitive.Root` component.\n2. `SelectGroup`: A component that renders the Radix UI `SelectPrimitive.Group` component.\n3. `SelectValue`: A component that renders the Radix UI `SelectPrimitive.Value` component.\n4. `SelectTrigger`: A component that renders the Radix UI `SelectPrimitive.Trigger` component with customizable size and icon.\n5. `",
      "lines_of_code": 186,
      "metadata": {
        "size_bytes": 6253,
        "last_modified": "2025-10-07T19:50:38.725Z"
      },
      "analysis_enhanced": {
        "complexity_score": 24,
        "detected_issues": [],
        "semantic_tags": [
          "typescript",
          "component",
          "react"
        ],
        "needs_ai_summary": true,
        "priority": "high",
        "summary_type": "ai-generated",
        "code_snippet": "\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { CheckIcon, ChevronDownIcon, ChevronUpIcon } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Select({\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Root>) {\n  return <SelectPrimitive.Root data-slot=\"select\" {...props} />\n}\n\nfunction SelectGroup({\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Group>) {\n  return <SelectPrimitive.Group data-slot=\"select-group\" {...props} />\n}\n\nfunction SelectValue({\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Value>) {\n  return <SelectPrimitive.Value data-slot=\"select-value\" {...props} />\n}\n\nfunction SelectTrigger({\n  className,\n  size = \"default\",\n  children,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Trigger> & {\n  size?: \"sm\" | \"default\"\n}) {\n  return (\n    <SelectPrimitive.Trigger\n      data-slot=\"select-trigger\"\n      data-size={size}\n      className={cn(\n        \"border-input data-[placeholder]:text-muted-foreground [&_svg:not([class*='text-'])]:text-muted-foreground focus-visible:border-ring focus-visible:ring-ring/50 aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive dark:bg-input/30 dark:hover:bg-input/50 flex w-fit items-center justify-between gap-2 rounded-md border bg-transparent px-3 py-2 text-sm whitespace-nowrap shadow-xs transition-[color,box-shadow] outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50 data-[size=default]:h-9 data-[size=sm]:h-8 *:data-[slot=select-value]:line-clamp-1 *:data-[slot=select-value]:flex *:data-[slot=select-value]:items-center *:data-[slot=select-value]:gap-2 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <SelectPrimitive.Icon asChild>\n        <ChevronDownIcon className=\"size-4 opacity-50\" />\n      </SelectPrimitive.Icon>\n  ",
        "full_content": "\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { CheckIcon, ChevronDownIcon, ChevronUpIcon } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Select({\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Root>) {\n  return <SelectPrimitive.Root data-slot=\"select\" {...props} />\n}\n\nfunction SelectGroup({\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Group>) {\n  return <SelectPrimitive.Group data-slot=\"select-group\" {...props} />\n}\n\nfunction SelectValue({\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Value>) {\n  return <SelectPrimitive.Value data-slot=\"select-value\" {...props} />\n}\n\nfunction SelectTrigger({\n  className,\n  size = \"default\",\n  children,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Trigger> & {\n  size?: \"sm\" | \"default\"\n}) {\n  return (\n    <SelectPrimitive.Trigger\n      data-slot=\"select-trigger\"\n      data-size={size}\n      className={cn(\n        \"border-input data-[placeholder]:text-muted-foreground [&_svg:not([class*='text-'])]:text-muted-foreground focus-visible:border-ring focus-visible:ring-ring/50 aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive dark:bg-input/30 dark:hover:bg-input/50 flex w-fit items-center justify-between gap-2 rounded-md border bg-transparent px-3 py-2 text-sm whitespace-nowrap shadow-xs transition-[color,box-shadow] outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50 data-[size=default]:h-9 data-[size=sm]:h-8 *:data-[slot=select-value]:line-clamp-1 *:data-[slot=select-value]:flex *:data-[slot=select-value]:items-center *:data-[slot=select-value]:gap-2 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <SelectPrimitive.Icon asChild>\n        <ChevronDownIcon className=\"size-4 opacity-50\" />\n      </SelectPrimitive.Icon>\n    </SelectPrimitive.Trigger>\n  )\n}\n\nfunction SelectContent({\n  className,\n  children,\n  position = \"popper\",\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Content>) {\n  return (\n    <SelectPrimitive.Portal>\n      <SelectPrimitive.Content\n        data-slot=\"select-content\"\n        className={cn(\n          \"bg-popover text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 relative z-50 max-h-(--radix-select-content-available-height) min-w-[8rem] origin-(--radix-select-content-transform-origin) overflow-x-hidden overflow-y-auto rounded-md border shadow-md\",\n          position === \"popper\" &&\n            \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n          className\n        )}\n        position={position}\n        {...props}\n      >\n        <SelectScrollUpButton />\n        <SelectPrimitive.Viewport\n          className={cn(\n            \"p-1\",\n            position === \"popper\" &&\n              \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)] scroll-my-1\"\n          )}\n        >\n          {children}\n        </SelectPrimitive.Viewport>\n        <SelectScrollDownButton />\n      </SelectPrimitive.Content>\n    </SelectPrimitive.Portal>\n  )\n}\n\nfunction SelectLabel({\n  className,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Label>) {\n  return (\n    <SelectPrimitive.Label\n      data-slot=\"select-label\"\n      className={cn(\"text-muted-foreground px-2 py-1.5 text-xs\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SelectItem({\n  className,\n  children,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Item>) {\n  return (\n    <SelectPrimitive.Item\n      data-slot=\"select-item\"\n      className={cn(\n        \"focus:bg-accent focus:text-accent-foreground [&_svg:not([class*='text-'])]:text-muted-foreground relative flex w-full cursor-default items-center gap-2 rounded-sm py-1.5 pr-8 pl-2 text-sm outline-hidden select-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4 *:[span]:last:flex *:[span]:last:items-center *:[span]:last:gap-2\",\n        className\n      )}\n      {...props}\n    >\n      <span className=\"absolute right-2 flex size-3.5 items-center justify-center\">\n        <SelectPrimitive.ItemIndicator>\n          <CheckIcon className=\"size-4\" />\n        </SelectPrimitive.ItemIndicator>\n      </span>\n      <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n    </SelectPrimitive.Item>\n  )\n}\n\nfunction SelectSeparator({\n  className,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Separator>) {\n  return (\n    <SelectPrimitive.Separator\n      data-slot=\"select-separator\"\n      className={cn(\"bg-border pointer-events-none -mx-1 my-1 h-px\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SelectScrollUpButton({\n  className,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.ScrollUpButton>) {\n  return (\n    <SelectPrimitive.ScrollUpButton\n      data-slot=\"select-scroll-up-button\"\n      className={cn(\n        \"flex cursor-default items-center justify-center py-1\",\n        className\n      )}\n      {...props}\n    >\n      <ChevronUpIcon className=\"size-4\" />\n    </SelectPrimitive.ScrollUpButton>\n  )\n}\n\nfunction SelectScrollDownButton({\n  className,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.ScrollDownButton>) {\n  return (\n    <SelectPrimitive.ScrollDownButton\n      data-slot=\"select-scroll-down-button\"\n      className={cn(\n        \"flex cursor-default items-center justify-center py-1\",\n        className\n      )}\n      {...props}\n    >\n      <ChevronDownIcon className=\"size-4\" />\n    </SelectPrimitive.ScrollDownButton>\n  )\n}\n\nexport {\n  Select,\n  SelectContent,\n  SelectGroup,\n  SelectItem,\n  SelectLabel,\n  SelectScrollDownButton,\n  SelectScrollUpButton,\n  SelectSeparator,\n  SelectTrigger,\n  SelectValue,\n}\n"
      }
    },
    {
      "file_path": "frontend/components/ui/separator.tsx",
      "relative_path": "frontend/components/ui/separator.tsx",
      "language": "typescript",
      "imports": [
        "react",
        "@radix-ui/react-separator",
        "@/lib/utils"
      ],
      "exports": [
        "Separator"
      ],
      "classes": [],
      "functions": [
        {
          "name": "Separator",
          "parameters": [
            "{\n  className,\n  orientation = \"horizontal\",\n  decorative = true,\n  ...props\n}"
          ],
          "returnType": "unknown",
          "isAsync": false,
          "isExported": true
        }
      ],
      "variables": [],
      "description": "React component: Separator with 1 methods and 0 classes",
      "lines_of_code": 29,
      "metadata": {
        "size_bytes": 699,
        "last_modified": "2025-10-07T19:50:38.726Z"
      },
      "analysis_enhanced": {
        "complexity_score": 4,
        "detected_issues": [],
        "semantic_tags": [
          "typescript",
          "component",
          "react"
        ],
        "priority": "low",
        "summary_type": "rule-based",
        "code_snippet": "\"use client\"\n\nimport * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Separator({\n  className,\n  orientation = \"horizontal\",\n  decorative = true,\n  ...props\n}: React.ComponentProps<typeof SeparatorPrimitive.Root>) {\n  return (\n    <SeparatorPrimitive.Root\n      data-slot=\"separator\"\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"bg-border shrink-0 data-[orientation=horizontal]:h-px data-[orientation=horizontal]:w-full data-[orientation=vertical]:h-full data-[orientation=vertical]:w-px\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Separator }\n",
        "full_content": "\"use client\"\n\nimport * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Separator({\n  className,\n  orientation = \"horizontal\",\n  decorative = true,\n  ...props\n}: React.ComponentProps<typeof SeparatorPrimitive.Root>) {\n  return (\n    <SeparatorPrimitive.Root\n      data-slot=\"separator\"\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"bg-border shrink-0 data-[orientation=horizontal]:h-px data-[orientation=horizontal]:w-full data-[orientation=vertical]:h-full data-[orientation=vertical]:w-px\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Separator }\n"
      }
    },
    {
      "file_path": "frontend/components/ui/sheet.tsx",
      "relative_path": "frontend/components/ui/sheet.tsx",
      "language": "typescript",
      "imports": [
        "react",
        "@radix-ui/react-dialog",
        "lucide-react",
        "@/lib/utils"
      ],
      "exports": [
        "Sheet",
        "SheetTrigger",
        "SheetClose",
        "SheetContent",
        "SheetHeader",
        "SheetFooter",
        "SheetTitle",
        "SheetDescription"
      ],
      "classes": [],
      "functions": [
        {
          "name": "Sheet",
          "parameters": [
            "{ ...props }"
          ],
          "returnType": "unknown",
          "isAsync": false,
          "isExported": true
        },
        {
          "name": "SheetTrigger",
          "parameters": [
            "{\n  ...props\n}"
          ],
          "returnType": "unknown",
          "isAsync": false,
          "isExported": true
        },
        {
          "name": "SheetClose",
          "parameters": [
            "{\n  ...props\n}"
          ],
          "returnType": "unknown",
          "isAsync": false,
          "isExported": true
        },
        {
          "name": "SheetPortal",
          "parameters": [
            "{\n  ...props\n}"
          ],
          "returnType": "unknown",
          "isAsync": false,
          "isExported": false
        },
        {
          "name": "SheetOverlay",
          "parameters": [
            "{\n  className,\n  ...props\n}"
          ],
          "returnType": "unknown",
          "isAsync": false,
          "isExported": false
        },
        {
          "name": "SheetContent",
          "parameters": [
            "{\n  className,\n  children,\n  side = \"right\",\n  ...props\n}"
          ],
          "returnType": "unknown",
          "isAsync": false,
          "isExported": true
        },
        {
          "name": "SheetHeader",
          "parameters": [
            "{ className, ...props }"
          ],
          "returnType": "unknown",
          "isAsync": false,
          "isExported": true
        },
        {
          "name": "SheetFooter",
          "parameters": [
            "{ className, ...props }"
          ],
          "returnType": "unknown",
          "isAsync": false,
          "isExported": true
        },
        {
          "name": "SheetTitle",
          "parameters": [
            "{\n  className,\n  ...props\n}"
          ],
          "returnType": "unknown",
          "isAsync": false,
          "isExported": true
        },
        {
          "name": "SheetDescription",
          "parameters": [
            "{\n  className,\n  ...props\n}"
          ],
          "returnType": "unknown",
          "isAsync": false,
          "isExported": true
        }
      ],
      "variables": [],
      "description": "**Technical Description**\n\n### Purpose\nThe provided TypeScript file, `sheet.tsx`, is a React UI component that implements a modal sheet with various features such as triggers, close buttons, overlays, and content areas. It utilizes the Radix UI library for the dialog component and Lucide React for icons.\n\n### Components\nThe file exports the following components:\n\n1. `Sheet`: The main sheet component that wraps the entire modal.\n2. `SheetTrigger`: A trigger component that opens the modal.\n3. `SheetClose`: A close button component that closes the modal.\n4. `SheetPortal`: A portal component that renders the modal content.\n5. `SheetOverlay`: An overlay component that covers the entire screen.\n6. `SheetContent",
      "lines_of_code": 140,
      "metadata": {
        "size_bytes": 4090,
        "last_modified": "2025-10-07T19:50:38.726Z"
      },
      "analysis_enhanced": {
        "complexity_score": 24,
        "detected_issues": [],
        "semantic_tags": [
          "typescript",
          "component",
          "react"
        ],
        "needs_ai_summary": true,
        "priority": "high",
        "summary_type": "ai-generated",
        "code_snippet": "\"use client\"\n\nimport * as React from \"react\"\nimport * as SheetPrimitive from \"@radix-ui/react-dialog\"\nimport { XIcon } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Sheet({ ...props }: React.ComponentProps<typeof SheetPrimitive.Root>) {\n  return <SheetPrimitive.Root data-slot=\"sheet\" {...props} />\n}\n\nfunction SheetTrigger({\n  ...props\n}: React.ComponentProps<typeof SheetPrimitive.Trigger>) {\n  return <SheetPrimitive.Trigger data-slot=\"sheet-trigger\" {...props} />\n}\n\nfunction SheetClose({\n  ...props\n}: React.ComponentProps<typeof SheetPrimitive.Close>) {\n  return <SheetPrimitive.Close data-slot=\"sheet-close\" {...props} />\n}\n\nfunction SheetPortal({\n  ...props\n}: React.ComponentProps<typeof SheetPrimitive.Portal>) {\n  return <SheetPrimitive.Portal data-slot=\"sheet-portal\" {...props} />\n}\n\nfunction SheetOverlay({\n  className,\n  ...props\n}: React.ComponentProps<typeof SheetPrimitive.Overlay>) {\n  return (\n    <SheetPrimitive.Overlay\n      data-slot=\"sheet-overlay\"\n      className={cn(\n        \"data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 fixed inset-0 z-50 bg-black/50\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction SheetContent({\n  className,\n  children,\n  side = \"right\",\n  ...props\n}: React.ComponentProps<typeof SheetPrimitive.Content> & {\n  side?: \"top\" | \"right\" | \"bottom\" | \"left\"\n}) {\n  return (\n    <SheetPortal>\n      <SheetOverlay />\n      <SheetPrimitive.Content\n        data-slot=\"sheet-content\"\n        className={cn(\n          \"bg-background data-[state=open]:animate-in data-[state=closed]:animate-out fixed z-50 flex flex-col gap-4 shadow-lg transition ease-in-out data-[state=closed]:duration-300 data-[state=open]:duration-500\",\n          side === \"right\" &&\n            \"data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right inset-y-0 right-0 h-full w-3/4 border-l sm:max-w-sm\",\n          side === \"left\" &&\n            \"data-[sta",
        "full_content": "\"use client\"\n\nimport * as React from \"react\"\nimport * as SheetPrimitive from \"@radix-ui/react-dialog\"\nimport { XIcon } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Sheet({ ...props }: React.ComponentProps<typeof SheetPrimitive.Root>) {\n  return <SheetPrimitive.Root data-slot=\"sheet\" {...props} />\n}\n\nfunction SheetTrigger({\n  ...props\n}: React.ComponentProps<typeof SheetPrimitive.Trigger>) {\n  return <SheetPrimitive.Trigger data-slot=\"sheet-trigger\" {...props} />\n}\n\nfunction SheetClose({\n  ...props\n}: React.ComponentProps<typeof SheetPrimitive.Close>) {\n  return <SheetPrimitive.Close data-slot=\"sheet-close\" {...props} />\n}\n\nfunction SheetPortal({\n  ...props\n}: React.ComponentProps<typeof SheetPrimitive.Portal>) {\n  return <SheetPrimitive.Portal data-slot=\"sheet-portal\" {...props} />\n}\n\nfunction SheetOverlay({\n  className,\n  ...props\n}: React.ComponentProps<typeof SheetPrimitive.Overlay>) {\n  return (\n    <SheetPrimitive.Overlay\n      data-slot=\"sheet-overlay\"\n      className={cn(\n        \"data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 fixed inset-0 z-50 bg-black/50\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction SheetContent({\n  className,\n  children,\n  side = \"right\",\n  ...props\n}: React.ComponentProps<typeof SheetPrimitive.Content> & {\n  side?: \"top\" | \"right\" | \"bottom\" | \"left\"\n}) {\n  return (\n    <SheetPortal>\n      <SheetOverlay />\n      <SheetPrimitive.Content\n        data-slot=\"sheet-content\"\n        className={cn(\n          \"bg-background data-[state=open]:animate-in data-[state=closed]:animate-out fixed z-50 flex flex-col gap-4 shadow-lg transition ease-in-out data-[state=closed]:duration-300 data-[state=open]:duration-500\",\n          side === \"right\" &&\n            \"data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right inset-y-0 right-0 h-full w-3/4 border-l sm:max-w-sm\",\n          side === \"left\" &&\n            \"data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left inset-y-0 left-0 h-full w-3/4 border-r sm:max-w-sm\",\n          side === \"top\" &&\n            \"data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top inset-x-0 top-0 h-auto border-b\",\n          side === \"bottom\" &&\n            \"data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom inset-x-0 bottom-0 h-auto border-t\",\n          className\n        )}\n        {...props}\n      >\n        {children}\n        <SheetPrimitive.Close className=\"ring-offset-background focus:ring-ring data-[state=open]:bg-secondary absolute top-4 right-4 rounded-xs opacity-70 transition-opacity hover:opacity-100 focus:ring-2 focus:ring-offset-2 focus:outline-hidden disabled:pointer-events-none\">\n          <XIcon className=\"size-4\" />\n          <span className=\"sr-only\">Close</span>\n        </SheetPrimitive.Close>\n      </SheetPrimitive.Content>\n    </SheetPortal>\n  )\n}\n\nfunction SheetHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"sheet-header\"\n      className={cn(\"flex flex-col gap-1.5 p-4\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SheetFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"sheet-footer\"\n      className={cn(\"mt-auto flex flex-col gap-2 p-4\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SheetTitle({\n  className,\n  ...props\n}: React.ComponentProps<typeof SheetPrimitive.Title>) {\n  return (\n    <SheetPrimitive.Title\n      data-slot=\"sheet-title\"\n      className={cn(\"text-foreground font-semibold\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SheetDescription({\n  className,\n  ...props\n}: React.ComponentProps<typeof SheetPrimitive.Description>) {\n  return (\n    <SheetPrimitive.Description\n      data-slot=\"sheet-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Sheet,\n  SheetTrigger,\n  SheetClose,\n  SheetContent,\n  SheetHeader,\n  SheetFooter,\n  SheetTitle,\n  SheetDescription,\n}\n"
      }
    },
    {
      "file_path": "frontend/components/ui/sidebar.tsx",
      "relative_path": "frontend/components/ui/sidebar.tsx",
      "language": "typescript",
      "imports": [
        "react",
        "@radix-ui/react-slot",
        "class-variance-authority",
        "lucide-react",
        "@/hooks/use-mobile",
        "@/lib/utils",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/separator",
        "@/components/ui/sheet",
        "@/components/ui/skeleton",
        "@/components/ui/tooltip"
      ],
      "exports": [
        "Sidebar",
        "SidebarContent",
        "SidebarFooter",
        "SidebarGroup",
        "SidebarGroupAction",
        "SidebarGroupContent",
        "SidebarGroupLabel",
        "SidebarHeader",
        "SidebarInput",
        "SidebarInset",
        "SidebarMenu",
        "SidebarMenuAction",
        "SidebarMenuBadge",
        "SidebarMenuButton",
        "SidebarMenuItem",
        "SidebarMenuSkeleton",
        "SidebarMenuSub",
        "SidebarMenuSubButton",
        "SidebarMenuSubItem",
        "SidebarProvider",
        "SidebarRail",
        "SidebarSeparator",
        "SidebarTrigger",
        "useSidebar"
      ],
      "classes": [],
      "functions": [
        {
          "name": "useSidebar",
          "parameters": [],
          "returnType": "unknown",
          "isAsync": false,
          "isExported": true
        },
        {
          "name": "SidebarProvider",
          "parameters": [
            "{\n  defaultOpen = true,\n  open: openProp,\n  onOpenChange: setOpenProp,\n  className,\n  style,\n  children,\n  ...props\n}"
          ],
          "returnType": "unknown",
          "isAsync": false,
          "isExported": true
        },
        {
          "name": "Sidebar",
          "parameters": [
            "{\n  side = \"left\",\n  variant = \"sidebar\",\n  collapsible = \"offcanvas\",\n  className,\n  children,\n  ...props\n}"
          ],
          "returnType": "unknown",
          "isAsync": false,
          "isExported": true
        },
        {
          "name": "SidebarTrigger",
          "parameters": [
            "{\n  className,\n  onClick,\n  ...props\n}"
          ],
          "returnType": "unknown",
          "isAsync": false,
          "isExported": true
        },
        {
          "name": "SidebarRail",
          "parameters": [
            "{ className, ...props }"
          ],
          "returnType": "unknown",
          "isAsync": false,
          "isExported": true
        },
        {
          "name": "SidebarInset",
          "parameters": [
            "{ className, ...props }"
          ],
          "returnType": "unknown",
          "isAsync": false,
          "isExported": true
        },
        {
          "name": "SidebarInput",
          "parameters": [
            "{\n  className,\n  ...props\n}"
          ],
          "returnType": "unknown",
          "isAsync": false,
          "isExported": true
        },
        {
          "name": "SidebarHeader",
          "parameters": [
            "{ className, ...props }"
          ],
          "returnType": "unknown",
          "isAsync": false,
          "isExported": true
        },
        {
          "name": "SidebarFooter",
          "parameters": [
            "{ className, ...props }"
          ],
          "returnType": "unknown",
          "isAsync": false,
          "isExported": true
        },
        {
          "name": "SidebarSeparator",
          "parameters": [
            "{\n  className,\n  ...props\n}"
          ],
          "returnType": "unknown",
          "isAsync": false,
          "isExported": true
        },
        {
          "name": "SidebarContent",
          "parameters": [
            "{ className, ...props }"
          ],
          "returnType": "unknown",
          "isAsync": false,
          "isExported": true
        },
        {
          "name": "SidebarGroup",
          "parameters": [
            "{ className, ...props }"
          ],
          "returnType": "unknown",
          "isAsync": false,
          "isExported": true
        },
        {
          "name": "SidebarGroupLabel",
          "parameters": [
            "{\n  className,\n  asChild = false,\n  ...props\n}"
          ],
          "returnType": "unknown",
          "isAsync": false,
          "isExported": true
        },
        {
          "name": "SidebarGroupAction",
          "parameters": [
            "{\n  className,\n  asChild = false,\n  ...props\n}"
          ],
          "returnType": "unknown",
          "isAsync": false,
          "isExported": true
        },
        {
          "name": "SidebarGroupContent",
          "parameters": [
            "{\n  className,\n  ...props\n}"
          ],
          "returnType": "unknown",
          "isAsync": false,
          "isExported": true
        },
        {
          "name": "SidebarMenu",
          "parameters": [
            "{ className, ...props }"
          ],
          "returnType": "unknown",
          "isAsync": false,
          "isExported": true
        },
        {
          "name": "SidebarMenuItem",
          "parameters": [
            "{ className, ...props }"
          ],
          "returnType": "unknown",
          "isAsync": false,
          "isExported": true
        },
        {
          "name": "SidebarMenuButton",
          "parameters": [
            "{\n  asChild = false,\n  isActive = false,\n  variant = \"default\",\n  size = \"default\",\n  tooltip,\n  className,\n  ...props\n}"
          ],
          "returnType": "unknown",
          "isAsync": false,
          "isExported": true
        },
        {
          "name": "SidebarMenuAction",
          "parameters": [
            "{\n  className,\n  asChild = false,\n  showOnHover = false,\n  ...props\n}"
          ],
          "returnType": "unknown",
          "isAsync": false,
          "isExported": true
        },
        {
          "name": "SidebarMenuBadge",
          "parameters": [
            "{\n  className,\n  ...props\n}"
          ],
          "returnType": "unknown",
          "isAsync": false,
          "isExported": true
        },
        {
          "name": "SidebarMenuSkeleton",
          "parameters": [
            "{\n  className,\n  showIcon = false,\n  ...props\n}"
          ],
          "returnType": "unknown",
          "isAsync": false,
          "isExported": true
        },
        {
          "name": "SidebarMenuSub",
          "parameters": [
            "{ className, ...props }"
          ],
          "returnType": "unknown",
          "isAsync": false,
          "isExported": true
        },
        {
          "name": "SidebarMenuSubItem",
          "parameters": [
            "{\n  className,\n  ...props\n}"
          ],
          "returnType": "unknown",
          "isAsync": false,
          "isExported": true
        },
        {
          "name": "SidebarMenuSubButton",
          "parameters": [
            "{\n  asChild = false,\n  size = \"md\",\n  isActive = false,\n  className,\n  ...props\n}"
          ],
          "returnType": "unknown",
          "isAsync": false,
          "isExported": true
        }
      ],
      "variables": [
        "SIDEBAR_COOKIE_NAME",
        "SIDEBAR_COOKIE_MAX_AGE",
        "SIDEBAR_WIDTH",
        "SIDEBAR_WIDTH_MOBILE",
        "SIDEBAR_WIDTH_ICON",
        "SIDEBAR_KEYBOARD_SHORTCUT",
        "SidebarContext",
        "sidebarMenuButtonVariants"
      ],
      "description": "**Purpose:** \nThis TypeScript component is a React UI component that implements a sidebar functionality. It provides a context for managing the sidebar's state, including its expansion and collapse, as well as keyboard shortcuts for toggling the sidebar.\n\n**Components:**\n\n*   `SidebarProvider`: The main component that manages the sidebar's state and provides a context for its children to consume.\n*   `useSidebar`: A custom hook that allows components to access the sidebar's context.\n*   `SidebarContext`: A React context that provides the sidebar's state and functions for managing it.\n\n**Dependencies:**\n\n*   `react`: The React library for building user interfaces.\n*   `@radix-ui/react-slot`: A library for creating custom React components using",
      "lines_of_code": 727,
      "metadata": {
        "size_bytes": 21633,
        "last_modified": "2025-10-07T19:50:38.726Z"
      },
      "analysis_enhanced": {
        "complexity_score": 64,
        "detected_issues": [],
        "semantic_tags": [
          "typescript",
          "component",
          "react",
          "authentication"
        ],
        "needs_ai_summary": true,
        "priority": "high",
        "summary_type": "ai-generated",
        "code_snippet": "\"use client\"\n\nimport * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, VariantProps } from \"class-variance-authority\"\nimport { PanelLeftIcon } from \"lucide-react\"\n\nimport { useIsMobile } from \"@/hooks/use-mobile\"\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Separator } from \"@/components/ui/separator\"\nimport {\n  Sheet,\n  SheetContent,\n  SheetDescription,\n  SheetHeader,\n  SheetTitle,\n} from \"@/components/ui/sheet\"\nimport { Skeleton } from \"@/components/ui/skeleton\"\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from \"@/components/ui/tooltip\"\n\nconst SIDEBAR_COOKIE_NAME = \"sidebar_state\"\nconst SIDEBAR_COOKIE_MAX_AGE = 60 * 60 * 24 * 7\nconst SIDEBAR_WIDTH = \"16rem\"\nconst SIDEBAR_WIDTH_MOBILE = \"18rem\"\nconst SIDEBAR_WIDTH_ICON = \"3rem\"\nconst SIDEBAR_KEYBOARD_SHORTCUT = \"b\"\n\ntype SidebarContextProps = {\n  state: \"expanded\" | \"collapsed\"\n  open: boolean\n  setOpen: (open: boolean) => void\n  openMobile: boolean\n  setOpenMobile: (open: boolean) => void\n  isMobile: boolean\n  toggleSidebar: () => void\n}\n\nconst SidebarContext = React.createContext<SidebarContextProps | null>(null)\n\nfunction useSidebar() {\n  const context = React.useContext(SidebarContext)\n  if (!context) {\n    throw new Error(\"useSidebar must be used within a SidebarProvider.\")\n  }\n\n  return context\n}\n\nfunction SidebarProvider({\n  defaultOpen = true,\n  open: openProp,\n  onOpenChange: setOpenProp,\n  className,\n  style,\n  children,\n  ...props\n}: React.ComponentProps<\"div\"> & {\n  defaultOpen?: boolean\n  open?: boolean\n  onOpenChange?: (open: boolean) => void\n}) {\n  const isMobile = useIsMobile()\n  const [openMobile, setOpenMobile] = React.useState(false)\n\n  // This is the internal state of the sidebar.\n  // We use openProp and setOpenProp for control from outside the component.\n  const [_open, _setOpen] = React.useState(defaultOpen)\n  const open = openProp ?? _open",
        "full_content": "\"use client\"\n\nimport * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, VariantProps } from \"class-variance-authority\"\nimport { PanelLeftIcon } from \"lucide-react\"\n\nimport { useIsMobile } from \"@/hooks/use-mobile\"\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Separator } from \"@/components/ui/separator\"\nimport {\n  Sheet,\n  SheetContent,\n  SheetDescription,\n  SheetHeader,\n  SheetTitle,\n} from \"@/components/ui/sheet\"\nimport { Skeleton } from \"@/components/ui/skeleton\"\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from \"@/components/ui/tooltip\"\n\nconst SIDEBAR_COOKIE_NAME = \"sidebar_state\"\nconst SIDEBAR_COOKIE_MAX_AGE = 60 * 60 * 24 * 7\nconst SIDEBAR_WIDTH = \"16rem\"\nconst SIDEBAR_WIDTH_MOBILE = \"18rem\"\nconst SIDEBAR_WIDTH_ICON = \"3rem\"\nconst SIDEBAR_KEYBOARD_SHORTCUT = \"b\"\n\ntype SidebarContextProps = {\n  state: \"expanded\" | \"collapsed\"\n  open: boolean\n  setOpen: (open: boolean) => void\n  openMobile: boolean\n  setOpenMobile: (open: boolean) => void\n  isMobile: boolean\n  toggleSidebar: () => void\n}\n\nconst SidebarContext = React.createContext<SidebarContextProps | null>(null)\n\nfunction useSidebar() {\n  const context = React.useContext(SidebarContext)\n  if (!context) {\n    throw new Error(\"useSidebar must be used within a SidebarProvider.\")\n  }\n\n  return context\n}\n\nfunction SidebarProvider({\n  defaultOpen = true,\n  open: openProp,\n  onOpenChange: setOpenProp,\n  className,\n  style,\n  children,\n  ...props\n}: React.ComponentProps<\"div\"> & {\n  defaultOpen?: boolean\n  open?: boolean\n  onOpenChange?: (open: boolean) => void\n}) {\n  const isMobile = useIsMobile()\n  const [openMobile, setOpenMobile] = React.useState(false)\n\n  // This is the internal state of the sidebar.\n  // We use openProp and setOpenProp for control from outside the component.\n  const [_open, _setOpen] = React.useState(defaultOpen)\n  const open = openProp ?? _open\n  const setOpen = React.useCallback(\n    (value: boolean | ((value: boolean) => boolean)) => {\n      const openState = typeof value === \"function\" ? value(open) : value\n      if (setOpenProp) {\n        setOpenProp(openState)\n      } else {\n        _setOpen(openState)\n      }\n\n      // This sets the cookie to keep the sidebar state.\n      document.cookie = `${SIDEBAR_COOKIE_NAME}=${openState}; path=/; max-age=${SIDEBAR_COOKIE_MAX_AGE}`\n    },\n    [setOpenProp, open]\n  )\n\n  // Helper to toggle the sidebar.\n  const toggleSidebar = React.useCallback(() => {\n    return isMobile ? setOpenMobile((open) => !open) : setOpen((open) => !open)\n  }, [isMobile, setOpen, setOpenMobile])\n\n  // Adds a keyboard shortcut to toggle the sidebar.\n  React.useEffect(() => {\n    const handleKeyDown = (event: KeyboardEvent) => {\n      if (\n        event.key === SIDEBAR_KEYBOARD_SHORTCUT &&\n        (event.metaKey || event.ctrlKey)\n      ) {\n        event.preventDefault()\n        toggleSidebar()\n      }\n    }\n\n    window.addEventListener(\"keydown\", handleKeyDown)\n    return () => window.removeEventListener(\"keydown\", handleKeyDown)\n  }, [toggleSidebar])\n\n  // We add a state so that we can do data-state=\"expanded\" or \"collapsed\".\n  // This makes it easier to style the sidebar with Tailwind classes.\n  const state = open ? \"expanded\" : \"collapsed\"\n\n  const contextValue = React.useMemo<SidebarContextProps>(\n    () => ({\n      state,\n      open,\n      setOpen,\n      isMobile,\n      openMobile,\n      setOpenMobile,\n      toggleSidebar,\n    }),\n    [state, open, setOpen, isMobile, openMobile, setOpenMobile, toggleSidebar]\n  )\n\n  return (\n    <SidebarContext.Provider value={contextValue}>\n      <TooltipProvider delayDuration={0}>\n        <div\n          data-slot=\"sidebar-wrapper\"\n          style={\n            {\n              \"--sidebar-width\": SIDEBAR_WIDTH,\n              \"--sidebar-width-icon\": SIDEBAR_WIDTH_ICON,\n              ...style,\n            } as React.CSSProperties\n          }\n          className={cn(\n            \"group/sidebar-wrapper has-data-[variant=inset]:bg-sidebar flex min-h-svh w-full\",\n            className\n          )}\n          {...props}\n        >\n          {children}\n        </div>\n      </TooltipProvider>\n    </SidebarContext.Provider>\n  )\n}\n\nfunction Sidebar({\n  side = \"left\",\n  variant = \"sidebar\",\n  collapsible = \"offcanvas\",\n  className,\n  children,\n  ...props\n}: React.ComponentProps<\"div\"> & {\n  side?: \"left\" | \"right\"\n  variant?: \"sidebar\" | \"floating\" | \"inset\"\n  collapsible?: \"offcanvas\" | \"icon\" | \"none\"\n}) {\n  const { isMobile, state, openMobile, setOpenMobile } = useSidebar()\n\n  if (collapsible === \"none\") {\n    return (\n      <div\n        data-slot=\"sidebar\"\n        className={cn(\n          \"bg-sidebar text-sidebar-foreground flex h-full w-(--sidebar-width) flex-col\",\n          className\n        )}\n        {...props}\n      >\n        {children}\n      </div>\n    )\n  }\n\n  if (isMobile) {\n    return (\n      <Sheet open={openMobile} onOpenChange={setOpenMobile} {...props}>\n        <SheetContent\n          data-sidebar=\"sidebar\"\n          data-slot=\"sidebar\"\n          data-mobile=\"true\"\n          className=\"bg-sidebar text-sidebar-foreground w-(--sidebar-width) p-0 [&>button]:hidden\"\n          style={\n            {\n              \"--sidebar-width\": SIDEBAR_WIDTH_MOBILE,\n            } as React.CSSProperties\n          }\n          side={side}\n        >\n          <SheetHeader className=\"sr-only\">\n            <SheetTitle>Sidebar</SheetTitle>\n            <SheetDescription>Displays the mobile sidebar.</SheetDescription>\n          </SheetHeader>\n          <div className=\"flex h-full w-full flex-col\">{children}</div>\n        </SheetContent>\n      </Sheet>\n    )\n  }\n\n  return (\n    <div\n      className=\"group peer text-sidebar-foreground hidden md:block\"\n      data-state={state}\n      data-collapsible={state === \"collapsed\" ? collapsible : \"\"}\n      data-variant={variant}\n      data-side={side}\n      data-slot=\"sidebar\"\n    >\n      {/* This is what handles the sidebar gap on desktop */}\n      <div\n        data-slot=\"sidebar-gap\"\n        className={cn(\n          \"relative w-(--sidebar-width) bg-transparent transition-[width] duration-200 ease-linear\",\n          \"group-data-[collapsible=offcanvas]:w-0\",\n          \"group-data-[side=right]:rotate-180\",\n          variant === \"floating\" || variant === \"inset\"\n            ? \"group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)+(--spacing(4)))]\"\n            : \"group-data-[collapsible=icon]:w-(--sidebar-width-icon)\"\n        )}\n      />\n      <div\n        data-slot=\"sidebar-container\"\n        className={cn(\n          \"fixed inset-y-0 z-10 hidden h-svh w-(--sidebar-width) transition-[left,right,width] duration-200 ease-linear md:flex\",\n          side === \"left\"\n            ? \"left-0 group-data-[collapsible=offcanvas]:left-[calc(var(--sidebar-width)*-1)]\"\n            : \"right-0 group-data-[collapsible=offcanvas]:right-[calc(var(--sidebar-width)*-1)]\",\n          // Adjust the padding for floating and inset variants.\n          variant === \"floating\" || variant === \"inset\"\n            ? \"p-2 group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)+(--spacing(4))+2px)]\"\n            : \"group-data-[collapsible=icon]:w-(--sidebar-width-icon) group-data-[side=left]:border-r group-data-[side=right]:border-l\",\n          className\n        )}\n        {...props}\n      >\n        <div\n          data-sidebar=\"sidebar\"\n          data-slot=\"sidebar-inner\"\n          className=\"bg-sidebar group-data-[variant=floating]:border-sidebar-border flex h-full w-full flex-col group-data-[variant=floating]:rounded-lg group-data-[variant=floating]:border group-data-[variant=floating]:shadow-sm\"\n        >\n          {children}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nfunction SidebarTrigger({\n  className,\n  onClick,\n  ...props\n}: React.ComponentProps<typeof Button>) {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <Button\n      data-sidebar=\"trigger\"\n      data-slot=\"sidebar-trigger\"\n      variant=\"ghost\"\n      size=\"icon\"\n      className={cn(\"size-7\", className)}\n      onClick={(event) => {\n        onClick?.(event)\n        toggleSidebar()\n      }}\n      {...props}\n    >\n      <PanelLeftIcon />\n      <span className=\"sr-only\">Toggle Sidebar</span>\n    </Button>\n  )\n}\n\nfunction SidebarRail({ className, ...props }: React.ComponentProps<\"button\">) {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <button\n      data-sidebar=\"rail\"\n      data-slot=\"sidebar-rail\"\n      aria-label=\"Toggle Sidebar\"\n      tabIndex={-1}\n      onClick={toggleSidebar}\n      title=\"Toggle Sidebar\"\n      className={cn(\n        \"hover:after:bg-sidebar-border absolute inset-y-0 z-20 hidden w-4 -translate-x-1/2 transition-all ease-linear group-data-[side=left]:-right-4 group-data-[side=right]:left-0 after:absolute after:inset-y-0 after:left-1/2 after:w-[2px] sm:flex\",\n        \"in-data-[side=left]:cursor-w-resize in-data-[side=right]:cursor-e-resize\",\n        \"[[data-side=left][data-state=collapsed]_&]:cursor-e-resize [[data-side=right][data-state=collapsed]_&]:cursor-w-resize\",\n        \"hover:group-data-[collapsible=offcanvas]:bg-sidebar group-data-[collapsible=offcanvas]:translate-x-0 group-data-[collapsible=offcanvas]:after:left-full\",\n        \"[[data-side=left][data-collapsible=offcanvas]_&]:-right-2\",\n        \"[[data-side=right][data-collapsible=offcanvas]_&]:-left-2\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarInset({ className, ...props }: React.ComponentProps<\"main\">) {\n  return (\n    <main\n      data-slot=\"sidebar-inset\"\n      className={cn(\n        \"bg-background relative flex w-full flex-1 flex-col\",\n        \"md:peer-data-[variant=inset]:m-2 md:peer-data-[variant=inset]:ml-0 md:peer-data-[variant=inset]:rounded-xl md:peer-data-[variant=inset]:shadow-sm md:peer-data-[variant=inset]:peer-data-[state=collapsed]:ml-2\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarInput({\n  className,\n  ...props\n}: React.ComponentProps<typeof Input>) {\n  return (\n    <Input\n      data-slot=\"sidebar-input\"\n      data-sidebar=\"input\"\n      className={cn(\"bg-background h-8 w-full shadow-none\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"sidebar-header\"\n      data-sidebar=\"header\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"sidebar-footer\"\n      data-sidebar=\"footer\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarSeparator({\n  className,\n  ...props\n}: React.ComponentProps<typeof Separator>) {\n  return (\n    <Separator\n      data-slot=\"sidebar-separator\"\n      data-sidebar=\"separator\"\n      className={cn(\"bg-sidebar-border mx-2 w-auto\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarContent({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"sidebar-content\"\n      data-sidebar=\"content\"\n      className={cn(\n        \"flex min-h-0 flex-1 flex-col gap-2 overflow-auto group-data-[collapsible=icon]:overflow-hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarGroup({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"sidebar-group\"\n      data-sidebar=\"group\"\n      className={cn(\"relative flex w-full min-w-0 flex-col p-2\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarGroupLabel({\n  className,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"div\"> & { asChild?: boolean }) {\n  const Comp = asChild ? Slot : \"div\"\n\n  return (\n    <Comp\n      data-slot=\"sidebar-group-label\"\n      data-sidebar=\"group-label\"\n      className={cn(\n        \"text-sidebar-foreground/70 ring-sidebar-ring flex h-8 shrink-0 items-center rounded-md px-2 text-xs font-medium outline-hidden transition-[margin,opacity] duration-200 ease-linear focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        \"group-data-[collapsible=icon]:-mt-8 group-data-[collapsible=icon]:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarGroupAction({\n  className,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"button\"> & { asChild?: boolean }) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"sidebar-group-action\"\n      data-sidebar=\"group-action\"\n      className={cn(\n        \"text-sidebar-foreground ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground absolute top-3.5 right-3 flex aspect-square w-5 items-center justify-center rounded-md p-0 outline-hidden transition-transform focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 md:after:hidden\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarGroupContent({\n  className,\n  ...props\n}: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"sidebar-group-content\"\n      data-sidebar=\"group-content\"\n      className={cn(\"w-full text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarMenu({ className, ...props }: React.ComponentProps<\"ul\">) {\n  return (\n    <ul\n      data-slot=\"sidebar-menu\"\n      data-sidebar=\"menu\"\n      className={cn(\"flex w-full min-w-0 flex-col gap-1\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarMenuItem({ className, ...props }: React.ComponentProps<\"li\">) {\n  return (\n    <li\n      data-slot=\"sidebar-menu-item\"\n      data-sidebar=\"menu-item\"\n      className={cn(\"group/menu-item relative\", className)}\n      {...props}\n    />\n  )\n}\n\nconst sidebarMenuButtonVariants = cva(\n  \"peer/menu-button flex w-full items-center gap-2 overflow-hidden rounded-md p-2 text-left text-sm outline-hidden ring-sidebar-ring transition-[width,height,padding] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 group-has-data-[sidebar=menu-action]/menu-item:pr-8 aria-disabled:pointer-events-none aria-disabled:opacity-50 data-[active=true]:bg-sidebar-accent data-[active=true]:font-medium data-[active=true]:text-sidebar-accent-foreground data-[state=open]:hover:bg-sidebar-accent data-[state=open]:hover:text-sidebar-accent-foreground group-data-[collapsible=icon]:size-8! group-data-[collapsible=icon]:p-2! [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"hover:bg-sidebar-accent hover:text-sidebar-accent-foreground\",\n        outline:\n          \"bg-background shadow-[0_0_0_1px_hsl(var(--sidebar-border))] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground hover:shadow-[0_0_0_1px_hsl(var(--sidebar-accent))]\",\n      },\n      size: {\n        default: \"h-8 text-sm\",\n        sm: \"h-7 text-xs\",\n        lg: \"h-12 text-sm group-data-[collapsible=icon]:p-0!\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nfunction SidebarMenuButton({\n  asChild = false,\n  isActive = false,\n  variant = \"default\",\n  size = \"default\",\n  tooltip,\n  className,\n  ...props\n}: React.ComponentProps<\"button\"> & {\n  asChild?: boolean\n  isActive?: boolean\n  tooltip?: string | React.ComponentProps<typeof TooltipContent>\n} & VariantProps<typeof sidebarMenuButtonVariants>) {\n  const Comp = asChild ? Slot : \"button\"\n  const { isMobile, state } = useSidebar()\n\n  const button = (\n    <Comp\n      data-slot=\"sidebar-menu-button\"\n      data-sidebar=\"menu-button\"\n      data-size={size}\n      data-active={isActive}\n      className={cn(sidebarMenuButtonVariants({ variant, size }), className)}\n      {...props}\n    />\n  )\n\n  if (!tooltip) {\n    return button\n  }\n\n  if (typeof tooltip === \"string\") {\n    tooltip = {\n      children: tooltip,\n    }\n  }\n\n  return (\n    <Tooltip>\n      <TooltipTrigger asChild>{button}</TooltipTrigger>\n      <TooltipContent\n        side=\"right\"\n        align=\"center\"\n        hidden={state !== \"collapsed\" || isMobile}\n        {...tooltip}\n      />\n    </Tooltip>\n  )\n}\n\nfunction SidebarMenuAction({\n  className,\n  asChild = false,\n  showOnHover = false,\n  ...props\n}: React.ComponentProps<\"button\"> & {\n  asChild?: boolean\n  showOnHover?: boolean\n}) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"sidebar-menu-action\"\n      data-sidebar=\"menu-action\"\n      className={cn(\n        \"text-sidebar-foreground ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground peer-hover/menu-button:text-sidebar-accent-foreground absolute top-1.5 right-1 flex aspect-square w-5 items-center justify-center rounded-md p-0 outline-hidden transition-transform focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 md:after:hidden\",\n        \"peer-data-[size=sm]/menu-button:top-1\",\n        \"peer-data-[size=default]/menu-button:top-1.5\",\n        \"peer-data-[size=lg]/menu-button:top-2.5\",\n        \"group-data-[collapsible=icon]:hidden\",\n        showOnHover &&\n          \"peer-data-[active=true]/menu-button:text-sidebar-accent-foreground group-focus-within/menu-item:opacity-100 group-hover/menu-item:opacity-100 data-[state=open]:opacity-100 md:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarMenuBadge({\n  className,\n  ...props\n}: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"sidebar-menu-badge\"\n      data-sidebar=\"menu-badge\"\n      className={cn(\n        \"text-sidebar-foreground pointer-events-none absolute right-1 flex h-5 min-w-5 items-center justify-center rounded-md px-1 text-xs font-medium tabular-nums select-none\",\n        \"peer-hover/menu-button:text-sidebar-accent-foreground peer-data-[active=true]/menu-button:text-sidebar-accent-foreground\",\n        \"peer-data-[size=sm]/menu-button:top-1\",\n        \"peer-data-[size=default]/menu-button:top-1.5\",\n        \"peer-data-[size=lg]/menu-button:top-2.5\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarMenuSkeleton({\n  className,\n  showIcon = false,\n  ...props\n}: React.ComponentProps<\"div\"> & {\n  showIcon?: boolean\n}) {\n  // Random width between 50 to 90%.\n  const width = React.useMemo(() => {\n    return `${Math.floor(Math.random() * 40) + 50}%`\n  }, [])\n\n  return (\n    <div\n      data-slot=\"sidebar-menu-skeleton\"\n      data-sidebar=\"menu-skeleton\"\n      className={cn(\"flex h-8 items-center gap-2 rounded-md px-2\", className)}\n      {...props}\n    >\n      {showIcon && (\n        <Skeleton\n          className=\"size-4 rounded-md\"\n          data-sidebar=\"menu-skeleton-icon\"\n        />\n      )}\n      <Skeleton\n        className=\"h-4 max-w-(--skeleton-width) flex-1\"\n        data-sidebar=\"menu-skeleton-text\"\n        style={\n          {\n            \"--skeleton-width\": width,\n          } as React.CSSProperties\n        }\n      />\n    </div>\n  )\n}\n\nfunction SidebarMenuSub({ className, ...props }: React.ComponentProps<\"ul\">) {\n  return (\n    <ul\n      data-slot=\"sidebar-menu-sub\"\n      data-sidebar=\"menu-sub\"\n      className={cn(\n        \"border-sidebar-border mx-3.5 flex min-w-0 translate-x-px flex-col gap-1 border-l px-2.5 py-0.5\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarMenuSubItem({\n  className,\n  ...props\n}: React.ComponentProps<\"li\">) {\n  return (\n    <li\n      data-slot=\"sidebar-menu-sub-item\"\n      data-sidebar=\"menu-sub-item\"\n      className={cn(\"group/menu-sub-item relative\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarMenuSubButton({\n  asChild = false,\n  size = \"md\",\n  isActive = false,\n  className,\n  ...props\n}: React.ComponentProps<\"a\"> & {\n  asChild?: boolean\n  size?: \"sm\" | \"md\"\n  isActive?: boolean\n}) {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      data-slot=\"sidebar-menu-sub-button\"\n      data-sidebar=\"menu-sub-button\"\n      data-size={size}\n      data-active={isActive}\n      className={cn(\n        \"text-sidebar-foreground ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground active:bg-sidebar-accent active:text-sidebar-accent-foreground [&>svg]:text-sidebar-accent-foreground flex h-7 min-w-0 -translate-x-px items-center gap-2 overflow-hidden rounded-md px-2 outline-hidden focus-visible:ring-2 disabled:pointer-events-none disabled:opacity-50 aria-disabled:pointer-events-none aria-disabled:opacity-50 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0\",\n        \"data-[active=true]:bg-sidebar-accent data-[active=true]:text-sidebar-accent-foreground\",\n        size === \"sm\" && \"text-xs\",\n        size === \"md\" && \"text-sm\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Sidebar,\n  SidebarContent,\n  SidebarFooter,\n  SidebarGroup,\n  SidebarGroupAction,\n  SidebarGroupContent,\n  SidebarGroupLabel,\n  SidebarHeader,\n  SidebarInput,\n  SidebarInset,\n  SidebarMenu,\n  SidebarMenuAction,\n  SidebarMenuBadge,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  SidebarMenuSkeleton,\n  SidebarMenuSub,\n  SidebarMenuSubButton,\n  SidebarMenuSubItem,\n  SidebarProvider,\n  SidebarRail,\n  SidebarSeparator,\n  SidebarTrigger,\n  useSidebar,\n}\n"
      }
    },
    {
      "file_path": "frontend/components/ui/skeleton.tsx",
      "relative_path": "frontend/components/ui/skeleton.tsx",
      "language": "typescript",
      "imports": [
        "@/lib/utils"
      ],
      "exports": [
        "Skeleton"
      ],
      "classes": [],
      "functions": [
        {
          "name": "Skeleton",
          "parameters": [
            "{ className, ...props }"
          ],
          "returnType": "unknown",
          "isAsync": false,
          "isExported": true
        }
      ],
      "variables": [],
      "description": "React component: Skeleton with 1 methods and 0 classes",
      "lines_of_code": 14,
      "metadata": {
        "size_bytes": 276,
        "last_modified": "2025-10-07T19:50:38.726Z"
      },
      "analysis_enhanced": {
        "complexity_score": 3,
        "detected_issues": [],
        "semantic_tags": [
          "typescript",
          "component"
        ],
        "priority": "low",
        "summary_type": "rule-based",
        "code_snippet": "import { cn } from \"@/lib/utils\"\n\nfunction Skeleton({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"skeleton\"\n      className={cn(\"bg-accent animate-pulse rounded-md\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n",
        "full_content": "import { cn } from \"@/lib/utils\"\n\nfunction Skeleton({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"skeleton\"\n      className={cn(\"bg-accent animate-pulse rounded-md\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n"
      }
    },
    {
      "file_path": "frontend/components/ui/switch.tsx",
      "relative_path": "frontend/components/ui/switch.tsx",
      "language": "typescript",
      "imports": [
        "react",
        "@radix-ui/react-switch",
        "@/lib/utils"
      ],
      "exports": [
        "Switch"
      ],
      "classes": [],
      "functions": [
        {
          "name": "Switch",
          "parameters": [
            "{\n  className,\n  ...props\n}"
          ],
          "returnType": "unknown",
          "isAsync": false,
          "isExported": true
        }
      ],
      "variables": [],
      "description": "React component: Switch with 1 methods and 0 classes",
      "lines_of_code": 32,
      "metadata": {
        "size_bytes": 1177,
        "last_modified": "2025-10-07T19:50:38.726Z"
      },
      "analysis_enhanced": {
        "complexity_score": 4,
        "detected_issues": [],
        "semantic_tags": [
          "typescript",
          "component",
          "react"
        ],
        "priority": "low",
        "summary_type": "rule-based",
        "code_snippet": "\"use client\"\n\nimport * as React from \"react\"\nimport * as SwitchPrimitive from \"@radix-ui/react-switch\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Switch({\n  className,\n  ...props\n}: React.ComponentProps<typeof SwitchPrimitive.Root>) {\n  return (\n    <SwitchPrimitive.Root\n      data-slot=\"switch\"\n      className={cn(\n        \"peer data-[state=checked]:bg-primary data-[state=unchecked]:bg-input focus-visible:border-ring focus-visible:ring-ring/50 dark:data-[state=unchecked]:bg-input/80 inline-flex h-[1.15rem] w-8 shrink-0 items-center rounded-full border border-transparent shadow-xs transition-all outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <SwitchPrimitive.Thumb\n        data-slot=\"switch-thumb\"\n        className={cn(\n          \"bg-background dark:data-[state=unchecked]:bg-foreground dark:data-[state=checked]:bg-primary-foreground pointer-events-none block size-4 rounded-full ring-0 transition-transform data-[state=checked]:translate-x-[calc(100%-2px)] data-[state=unchecked]:translate-x-0\"\n        )}\n      />\n    </SwitchPrimitive.Root>\n  )\n}\n\nexport { Switch }\n",
        "full_content": "\"use client\"\n\nimport * as React from \"react\"\nimport * as SwitchPrimitive from \"@radix-ui/react-switch\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Switch({\n  className,\n  ...props\n}: React.ComponentProps<typeof SwitchPrimitive.Root>) {\n  return (\n    <SwitchPrimitive.Root\n      data-slot=\"switch\"\n      className={cn(\n        \"peer data-[state=checked]:bg-primary data-[state=unchecked]:bg-input focus-visible:border-ring focus-visible:ring-ring/50 dark:data-[state=unchecked]:bg-input/80 inline-flex h-[1.15rem] w-8 shrink-0 items-center rounded-full border border-transparent shadow-xs transition-all outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <SwitchPrimitive.Thumb\n        data-slot=\"switch-thumb\"\n        className={cn(\n          \"bg-background dark:data-[state=unchecked]:bg-foreground dark:data-[state=checked]:bg-primary-foreground pointer-events-none block size-4 rounded-full ring-0 transition-transform data-[state=checked]:translate-x-[calc(100%-2px)] data-[state=unchecked]:translate-x-0\"\n        )}\n      />\n    </SwitchPrimitive.Root>\n  )\n}\n\nexport { Switch }\n"
      }
    },
    {
      "file_path": "frontend/components/ui/text-rotate.tsx",
      "relative_path": "frontend/components/ui/text-rotate.tsx",
      "language": "typescript",
      "imports": [
        "framer-motion",
        "react"
      ],
      "exports": [
        "TextRotate"
      ],
      "classes": [],
      "functions": [
        {
          "name": "TextRotate",
          "parameters": [
            "{\n  texts,\n  mainClassName,\n  splitLevelClassName,\n  initial = { y: \"100%\" },\n  animate = { y: 0 },\n  exit = { y: \"-120%\" },\n  transition = { type: \"spring\", damping: 30, stiffness: 400 },\n  rotationInterval = 2000,\n}"
          ],
          "returnType": "unknown",
          "isAsync": false,
          "isExported": true
        }
      ],
      "variables": [],
      "description": "React component: TextRotate with 1 methods and 0 classes",
      "lines_of_code": 62,
      "metadata": {
        "size_bytes": 1585,
        "last_modified": "2025-10-07T19:50:38.726Z"
      },
      "analysis_enhanced": {
        "complexity_score": 3,
        "detected_issues": [],
        "semantic_tags": [
          "typescript",
          "component",
          "react"
        ],
        "priority": "low",
        "summary_type": "rule-based",
        "code_snippet": "\"use client\";\n\nimport { AnimatePresence, motion, Transition } from \"framer-motion\";\nimport { useCallback, useEffect, useState } from \"react\";\n\ninterface TextRotateProps {\n  texts: string[];\n  mainClassName?: string;\n  splitLevelClassName?: string;\n  staggerFrom?: \"first\" | \"last\";\n  initial?: { y: string };\n  animate?: { y: number };\n  exit?: { y: string };\n  staggerDuration?: number;\n  transition?: {\n    type: string;\n    damping: number;\n    stiffness: number;\n  };\n  rotationInterval?: number;\n}\n\nexport default function TextRotate({\n  texts,\n  mainClassName,\n  splitLevelClassName,\n  initial = { y: \"100%\" },\n  animate = { y: 0 },\n  exit = { y: \"-120%\" },\n  transition = { type: \"spring\", damping: 30, stiffness: 400 },\n  rotationInterval = 2000,\n}: TextRotateProps) {\n  const [currentIndex, setCurrentIndex] = useState(0);\n\n  const rotateText = useCallback(() => {\n    setCurrentIndex((prev) => (prev + 1) % texts.length);\n  }, [texts.length]);\n\n  useEffect(() => {\n    const interval = setInterval(rotateText, rotationInterval);\n    return () => clearInterval(interval);\n  }, [rotateText, rotationInterval]);\n\n  return (\n    <motion.div className={mainClassName} layout>\n      <div className={splitLevelClassName}>\n        <AnimatePresence mode=\"wait\">\n          <motion.div\n            key={currentIndex}\n            initial={initial}\n            animate={animate}\n            exit={exit}\n            transition={transition as Transition}\n          >\n            {texts[currentIndex]}\n          </motion.div>\n        </AnimatePresence>\n      </div>\n    </motion.div>\n  );\n}\n",
        "full_content": "\"use client\";\n\nimport { AnimatePresence, motion, Transition } from \"framer-motion\";\nimport { useCallback, useEffect, useState } from \"react\";\n\ninterface TextRotateProps {\n  texts: string[];\n  mainClassName?: string;\n  splitLevelClassName?: string;\n  staggerFrom?: \"first\" | \"last\";\n  initial?: { y: string };\n  animate?: { y: number };\n  exit?: { y: string };\n  staggerDuration?: number;\n  transition?: {\n    type: string;\n    damping: number;\n    stiffness: number;\n  };\n  rotationInterval?: number;\n}\n\nexport default function TextRotate({\n  texts,\n  mainClassName,\n  splitLevelClassName,\n  initial = { y: \"100%\" },\n  animate = { y: 0 },\n  exit = { y: \"-120%\" },\n  transition = { type: \"spring\", damping: 30, stiffness: 400 },\n  rotationInterval = 2000,\n}: TextRotateProps) {\n  const [currentIndex, setCurrentIndex] = useState(0);\n\n  const rotateText = useCallback(() => {\n    setCurrentIndex((prev) => (prev + 1) % texts.length);\n  }, [texts.length]);\n\n  useEffect(() => {\n    const interval = setInterval(rotateText, rotationInterval);\n    return () => clearInterval(interval);\n  }, [rotateText, rotationInterval]);\n\n  return (\n    <motion.div className={mainClassName} layout>\n      <div className={splitLevelClassName}>\n        <AnimatePresence mode=\"wait\">\n          <motion.div\n            key={currentIndex}\n            initial={initial}\n            animate={animate}\n            exit={exit}\n            transition={transition as Transition}\n          >\n            {texts[currentIndex]}\n          </motion.div>\n        </AnimatePresence>\n      </div>\n    </motion.div>\n  );\n}\n"
      }
    },
    {
      "file_path": "frontend/components/ui/textarea.tsx",
      "relative_path": "frontend/components/ui/textarea.tsx",
      "language": "typescript",
      "imports": [
        "react",
        "@/lib/utils"
      ],
      "exports": [
        "Textarea"
      ],
      "classes": [],
      "functions": [
        {
          "name": "Textarea",
          "parameters": [
            "{ className, ...props }"
          ],
          "returnType": "unknown",
          "isAsync": false,
          "isExported": true
        }
      ],
      "variables": [],
      "description": "React component: Textarea with 1 methods and 0 classes",
      "lines_of_code": 19,
      "metadata": {
        "size_bytes": 759,
        "last_modified": "2025-10-07T19:50:38.726Z"
      },
      "analysis_enhanced": {
        "complexity_score": 3,
        "detected_issues": [],
        "semantic_tags": [
          "typescript",
          "component",
          "react"
        ],
        "priority": "low",
        "summary_type": "rule-based",
        "code_snippet": "import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Textarea({ className, ...props }: React.ComponentProps<\"textarea\">) {\n  return (\n    <textarea\n      data-slot=\"textarea\"\n      className={cn(\n        \"border-input placeholder:text-muted-foreground focus-visible:border-ring focus-visible:ring-ring/50 aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive dark:bg-input/30 flex field-sizing-content min-h-16 w-full rounded-md border bg-transparent px-3 py-2 text-base shadow-xs transition-[color,box-shadow] outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Textarea }\n",
        "full_content": "import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Textarea({ className, ...props }: React.ComponentProps<\"textarea\">) {\n  return (\n    <textarea\n      data-slot=\"textarea\"\n      className={cn(\n        \"border-input placeholder:text-muted-foreground focus-visible:border-ring focus-visible:ring-ring/50 aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive dark:bg-input/30 flex field-sizing-content min-h-16 w-full rounded-md border bg-transparent px-3 py-2 text-base shadow-xs transition-[color,box-shadow] outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Textarea }\n"
      }
    },
    {
      "file_path": "frontend/components/ui/toast.tsx",
      "relative_path": "frontend/components/ui/toast.tsx",
      "language": "typescript",
      "imports": [
        "react",
        "@radix-ui/react-toast",
        "class-variance-authority",
        "lucide-react",
        "@/lib/utils"
      ],
      "exports": [
        "ToastProps",
        "ToastActionElement",
        "ToastProvider",
        "ToastViewport",
        "Toast",
        "ToastTitle",
        "ToastDescription",
        "ToastClose",
        "ToastAction"
      ],
      "classes": [],
      "functions": [],
      "variables": [
        "ToastProvider",
        "ToastViewport",
        "toastVariants",
        "Toast",
        "ToastAction",
        "ToastClose",
        "ToastTitle",
        "ToastDescription"
      ],
      "description": "React component: ToastProps with 0 methods and 0 classes",
      "lines_of_code": 125,
      "metadata": {
        "size_bytes": 4865,
        "last_modified": "2025-10-07T19:50:38.727Z"
      },
      "analysis_enhanced": {
        "complexity_score": 5,
        "detected_issues": [],
        "semantic_tags": [
          "typescript",
          "component",
          "react",
          "authentication"
        ],
        "priority": "low",
        "summary_type": "rule-based",
        "code_snippet": "\"use client\";\n\nimport * as React from \"react\";\nimport * as ToastPrimitives from \"@radix-ui/react-toast\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\nimport { X } from \"lucide-react\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst ToastProvider = ToastPrimitives.Provider;\n\nconst ToastViewport = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Viewport\n    ref={ref}\n    className={cn(\n      \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\n      className\n    )}\n    {...props}\n  />\n));\nToastViewport.displayName = ToastPrimitives.Viewport.displayName;\n\nconst toastVariants = cva(\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full\",\n  {\n    variants: {\n      variant: {\n        default: \"border bg-background text-foreground\",\n        destructive:\n          \"destructive group border-destructive bg-destructive text-destructive-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n);\n\nconst Toast = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> & VariantProps<typeof toastVariants>\n>(({ className, variant, ...props }, ref) => {\n  return (\n    <ToastPrimitives.Root\n      ref={r",
        "full_content": "\"use client\";\n\nimport * as React from \"react\";\nimport * as ToastPrimitives from \"@radix-ui/react-toast\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\nimport { X } from \"lucide-react\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst ToastProvider = ToastPrimitives.Provider;\n\nconst ToastViewport = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Viewport\n    ref={ref}\n    className={cn(\n      \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\n      className\n    )}\n    {...props}\n  />\n));\nToastViewport.displayName = ToastPrimitives.Viewport.displayName;\n\nconst toastVariants = cva(\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full\",\n  {\n    variants: {\n      variant: {\n        default: \"border bg-background text-foreground\",\n        destructive:\n          \"destructive group border-destructive bg-destructive text-destructive-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n);\n\nconst Toast = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> & VariantProps<typeof toastVariants>\n>(({ className, variant, ...props }, ref) => {\n  return (\n    <ToastPrimitives.Root\n      ref={ref}\n      className={cn(toastVariants({ variant }), className)}\n      {...props}\n    />\n  );\n});\nToast.displayName = ToastPrimitives.Root.displayName;\n\nconst ToastAction = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Action>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Action\n    ref={ref}\n    className={cn(\n      \"inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive\",\n      className\n    )}\n    {...props}\n  />\n));\nToastAction.displayName = ToastPrimitives.Action.displayName;\n\nconst ToastClose = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Close>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Close\n    ref={ref}\n    className={cn(\n      \"absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\",\n      className\n    )}\n    toast-close=\"\"\n    {...props}\n  >\n    <X className=\"h-4 w-4\" />\n  </ToastPrimitives.Close>\n));\nToastClose.displayName = ToastPrimitives.Close.displayName;\n\nconst ToastTitle = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Title>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Title ref={ref} className={cn(\"text-sm font-semibold\", className)} {...props} />\n));\nToastTitle.displayName = ToastPrimitives.Title.displayName;\n\nconst ToastDescription = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Description>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Description\n    ref={ref}\n    className={cn(\"text-sm opacity-90\", className)}\n    {...props}\n  />\n));\nToastDescription.displayName = ToastPrimitives.Description.displayName;\n\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>;\n\ntype ToastActionElement = React.ReactElement<typeof ToastAction>;\n\nexport {\n  type ToastProps,\n  type ToastActionElement,\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastClose,\n  ToastAction,\n};\n"
      }
    },
    {
      "file_path": "frontend/components/ui/toaster.tsx",
      "relative_path": "frontend/components/ui/toaster.tsx",
      "language": "typescript",
      "imports": [
        "@/components/ui/toast",
        "@/hooks/use-toast"
      ],
      "exports": [
        "Toaster"
      ],
      "classes": [],
      "functions": [
        {
          "name": "Toaster",
          "parameters": [],
          "returnType": "unknown",
          "isAsync": false,
          "isExported": true
        }
      ],
      "variables": [],
      "description": "React component: Toaster with 1 methods and 0 classes",
      "lines_of_code": 34,
      "metadata": {
        "size_bytes": 758,
        "last_modified": "2025-10-07T19:50:38.727Z"
      },
      "analysis_enhanced": {
        "complexity_score": 3,
        "detected_issues": [],
        "semantic_tags": [
          "typescript",
          "component"
        ],
        "priority": "low",
        "summary_type": "rule-based",
        "code_snippet": "\"use client\";\n\nimport {\n  Toast,\n  ToastClose,\n  ToastDescription,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport,\n} from \"@/components/ui/toast\";\nimport { useToast } from \"@/hooks/use-toast\";\n\nexport function Toaster() {\n  const { toasts } = useToast();\n\n  return (\n    <ToastProvider>\n      {toasts.map(function ({ id, title, description, action, ...props }) {\n        return (\n          <Toast key={id} {...props}>\n            <div className=\"grid gap-1\">\n              {title && <ToastTitle>{title}</ToastTitle>}\n              {description && <ToastDescription>{description}</ToastDescription>}\n            </div>\n            {action}\n            <ToastClose />\n          </Toast>\n        );\n      })}\n      <ToastViewport />\n    </ToastProvider>\n  );\n}\n",
        "full_content": "\"use client\";\n\nimport {\n  Toast,\n  ToastClose,\n  ToastDescription,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport,\n} from \"@/components/ui/toast\";\nimport { useToast } from \"@/hooks/use-toast\";\n\nexport function Toaster() {\n  const { toasts } = useToast();\n\n  return (\n    <ToastProvider>\n      {toasts.map(function ({ id, title, description, action, ...props }) {\n        return (\n          <Toast key={id} {...props}>\n            <div className=\"grid gap-1\">\n              {title && <ToastTitle>{title}</ToastTitle>}\n              {description && <ToastDescription>{description}</ToastDescription>}\n            </div>\n            {action}\n            <ToastClose />\n          </Toast>\n        );\n      })}\n      <ToastViewport />\n    </ToastProvider>\n  );\n}\n"
      }
    },
    {
      "file_path": "frontend/components/ui/tooltip.tsx",
      "relative_path": "frontend/components/ui/tooltip.tsx",
      "language": "typescript",
      "imports": [
        "react",
        "@radix-ui/react-tooltip",
        "@/lib/utils"
      ],
      "exports": [
        "Tooltip",
        "TooltipTrigger",
        "TooltipContent",
        "TooltipProvider"
      ],
      "classes": [],
      "functions": [
        {
          "name": "TooltipProvider",
          "parameters": [
            "{\n  delayDuration = 0,\n  ...props\n}"
          ],
          "returnType": "unknown",
          "isAsync": false,
          "isExported": true
        },
        {
          "name": "Tooltip",
          "parameters": [
            "{\n  ...props\n}"
          ],
          "returnType": "unknown",
          "isAsync": false,
          "isExported": true
        },
        {
          "name": "TooltipTrigger",
          "parameters": [
            "{\n  ...props\n}"
          ],
          "returnType": "unknown",
          "isAsync": false,
          "isExported": true
        },
        {
          "name": "TooltipContent",
          "parameters": [
            "{\n  className,\n  sideOffset = 0,\n  children,\n  ...props\n}"
          ],
          "returnType": "unknown",
          "isAsync": false,
          "isExported": true
        }
      ],
      "variables": [],
      "description": "React component: Tooltip with 4 methods and 0 classes",
      "lines_of_code": 62,
      "metadata": {
        "size_bytes": 1891,
        "last_modified": "2025-10-07T19:50:38.727Z"
      },
      "analysis_enhanced": {
        "complexity_score": 10,
        "detected_issues": [],
        "semantic_tags": [
          "typescript",
          "component",
          "react"
        ],
        "priority": "low",
        "summary_type": "rule-based",
        "code_snippet": "\"use client\"\n\nimport * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction TooltipProvider({\n  delayDuration = 0,\n  ...props\n}: React.ComponentProps<typeof TooltipPrimitive.Provider>) {\n  return (\n    <TooltipPrimitive.Provider\n      data-slot=\"tooltip-provider\"\n      delayDuration={delayDuration}\n      {...props}\n    />\n  )\n}\n\nfunction Tooltip({\n  ...props\n}: React.ComponentProps<typeof TooltipPrimitive.Root>) {\n  return (\n    <TooltipProvider>\n      <TooltipPrimitive.Root data-slot=\"tooltip\" {...props} />\n    </TooltipProvider>\n  )\n}\n\nfunction TooltipTrigger({\n  ...props\n}: React.ComponentProps<typeof TooltipPrimitive.Trigger>) {\n  return <TooltipPrimitive.Trigger data-slot=\"tooltip-trigger\" {...props} />\n}\n\nfunction TooltipContent({\n  className,\n  sideOffset = 0,\n  children,\n  ...props\n}: React.ComponentProps<typeof TooltipPrimitive.Content>) {\n  return (\n    <TooltipPrimitive.Portal>\n      <TooltipPrimitive.Content\n        data-slot=\"tooltip-content\"\n        sideOffset={sideOffset}\n        className={cn(\n          \"bg-primary text-primary-foreground animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 z-50 w-fit origin-(--radix-tooltip-content-transform-origin) rounded-md px-3 py-1.5 text-xs text-balance\",\n          className\n        )}\n        {...props}\n      >\n        {children}\n        <TooltipPrimitive.Arrow className=\"bg-primary fill-primary z-50 size-2.5 translate-y-[calc(-50%_-_2px)] rotate-45 rounded-[2px]\" />\n      </TooltipPrimitive.Content>\n    </TooltipPrimitive.Portal>\n  )\n}\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\n",
        "full_content": "\"use client\"\n\nimport * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction TooltipProvider({\n  delayDuration = 0,\n  ...props\n}: React.ComponentProps<typeof TooltipPrimitive.Provider>) {\n  return (\n    <TooltipPrimitive.Provider\n      data-slot=\"tooltip-provider\"\n      delayDuration={delayDuration}\n      {...props}\n    />\n  )\n}\n\nfunction Tooltip({\n  ...props\n}: React.ComponentProps<typeof TooltipPrimitive.Root>) {\n  return (\n    <TooltipProvider>\n      <TooltipPrimitive.Root data-slot=\"tooltip\" {...props} />\n    </TooltipProvider>\n  )\n}\n\nfunction TooltipTrigger({\n  ...props\n}: React.ComponentProps<typeof TooltipPrimitive.Trigger>) {\n  return <TooltipPrimitive.Trigger data-slot=\"tooltip-trigger\" {...props} />\n}\n\nfunction TooltipContent({\n  className,\n  sideOffset = 0,\n  children,\n  ...props\n}: React.ComponentProps<typeof TooltipPrimitive.Content>) {\n  return (\n    <TooltipPrimitive.Portal>\n      <TooltipPrimitive.Content\n        data-slot=\"tooltip-content\"\n        sideOffset={sideOffset}\n        className={cn(\n          \"bg-primary text-primary-foreground animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 z-50 w-fit origin-(--radix-tooltip-content-transform-origin) rounded-md px-3 py-1.5 text-xs text-balance\",\n          className\n        )}\n        {...props}\n      >\n        {children}\n        <TooltipPrimitive.Arrow className=\"bg-primary fill-primary z-50 size-2.5 translate-y-[calc(-50%_-_2px)] rotate-45 rounded-[2px]\" />\n      </TooltipPrimitive.Content>\n    </TooltipPrimitive.Portal>\n  )\n}\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\n"
      }
    },
    {
      "file_path": "frontend/components.json",
      "relative_path": "frontend/components.json",
      "language": "json",
      "imports": [],
      "exports": [],
      "classes": [],
      "functions": [],
      "variables": [],
      "description": "JSON configuration or data file",
      "lines_of_code": 21,
      "metadata": {
        "size_bytes": 426,
        "last_modified": "2025-10-07T19:50:38.721Z"
      },
      "analysis_enhanced": {
        "complexity_score": 0,
        "detected_issues": [],
        "semantic_tags": [
          "json",
          "component",
          "validation"
        ],
        "needs_ai_summary": false,
        "priority": "low",
        "summary_type": "rule-based",
        "code_snippet": "{\n  \"$schema\": \"https://ui.shadcn.com/schema.json\",\n  \"style\": \"new-york\",\n  \"rsc\": true,\n  \"tsx\": true,\n  \"tailwind\": {\n    \"config\": \"\",\n    \"css\": \"app/globals.css\",\n    \"baseColor\": \"neutral\",\n    \"cssVariables\": true,\n    \"prefix\": \"\"\n  },\n  \"aliases\": {\n    \"components\": \"@/components\",\n    \"utils\": \"@/lib/utils\",\n    \"ui\": \"@/components/ui\",\n    \"lib\": \"@/lib\",\n    \"hooks\": \"@/hooks\"\n  },\n  \"iconLibrary\": \"lucide\"\n}",
        "full_content": "{\n  \"$schema\": \"https://ui.shadcn.com/schema.json\",\n  \"style\": \"new-york\",\n  \"rsc\": true,\n  \"tsx\": true,\n  \"tailwind\": {\n    \"config\": \"\",\n    \"css\": \"app/globals.css\",\n    \"baseColor\": \"neutral\",\n    \"cssVariables\": true,\n    \"prefix\": \"\"\n  },\n  \"aliases\": {\n    \"components\": \"@/components\",\n    \"utils\": \"@/lib/utils\",\n    \"ui\": \"@/components/ui\",\n    \"lib\": \"@/lib\",\n    \"hooks\": \"@/hooks\"\n  },\n  \"iconLibrary\": \"lucide\"\n}"
      }
    },
    {
      "file_path": "frontend/constants/index.ts",
      "relative_path": "frontend/constants/index.ts",
      "language": "typescript",
      "imports": [],
      "exports": [],
      "classes": [],
      "functions": [],
      "variables": [
        "APP_NAME",
        "APP_VERSION",
        "APP_DESCRIPTION",
        "LOCAL_STORAGE_KEY",
        "COOKIE_NAME",
        "STATUS"
      ],
      "description": "TypeScript file containing basic code structure and definitions",
      "lines_of_code": 17,
      "metadata": {
        "size_bytes": 387,
        "last_modified": "2025-10-07T19:50:38.727Z"
      },
      "analysis_enhanced": {
        "complexity_score": 0,
        "detected_issues": [],
        "semantic_tags": [
          "typescript",
          "background-jobs"
        ],
        "priority": "low",
        "summary_type": "rule-based",
        "code_snippet": "export const APP_NAME = \"Qlio\"\nexport const APP_VERSION = \"1.0.0\"\nexport const APP_DESCRIPTION =\n  \"Qlio is a platform for running jobs in the cloud.\"\n\nexport const LOCAL_STORAGE_KEY = \"@qlio-token\"\n\nexport const COOKIE_NAME = \"@qlio-token\"\n\nexport const STATUS = {\n  PENDING: \"PENDING\",\n  RUNNING: \"RUNNING\",\n  SUCCESS: \"SUCCESS\",\n  FAILED: \"FAILED\",\n  CANCELED: \"CANCELED\",\n} as const\n",
        "full_content": "export const APP_NAME = \"Qlio\"\nexport const APP_VERSION = \"1.0.0\"\nexport const APP_DESCRIPTION =\n  \"Qlio is a platform for running jobs in the cloud.\"\n\nexport const LOCAL_STORAGE_KEY = \"@qlio-token\"\n\nexport const COOKIE_NAME = \"@qlio-token\"\n\nexport const STATUS = {\n  PENDING: \"PENDING\",\n  RUNNING: \"RUNNING\",\n  SUCCESS: \"SUCCESS\",\n  FAILED: \"FAILED\",\n  CANCELED: \"CANCELED\",\n} as const\n"
      }
    },
    {
      "file_path": "frontend/hooks/data-access/job.ts",
      "relative_path": "frontend/hooks/data-access/job.ts",
      "language": "typescript",
      "imports": [
        "@/lib/token-interceptor",
        "axios",
        "../data-type",
        "../data-type/response",
        "../data-type/payload"
      ],
      "exports": [],
      "classes": [],
      "functions": [],
      "variables": [
        "jobApi",
        "getJobs",
        "createJob",
        "getJobById"
      ],
      "description": "TypeScript file containing basic code structure and definitions",
      "lines_of_code": 33,
      "metadata": {
        "size_bytes": 877,
        "last_modified": "2025-10-07T19:50:38.727Z"
      },
      "analysis_enhanced": {
        "complexity_score": 3,
        "detected_issues": [
          {
            "type": "best-practice",
            "severity": "medium",
            "description": "Missing error handling for async operations",
            "category": "missing-error-handling"
          }
        ],
        "semantic_tags": [
          "typescript",
          "http-client",
          "background-jobs"
        ],
        "priority": "low",
        "summary_type": "rule-based",
        "code_snippet": "import tokenInterceptors from \"@/lib/token-interceptor\";\nimport axios from \"axios\";\nimport { Job } from \"../data-type\";\nimport { ApiResponse } from \"../data-type/response\";\nimport { JobPayload } from \"../data-type/payload\";\n\nconst jobApi = axios.create({\n  baseURL: `${process.env.NEXT_PUBLIC_HOST_URL}/jobs`,\n});\n\njobApi.interceptors.request.use(tokenInterceptors);\n\nexport const getJobs = async () => {\n  const { data } = await jobApi.get<ApiResponse<Job[]>>(\"/\", {\n    withCredentials: true,\n  });\n  return data.data;\n};\n\nexport const createJob = async (body: JobPayload) => {\n  const { data } = await jobApi.post<ApiResponse<Job>>(\"/\", body, {\n    withCredentials: true,\n  });\n  return data.data;\n};\n\nexport const getJobById = async (id: string) => {\n  const { data } = await jobApi.get<ApiResponse<Job>>(`/${id}`, {\n    withCredentials: true,\n  });\n  return data.data;\n};\n",
        "full_content": "import tokenInterceptors from \"@/lib/token-interceptor\";\nimport axios from \"axios\";\nimport { Job } from \"../data-type\";\nimport { ApiResponse } from \"../data-type/response\";\nimport { JobPayload } from \"../data-type/payload\";\n\nconst jobApi = axios.create({\n  baseURL: `${process.env.NEXT_PUBLIC_HOST_URL}/jobs`,\n});\n\njobApi.interceptors.request.use(tokenInterceptors);\n\nexport const getJobs = async () => {\n  const { data } = await jobApi.get<ApiResponse<Job[]>>(\"/\", {\n    withCredentials: true,\n  });\n  return data.data;\n};\n\nexport const createJob = async (body: JobPayload) => {\n  const { data } = await jobApi.post<ApiResponse<Job>>(\"/\", body, {\n    withCredentials: true,\n  });\n  return data.data;\n};\n\nexport const getJobById = async (id: string) => {\n  const { data } = await jobApi.get<ApiResponse<Job>>(`/${id}`, {\n    withCredentials: true,\n  });\n  return data.data;\n};\n"
      }
    },
    {
      "file_path": "frontend/hooks/data-access/users.ts",
      "relative_path": "frontend/hooks/data-access/users.ts",
      "language": "typescript",
      "imports": [
        "axios",
        "../data-type/payload",
        "../data-type/response",
        "../data-type"
      ],
      "exports": [],
      "classes": [],
      "functions": [],
      "variables": [
        "usersApi",
        "signUp",
        "login"
      ],
      "description": "TypeScript file containing basic code structure and definitions",
      "lines_of_code": 25,
      "metadata": {
        "size_bytes": 742,
        "last_modified": "2025-10-07T19:50:38.727Z"
      },
      "analysis_enhanced": {
        "complexity_score": 2,
        "detected_issues": [
          {
            "type": "best-practice",
            "severity": "medium",
            "description": "Missing error handling for async operations",
            "category": "missing-error-handling"
          }
        ],
        "semantic_tags": [
          "typescript",
          "http-client",
          "authentication"
        ],
        "priority": "low",
        "summary_type": "rule-based",
        "code_snippet": "import axios from \"axios\"\nimport { LoginPayload, SignUpPayload } from \"../data-type/payload\"\nimport { ApiResponse } from \"../data-type/response\"\nimport { User } from \"../data-type\"\nconst usersApi = axios.create({\n  baseURL: `${process.env.NEXT_PUBLIC_HOST_URL}/users`,\n})\n\nexport const signUp = async (body: SignUpPayload) => {\n  const { data } = await usersApi.post<ApiResponse<User>>(\"/\", body)\n  return data.data\n}\n\n// export const getUsers = async () => {\n//   const { data } = await usersApi.get<ApiResponse<User[]>>(\"/\");\n//   return data.data;\n// };\n\nexport const login = async (body: LoginPayload) => {\n  const { data } = await usersApi.post<ApiResponse<string>>(\"/login\", body, {\n    withCredentials: true,\n  })\n  return data.data\n}\n",
        "full_content": "import axios from \"axios\"\nimport { LoginPayload, SignUpPayload } from \"../data-type/payload\"\nimport { ApiResponse } from \"../data-type/response\"\nimport { User } from \"../data-type\"\nconst usersApi = axios.create({\n  baseURL: `${process.env.NEXT_PUBLIC_HOST_URL}/users`,\n})\n\nexport const signUp = async (body: SignUpPayload) => {\n  const { data } = await usersApi.post<ApiResponse<User>>(\"/\", body)\n  return data.data\n}\n\n// export const getUsers = async () => {\n//   const { data } = await usersApi.get<ApiResponse<User[]>>(\"/\");\n//   return data.data;\n// };\n\nexport const login = async (body: LoginPayload) => {\n  const { data } = await usersApi.post<ApiResponse<string>>(\"/login\", body, {\n    withCredentials: true,\n  })\n  return data.data\n}\n"
      }
    },
    {
      "file_path": "frontend/hooks/data-type/index.ts",
      "relative_path": "frontend/hooks/data-type/index.ts",
      "language": "typescript",
      "imports": [],
      "exports": [],
      "classes": [],
      "functions": [],
      "variables": [],
      "description": "TypeScript file containing basic code structure and definitions",
      "lines_of_code": 51,
      "metadata": {
        "size_bytes": 922,
        "last_modified": "2025-10-07T19:50:38.727Z"
      },
      "analysis_enhanced": {
        "complexity_score": 0,
        "detected_issues": [],
        "semantic_tags": [
          "typescript",
          "background-jobs"
        ],
        "priority": "low",
        "summary_type": "rule-based",
        "code_snippet": "export interface User {\n  id: string;\n  email: string;\n  name: string;\n  password: string;\n}\n\nexport interface Job {\n  id: string;\n  title: string;\n  description: string;\n  createdAt: Date;\n  updatedAt: Date;\n}\n\nexport interface JobResponse {\n  success: boolean;\n  response: string;\n  timestamp: string;\n}\n\nexport interface JobStreamResponse {\n  jobId: String;\n  output: JobResponse;\n  type: \"stdout\" | \"stderr\";\n  timestamp: string;\n  exitCode?: number;\n}\n\nexport interface Job {\n  id: string;\n  command: string;\n  params: string[];\n  timeout: number;\n  priority: number;\n  output: JobResponse[];\n  status: \"PENDING\" | \"RUNNING\" | \"SUCCESS\" | \"FAILED\" | \"CANCELED\";\n  exitCode: number;\n  retries: number;\n  signal: string | null;\n  startedAt: Date;\n  endedAt: Date;\n  duration: number | null;\n  cpuUsage: number;\n  memoryUsage: number;\n  workerId: string | null;\n  createdAt: Date;\n  updatedAt: Date;\n  userId: string;\n}\n",
        "full_content": "export interface User {\n  id: string;\n  email: string;\n  name: string;\n  password: string;\n}\n\nexport interface Job {\n  id: string;\n  title: string;\n  description: string;\n  createdAt: Date;\n  updatedAt: Date;\n}\n\nexport interface JobResponse {\n  success: boolean;\n  response: string;\n  timestamp: string;\n}\n\nexport interface JobStreamResponse {\n  jobId: String;\n  output: JobResponse;\n  type: \"stdout\" | \"stderr\";\n  timestamp: string;\n  exitCode?: number;\n}\n\nexport interface Job {\n  id: string;\n  command: string;\n  params: string[];\n  timeout: number;\n  priority: number;\n  output: JobResponse[];\n  status: \"PENDING\" | \"RUNNING\" | \"SUCCESS\" | \"FAILED\" | \"CANCELED\";\n  exitCode: number;\n  retries: number;\n  signal: string | null;\n  startedAt: Date;\n  endedAt: Date;\n  duration: number | null;\n  cpuUsage: number;\n  memoryUsage: number;\n  workerId: string | null;\n  createdAt: Date;\n  updatedAt: Date;\n  userId: string;\n}\n"
      }
    },
    {
      "file_path": "frontend/hooks/data-type/payload.ts",
      "relative_path": "frontend/hooks/data-type/payload.ts",
      "language": "typescript",
      "imports": [],
      "exports": [],
      "classes": [],
      "functions": [],
      "variables": [],
      "description": "TypeScript file containing basic code structure and definitions",
      "lines_of_code": 19,
      "metadata": {
        "size_bytes": 286,
        "last_modified": "2025-10-07T19:50:38.727Z"
      },
      "analysis_enhanced": {
        "complexity_score": 0,
        "detected_issues": [],
        "semantic_tags": [
          "typescript"
        ],
        "priority": "low",
        "summary_type": "rule-based",
        "code_snippet": "export interface SignUpPayload {\n  email: string\n  password: string\n  name: string\n}\n\nexport interface LoginPayload {\n  email: string\n  password: string\n}\n\nexport interface JobPayload {\n  command: string\n  priority: number\n  timeout: number\n  params?: string[]\n  isKillable?: boolean\n}\n",
        "full_content": "export interface SignUpPayload {\n  email: string\n  password: string\n  name: string\n}\n\nexport interface LoginPayload {\n  email: string\n  password: string\n}\n\nexport interface JobPayload {\n  command: string\n  priority: number\n  timeout: number\n  params?: string[]\n  isKillable?: boolean\n}\n"
      }
    },
    {
      "file_path": "frontend/hooks/data-type/response.ts",
      "relative_path": "frontend/hooks/data-type/response.ts",
      "language": "typescript",
      "imports": [],
      "exports": [],
      "classes": [],
      "functions": [],
      "variables": [],
      "description": "TypeScript file containing basic code structure and definitions",
      "lines_of_code": 6,
      "metadata": {
        "size_bytes": 94,
        "last_modified": "2025-10-07T19:50:38.727Z"
      },
      "analysis_enhanced": {
        "complexity_score": 0,
        "detected_issues": [],
        "semantic_tags": [
          "typescript"
        ],
        "priority": "low",
        "summary_type": "rule-based",
        "code_snippet": "export interface ApiResponse<T = unknown> {\n  data: T;\n  message: string;\n  status: string;\n}\n",
        "full_content": "export interface ApiResponse<T = unknown> {\n  data: T;\n  message: string;\n  status: string;\n}\n"
      }
    },
    {
      "file_path": "frontend/hooks/mutation.ts",
      "relative_path": "frontend/hooks/mutation.ts",
      "language": "typescript",
      "imports": [
        "@tanstack/react-query",
        "./data-access/users",
        "./data-access/job"
      ],
      "exports": [],
      "classes": [],
      "functions": [],
      "variables": [
        "useSignUp",
        "useLogin",
        "useCreateJob"
      ],
      "description": "TypeScript file containing basic code structure and definitions",
      "lines_of_code": 25,
      "metadata": {
        "size_bytes": 517,
        "last_modified": "2025-10-07T19:50:38.728Z"
      },
      "analysis_enhanced": {
        "complexity_score": 2,
        "detected_issues": [],
        "semantic_tags": [
          "typescript",
          "react",
          "authentication",
          "background-jobs"
        ],
        "priority": "low",
        "summary_type": "rule-based",
        "code_snippet": "import { useMutation } from \"@tanstack/react-query\";\nimport * as User from \"./data-access/users\";\nimport * as Job from \"./data-access/job\";\n\nexport const useSignUp = () => {\n  return useMutation({\n    mutationKey: [\"signup\"],\n    mutationFn: User.signUp,\n  });\n};\n\nexport const useLogin = () => {\n  return useMutation({\n    mutationKey: [\"login\"],\n    mutationFn: User.login,\n  });\n};\n\nexport const useCreateJob = () => {\n  return useMutation({\n    mutationKey: [\"createJob\"],\n    mutationFn: Job.createJob,\n  });\n};\n",
        "full_content": "import { useMutation } from \"@tanstack/react-query\";\nimport * as User from \"./data-access/users\";\nimport * as Job from \"./data-access/job\";\n\nexport const useSignUp = () => {\n  return useMutation({\n    mutationKey: [\"signup\"],\n    mutationFn: User.signUp,\n  });\n};\n\nexport const useLogin = () => {\n  return useMutation({\n    mutationKey: [\"login\"],\n    mutationFn: User.login,\n  });\n};\n\nexport const useCreateJob = () => {\n  return useMutation({\n    mutationKey: [\"createJob\"],\n    mutationFn: Job.createJob,\n  });\n};\n"
      }
    },
    {
      "file_path": "frontend/hooks/queries.ts",
      "relative_path": "frontend/hooks/queries.ts",
      "language": "typescript",
      "imports": [
        "@tanstack/react-query",
        "./data-access/job"
      ],
      "exports": [],
      "classes": [],
      "functions": [],
      "variables": [
        "useGetJobs",
        "getJobById"
      ],
      "description": "TypeScript file containing basic code structure and definitions",
      "lines_of_code": 18,
      "metadata": {
        "size_bytes": 373,
        "last_modified": "2025-10-07T19:50:38.728Z"
      },
      "analysis_enhanced": {
        "complexity_score": 1,
        "detected_issues": [],
        "semantic_tags": [
          "typescript",
          "react",
          "background-jobs"
        ],
        "priority": "low",
        "summary_type": "rule-based",
        "code_snippet": "import { useQuery } from \"@tanstack/react-query\";\nimport * as Job from \"./data-access/job\";\n\nexport const useGetJobs = () => {\n  return useQuery({\n    queryKey: [\"jobs\"],\n    queryFn: () => Job.getJobs(),\n  });\n};\n\nexport const getJobById = (id: string) => {\n  return useQuery({\n    queryKey: [\"job\", id],\n    queryFn: () => Job.getJobById(id),\n    enabled: !!id,\n  });\n};\n",
        "full_content": "import { useQuery } from \"@tanstack/react-query\";\nimport * as Job from \"./data-access/job\";\n\nexport const useGetJobs = () => {\n  return useQuery({\n    queryKey: [\"jobs\"],\n    queryFn: () => Job.getJobs(),\n  });\n};\n\nexport const getJobById = (id: string) => {\n  return useQuery({\n    queryKey: [\"job\", id],\n    queryFn: () => Job.getJobById(id),\n    enabled: !!id,\n  });\n};\n"
      }
    },
    {
      "file_path": "frontend/hooks/use-mobile.ts",
      "relative_path": "frontend/hooks/use-mobile.ts",
      "language": "typescript",
      "imports": [
        "react"
      ],
      "exports": [
        "useIsMobile"
      ],
      "classes": [],
      "functions": [
        {
          "name": "useIsMobile",
          "parameters": [],
          "returnType": "unknown",
          "isAsync": false,
          "isExported": true
        }
      ],
      "variables": [
        "MOBILE_BREAKPOINT"
      ],
      "description": "TypeScript module containing 1 functions, 1 exports",
      "lines_of_code": 20,
      "metadata": {
        "size_bytes": 565,
        "last_modified": "2025-10-07T19:50:38.728Z"
      },
      "analysis_enhanced": {
        "complexity_score": 3,
        "detected_issues": [],
        "semantic_tags": [
          "typescript",
          "react"
        ],
        "priority": "low",
        "summary_type": "rule-based",
        "code_snippet": "import * as React from \"react\"\n\nconst MOBILE_BREAKPOINT = 768\n\nexport function useIsMobile() {\n  const [isMobile, setIsMobile] = React.useState<boolean | undefined>(undefined)\n\n  React.useEffect(() => {\n    const mql = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT - 1}px)`)\n    const onChange = () => {\n      setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    }\n    mql.addEventListener(\"change\", onChange)\n    setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    return () => mql.removeEventListener(\"change\", onChange)\n  }, [])\n\n  return !!isMobile\n}\n",
        "full_content": "import * as React from \"react\"\n\nconst MOBILE_BREAKPOINT = 768\n\nexport function useIsMobile() {\n  const [isMobile, setIsMobile] = React.useState<boolean | undefined>(undefined)\n\n  React.useEffect(() => {\n    const mql = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT - 1}px)`)\n    const onChange = () => {\n      setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    }\n    mql.addEventListener(\"change\", onChange)\n    setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    return () => mql.removeEventListener(\"change\", onChange)\n  }, [])\n\n  return !!isMobile\n}\n"
      }
    },
    {
      "file_path": "frontend/hooks/use-toast.ts",
      "relative_path": "frontend/hooks/use-toast.ts",
      "language": "typescript",
      "imports": [
        "react",
        "@/components/ui/toast"
      ],
      "exports": [
        "useToast",
        "toast"
      ],
      "classes": [],
      "functions": [
        {
          "name": "genId",
          "parameters": [],
          "returnType": "unknown",
          "isAsync": false,
          "isExported": false
        },
        {
          "name": "dispatch",
          "parameters": [
            "action"
          ],
          "returnType": "unknown",
          "isAsync": false,
          "isExported": false
        },
        {
          "name": "toast",
          "parameters": [
            "{ ...props }"
          ],
          "returnType": "unknown",
          "isAsync": false,
          "isExported": true
        },
        {
          "name": "useToast",
          "parameters": [],
          "returnType": "unknown",
          "isAsync": false,
          "isExported": true
        }
      ],
      "variables": [
        "TOAST_LIMIT",
        "TOAST_REMOVE_DELAY",
        "actionTypes",
        "count",
        "toastTimeouts",
        "addToRemoveQueue",
        "reducer",
        "listeners",
        "memoryState"
      ],
      "description": "**Technical Description**\n\n### Purpose\nThe provided TypeScript code file, `use-toast.ts`, is a custom React hook designed to manage toast notifications. It provides a simple way to display toast messages with customizable titles, descriptions, and actions.\n\n### Components\nThe code consists of the following key functions:\n\n1. `genId()`: generates a unique ID for each toast notification.\n2. `addToRemoveQueue(toastId: string)`: adds a toast ID to a queue for removal after a specified delay.\n3. `reducer(state: State, action: Action): State`: the main reducer function that updates the toast state based on the action type.\n4. `dispatch(action: Action)`: dispatches an action to update the toast state",
      "lines_of_code": 190,
      "metadata": {
        "size_bytes": 3988,
        "last_modified": "2025-10-07T19:50:38.728Z"
      },
      "analysis_enhanced": {
        "complexity_score": 11,
        "detected_issues": [],
        "semantic_tags": [
          "typescript",
          "react"
        ],
        "needs_ai_summary": true,
        "priority": "medium",
        "summary_type": "ai-generated",
        "code_snippet": "\"use client\";\n\n// Inspired by react-hot-toast library\nimport * as React from \"react\";\n\nimport type { ToastActionElement, ToastProps } from \"@/components/ui/toast\";\n\nconst TOAST_LIMIT = 1;\nconst TOAST_REMOVE_DELAY = 1000000;\n\ntype ToasterToast = ToastProps & {\n  id: string;\n  title?: React.ReactNode;\n  description?: React.ReactNode;\n  action?: ToastActionElement;\n};\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const;\n\nlet count = 0;\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER;\n  return count.toString();\n}\n\ntype ActionType = typeof actionTypes;\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"];\n      toast: ToasterToast;\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"];\n      toast: Partial<ToasterToast>;\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"];\n      toastId?: ToasterToast[\"id\"];\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"];\n      toastId?: ToasterToast[\"id\"];\n    };\n\ninterface State {\n  toasts: ToasterToast[];\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>();\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return;\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId);\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    });\n  }, TOAST_REMOVE_DELAY);\n\n  toastTimeouts.set(toastId, timeout);\n};\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      };\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) => (t.id === action.toast.id ? { ...t, ...action.toast } : t)),\n      };\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action;\n\n      // ! Side effects ! - This could be extracted into a dismis",
        "full_content": "\"use client\";\n\n// Inspired by react-hot-toast library\nimport * as React from \"react\";\n\nimport type { ToastActionElement, ToastProps } from \"@/components/ui/toast\";\n\nconst TOAST_LIMIT = 1;\nconst TOAST_REMOVE_DELAY = 1000000;\n\ntype ToasterToast = ToastProps & {\n  id: string;\n  title?: React.ReactNode;\n  description?: React.ReactNode;\n  action?: ToastActionElement;\n};\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const;\n\nlet count = 0;\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER;\n  return count.toString();\n}\n\ntype ActionType = typeof actionTypes;\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"];\n      toast: ToasterToast;\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"];\n      toast: Partial<ToasterToast>;\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"];\n      toastId?: ToasterToast[\"id\"];\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"];\n      toastId?: ToasterToast[\"id\"];\n    };\n\ninterface State {\n  toasts: ToasterToast[];\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>();\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return;\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId);\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    });\n  }, TOAST_REMOVE_DELAY);\n\n  toastTimeouts.set(toastId, timeout);\n};\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      };\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) => (t.id === action.toast.id ? { ...t, ...action.toast } : t)),\n      };\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action;\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId);\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id);\n        });\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      };\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        };\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      };\n  }\n};\n\nconst listeners: Array<(state: State) => void> = [];\n\nlet memoryState: State = { toasts: [] };\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action);\n  listeners.forEach((listener) => {\n    listener(memoryState);\n  });\n}\n\ntype Toast = Omit<ToasterToast, \"id\">;\n\nfunction toast({ ...props }: Toast) {\n  const id = genId();\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    });\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id });\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss();\n      },\n    },\n  });\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  };\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState);\n\n  React.useEffect(() => {\n    listeners.push(setState);\n    return () => {\n      const index = listeners.indexOf(setState);\n      if (index > -1) {\n        listeners.splice(index, 1);\n      }\n    };\n  }, [state]);\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  };\n}\n\nexport { useToast, toast };\n"
      }
    },
    {
      "file_path": "frontend/lib/faqs.ts",
      "relative_path": "frontend/lib/faqs.ts",
      "language": "typescript",
      "imports": [],
      "exports": [],
      "classes": [],
      "functions": [],
      "variables": [
        "faqs"
      ],
      "description": "TypeScript file containing basic code structure and definitions",
      "lines_of_code": 75,
      "metadata": {
        "size_bytes": 2962,
        "last_modified": "2025-10-07T19:50:38.728Z"
      },
      "analysis_enhanced": {
        "complexity_score": 0,
        "detected_issues": [],
        "semantic_tags": [
          "typescript",
          "background-jobs"
        ],
        "priority": "low",
        "summary_type": "rule-based",
        "code_snippet": "export interface FAQ {\n  id: string;\n  question: string;\n  answer: string;\n}\n\nexport const faqs: FAQ[] = [\n  {\n    id: \"1\",\n    question: \"What is Qlio?\",\n    answer:\n      \"Qlio is a real-time job execution platform that lets developers run shell commands, scripts, or long-running processes in the cloud. It supports prioritization, retries, live logs, cancellation, and detailed analytics for each job.\",\n  },\n  {\n    id: \"2\",\n    question: \"What kind of jobs can I run?\",\n    answer:\n      \"You can run any shell-based script — from Bash one-liners to full deployment workflows. Qlio supports stdout, stderr streaming, retry logic, timeouts, and command parameters.\",\n  },\n  {\n    id: \"3\",\n    question: \"How does the retry system work?\",\n    answer:\n      \"Each job supports up to 3 retry attempts. If a job fails, it’s moved to a retry queue with exponential backoff. After 3 failures, the job is marked as FAILED and no longer retried.\",\n  },\n  {\n    id: \"4\",\n    question: \"Can I see logs in real-time?\",\n    answer:\n      \"Yes. Qlio streams stdout and stderr in real-time to your browser. You’ll see your job output as it happens — just like a real terminal.\",\n  },\n  {\n    id: \"5\",\n    question: \"What is 'priority' in a job?\",\n    answer:\n      \"Jobs can be assigned a priority level (1 being highest). The worker queue system always pulls higher-priority jobs before lower ones, ensuring time-sensitive tasks are handled first.\",\n  },\n  {\n    id: \"6\",\n    question: \"What happens if my script hangs or runs forever?\",\n    answer:\n      \"Every job includes a timeout (in milliseconds). If the script exceeds the timeout, it is forcefully terminated and marked as FAILED.\",\n  },\n  {\n    id: \"7\",\n    question: \"How can I cancel a running job?\",\n    answer:\n      \"Each job has a unique ID. If a job is RUNNING, you can cancel it in real-time via the dashboard. It will immediately terminate the process on the worker machine.\",\n  },\n  {\n    id: \"8\",\n    question: \"How do you track resource",
        "full_content": "export interface FAQ {\n  id: string;\n  question: string;\n  answer: string;\n}\n\nexport const faqs: FAQ[] = [\n  {\n    id: \"1\",\n    question: \"What is Qlio?\",\n    answer:\n      \"Qlio is a real-time job execution platform that lets developers run shell commands, scripts, or long-running processes in the cloud. It supports prioritization, retries, live logs, cancellation, and detailed analytics for each job.\",\n  },\n  {\n    id: \"2\",\n    question: \"What kind of jobs can I run?\",\n    answer:\n      \"You can run any shell-based script — from Bash one-liners to full deployment workflows. Qlio supports stdout, stderr streaming, retry logic, timeouts, and command parameters.\",\n  },\n  {\n    id: \"3\",\n    question: \"How does the retry system work?\",\n    answer:\n      \"Each job supports up to 3 retry attempts. If a job fails, it’s moved to a retry queue with exponential backoff. After 3 failures, the job is marked as FAILED and no longer retried.\",\n  },\n  {\n    id: \"4\",\n    question: \"Can I see logs in real-time?\",\n    answer:\n      \"Yes. Qlio streams stdout and stderr in real-time to your browser. You’ll see your job output as it happens — just like a real terminal.\",\n  },\n  {\n    id: \"5\",\n    question: \"What is 'priority' in a job?\",\n    answer:\n      \"Jobs can be assigned a priority level (1 being highest). The worker queue system always pulls higher-priority jobs before lower ones, ensuring time-sensitive tasks are handled first.\",\n  },\n  {\n    id: \"6\",\n    question: \"What happens if my script hangs or runs forever?\",\n    answer:\n      \"Every job includes a timeout (in milliseconds). If the script exceeds the timeout, it is forcefully terminated and marked as FAILED.\",\n  },\n  {\n    id: \"7\",\n    question: \"How can I cancel a running job?\",\n    answer:\n      \"Each job has a unique ID. If a job is RUNNING, you can cancel it in real-time via the dashboard. It will immediately terminate the process on the worker machine.\",\n  },\n  {\n    id: \"8\",\n    question: \"How do you track resource usage?\",\n    answer:\n      \"During execution, we track CPU and memory usage of each job process using system-level metrics. These stats are stored and shown in your job detail view.\",\n  },\n  {\n    id: \"9\",\n    question: \"Can I run multiple jobs at once?\",\n    answer:\n      \"Yes. Qlio supports concurrency. You can scale horizontally by running multiple worker instances, and they will automatically distribute and process jobs in parallel.\",\n  },\n  {\n    id: \"10\",\n    question: \"Is my command history saved?\",\n    answer:\n      \"Yes. All submitted commands, their output, status, resource usage, and timestamps are saved under your account so you can view past jobs and their performance metrics anytime.\",\n  },\n  {\n    id: \"11\",\n    question: \"Is Qlio open source?\",\n    answer:\n      \"Depends on your implementation. But yes — if you’ve cloned or built your own version of it, you can host it, scale it, or modify it however you like.\",\n  },\n];\n"
      }
    },
    {
      "file_path": "frontend/lib/features.ts",
      "relative_path": "frontend/lib/features.ts",
      "language": "typescript",
      "imports": [],
      "exports": [],
      "classes": [],
      "functions": [],
      "variables": [
        "features"
      ],
      "description": "TypeScript file containing basic code structure and definitions",
      "lines_of_code": 24,
      "metadata": {
        "size_bytes": 757,
        "last_modified": "2025-10-07T19:50:38.728Z"
      },
      "analysis_enhanced": {
        "complexity_score": 0,
        "detected_issues": [],
        "semantic_tags": [
          "typescript",
          "background-jobs"
        ],
        "priority": "low",
        "summary_type": "rule-based",
        "code_snippet": "export const features = [\n  {\n    step: \"1\",\n    title: \"Create & Dispatch Jobs\",\n    content:\n      \"Log in and create your job by providing a shell command, priority, and timeout. Your job is instantly dispatched to a worker node.\",\n    image: \"/images/qlio-1.png\",\n  },\n  {\n    step: \"2\",\n    title: \"Track Execution in Real-Time\",\n    content:\n      \"Watch live logs stream into your interactive terminal. View retries, CPU and memory usage, and detailed execution metrics.\",\n    image: \"/images/qlio-3.png\",\n  },\n  {\n    step: \"3\",\n    title: \"Get Results & Insights\",\n    content:\n      \"Once done, view the final output, analyze analytics, and explore job history to track performance and failures at scale.\",\n    image: \"/images/qlio-2.png\",\n  },\n]\n",
        "full_content": "export const features = [\n  {\n    step: \"1\",\n    title: \"Create & Dispatch Jobs\",\n    content:\n      \"Log in and create your job by providing a shell command, priority, and timeout. Your job is instantly dispatched to a worker node.\",\n    image: \"/images/qlio-1.png\",\n  },\n  {\n    step: \"2\",\n    title: \"Track Execution in Real-Time\",\n    content:\n      \"Watch live logs stream into your interactive terminal. View retries, CPU and memory usage, and detailed execution metrics.\",\n    image: \"/images/qlio-3.png\",\n  },\n  {\n    step: \"3\",\n    title: \"Get Results & Insights\",\n    content:\n      \"Once done, view the final output, analyze analytics, and explore job history to track performance and failures at scale.\",\n    image: \"/images/qlio-2.png\",\n  },\n]\n"
      }
    },
    {
      "file_path": "frontend/lib/hero.ts",
      "relative_path": "frontend/lib/hero.ts",
      "language": "typescript",
      "imports": [],
      "exports": [],
      "classes": [],
      "functions": [],
      "variables": [
        "heroImages"
      ],
      "description": "TypeScript file containing basic code structure and definitions",
      "lines_of_code": 23,
      "metadata": {
        "size_bytes": 297,
        "last_modified": "2025-10-07T19:50:38.728Z"
      },
      "analysis_enhanced": {
        "complexity_score": 0,
        "detected_issues": [],
        "semantic_tags": [
          "typescript"
        ],
        "priority": "low",
        "summary_type": "rule-based",
        "code_snippet": "export const heroImages = [\n  {\n    src: \"/og.png\",\n    alt: \"OG\",\n    rotation: -6,\n  },\n  {\n    src: \"/hero2.png\",\n    alt: \"HERO2\",\n    rotation: -12,\n  },\n  {\n    src: \"/hero3.png\",\n    alt: \"HERO3\",\n    rotation: 6,\n  },\n  {\n    src: \"/hero1.png\",\n    alt: \"HERO1\",\n    rotation: 12,\n  },\n];\n",
        "full_content": "export const heroImages = [\n  {\n    src: \"/og.png\",\n    alt: \"OG\",\n    rotation: -6,\n  },\n  {\n    src: \"/hero2.png\",\n    alt: \"HERO2\",\n    rotation: -12,\n  },\n  {\n    src: \"/hero3.png\",\n    alt: \"HERO3\",\n    rotation: 6,\n  },\n  {\n    src: \"/hero1.png\",\n    alt: \"HERO1\",\n    rotation: 12,\n  },\n];\n"
      }
    },
    {
      "file_path": "frontend/lib/socket.ts",
      "relative_path": "frontend/lib/socket.ts",
      "language": "typescript",
      "imports": [
        "socket.io-client"
      ],
      "exports": [],
      "classes": [],
      "functions": [],
      "variables": [
        "socket",
        "getSocket"
      ],
      "description": "TypeScript file containing basic code structure and definitions",
      "lines_of_code": 18,
      "metadata": {
        "size_bytes": 400,
        "last_modified": "2025-10-07T19:50:38.728Z"
      },
      "analysis_enhanced": {
        "complexity_score": 1,
        "detected_issues": [],
        "semantic_tags": [
          "typescript"
        ],
        "priority": "low",
        "summary_type": "rule-based",
        "code_snippet": "import { io, Socket } from \"socket.io-client\";\n\nlet socket: Socket | null = null;\n\nexport const getSocket = () => {\n  if (!socket) {\n    socket = io(process.env.NEXT_PUBLIC_SOCKET_URL!, {\n      reconnection: true,\n      reconnectionAttempts: 5,\n      reconnectionDelay: 1000,\n      reconnectionDelayMax: 5000,\n      transports: [\"websocket\"],\n      autoConnect: true,\n    });\n  }\n  return socket;\n};\n",
        "full_content": "import { io, Socket } from \"socket.io-client\";\n\nlet socket: Socket | null = null;\n\nexport const getSocket = () => {\n  if (!socket) {\n    socket = io(process.env.NEXT_PUBLIC_SOCKET_URL!, {\n      reconnection: true,\n      reconnectionAttempts: 5,\n      reconnectionDelay: 1000,\n      reconnectionDelayMax: 5000,\n      transports: [\"websocket\"],\n      autoConnect: true,\n    });\n  }\n  return socket;\n};\n"
      }
    },
    {
      "file_path": "frontend/lib/token-interceptor.ts",
      "relative_path": "frontend/lib/token-interceptor.ts",
      "language": "typescript",
      "imports": [
        "@/lib/token-storage",
        "axios"
      ],
      "exports": [
        "tokenInterceptors"
      ],
      "classes": [],
      "functions": [
        {
          "name": "tokenInterceptors",
          "parameters": [
            "config"
          ],
          "returnType": "unknown",
          "isAsync": false,
          "isExported": true
        }
      ],
      "variables": [],
      "description": "TypeScript module containing 1 functions, 1 exports",
      "lines_of_code": 13,
      "metadata": {
        "size_bytes": 360,
        "last_modified": "2025-10-07T19:50:38.728Z"
      },
      "analysis_enhanced": {
        "complexity_score": 3,
        "detected_issues": [],
        "semantic_tags": [
          "typescript",
          "http-client"
        ],
        "priority": "low",
        "summary_type": "rule-based",
        "code_snippet": "import { accessTokenStorage } from \"@/lib/token-storage\";\nimport type { InternalAxiosRequestConfig } from \"axios\";\n\nfunction tokenInterceptors(config: InternalAxiosRequestConfig) {\n  const token = accessTokenStorage.get();\n  if (config && token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n\n  return config;\n}\nexport default tokenInterceptors;\n",
        "full_content": "import { accessTokenStorage } from \"@/lib/token-storage\";\nimport type { InternalAxiosRequestConfig } from \"axios\";\n\nfunction tokenInterceptors(config: InternalAxiosRequestConfig) {\n  const token = accessTokenStorage.get();\n  if (config && token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n\n  return config;\n}\nexport default tokenInterceptors;\n"
      }
    },
    {
      "file_path": "frontend/lib/token-storage.ts",
      "relative_path": "frontend/lib/token-storage.ts",
      "language": "typescript",
      "imports": [
        "axios",
        "@/constants"
      ],
      "exports": [],
      "classes": [
        {
          "name": "TokenStorage",
          "methods": [
            "set",
            "get",
            "delete"
          ],
          "properties": [
            "storageKey"
          ],
          "isExported": false
        }
      ],
      "functions": [],
      "variables": [
        "accessTokenStorage",
        "tokenInterceptor"
      ],
      "description": "TypeScript module containing 1 classes",
      "lines_of_code": 43,
      "metadata": {
        "size_bytes": 930,
        "last_modified": "2025-10-07T19:50:38.729Z"
      },
      "analysis_enhanced": {
        "complexity_score": 4,
        "detected_issues": [],
        "semantic_tags": [
          "typescript",
          "http-client"
        ],
        "priority": "low",
        "summary_type": "rule-based",
        "code_snippet": "\"use client\";\nimport { AxiosRequestConfig } from \"axios\";\nimport { LOCAL_STORAGE_KEY } from \"@/constants\";\n\nclass TokenStorage {\n  public storageKey: string;\n\n  constructor(key: string) {\n    this.storageKey = key;\n  }\n\n  set(token: string) {\n    if (typeof window !== \"undefined\") {\n      localStorage.setItem(this.storageKey, token);\n    }\n  }\n\n  get() {\n    if (typeof window !== \"undefined\") {\n      return localStorage.getItem(this.storageKey);\n    }\n    return null; // Return null if running on the server\n  }\n\n  delete() {\n    if (typeof window !== \"undefined\") {\n      localStorage.removeItem(this.storageKey);\n    }\n  }\n}\n\nexport const accessTokenStorage = new TokenStorage(LOCAL_STORAGE_KEY);\n\nexport const tokenInterceptor = (config: AxiosRequestConfig) => {\n  const token = accessTokenStorage.get();\n  if (token) {\n    config.headers = {\n      ...config.headers,\n      Authorization: `Bearer ${token}`,\n    };\n  }\n};\n",
        "full_content": "\"use client\";\nimport { AxiosRequestConfig } from \"axios\";\nimport { LOCAL_STORAGE_KEY } from \"@/constants\";\n\nclass TokenStorage {\n  public storageKey: string;\n\n  constructor(key: string) {\n    this.storageKey = key;\n  }\n\n  set(token: string) {\n    if (typeof window !== \"undefined\") {\n      localStorage.setItem(this.storageKey, token);\n    }\n  }\n\n  get() {\n    if (typeof window !== \"undefined\") {\n      return localStorage.getItem(this.storageKey);\n    }\n    return null; // Return null if running on the server\n  }\n\n  delete() {\n    if (typeof window !== \"undefined\") {\n      localStorage.removeItem(this.storageKey);\n    }\n  }\n}\n\nexport const accessTokenStorage = new TokenStorage(LOCAL_STORAGE_KEY);\n\nexport const tokenInterceptor = (config: AxiosRequestConfig) => {\n  const token = accessTokenStorage.get();\n  if (token) {\n    config.headers = {\n      ...config.headers,\n      Authorization: `Bearer ${token}`,\n    };\n  }\n};\n"
      }
    },
    {
      "file_path": "frontend/lib/utils.ts",
      "relative_path": "frontend/lib/utils.ts",
      "language": "typescript",
      "imports": [
        "@/hooks/data-type",
        "axios",
        "clsx",
        "date-fns",
        "tailwind-merge"
      ],
      "exports": [
        "cn",
        "calculateJobStats",
        "extractJobGraphs"
      ],
      "classes": [],
      "functions": [
        {
          "name": "cn",
          "parameters": [
            "inputs"
          ],
          "returnType": "unknown",
          "isAsync": false,
          "isExported": true
        },
        {
          "name": "calculateJobStats",
          "parameters": [
            "jobs"
          ],
          "returnType": "{\n  totalJobs: number;\n  successfulJobs: number;\n  failedJobs: number;\n  successRate: string;\n  failureRate: string;\n  avgExecutionTimeSec: number;\n}",
          "isAsync": false,
          "isExported": true
        },
        {
          "name": "extractJobGraphs",
          "parameters": [
            "jobs"
          ],
          "returnType": "{\n  jobsOverTime: JobsOverTime;\n  resourceUsage: ResourceUsage;\n}",
          "isAsync": false,
          "isExported": true
        }
      ],
      "variables": [
        "getErrorMessage"
      ],
      "description": "Utility module with 3 helper functions and 3 exports",
      "lines_of_code": 86,
      "metadata": {
        "size_bytes": 2648,
        "last_modified": "2025-10-07T19:50:38.729Z"
      },
      "analysis_enhanced": {
        "complexity_score": 9,
        "detected_issues": [],
        "semantic_tags": [
          "typescript",
          "utility",
          "http-client",
          "background-jobs"
        ],
        "priority": "low",
        "summary_type": "rule-based",
        "code_snippet": "import { Job } from \"@/hooks/data-type\";\nimport { AxiosError } from \"axios\";\nimport { clsx, type ClassValue } from \"clsx\";\nimport { format } from \"date-fns\";\nimport { twMerge } from \"tailwind-merge\";\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n}\n\nexport const getErrorMessage = (error: Error) => {\n  const axiosError = error as AxiosError<{ message: string }>;\n  return axiosError.response?.data?.message || \"Something went wrong, Please try again\";\n};\n\nexport function calculateJobStats(jobs: Job[]): {\n  totalJobs: number;\n  successfulJobs: number;\n  failedJobs: number;\n  successRate: string;\n  failureRate: string;\n  avgExecutionTimeSec: number;\n} {\n  const totalJobs = jobs.length;\n\n  const successfulJobs = jobs.filter((job) => job.status === \"SUCCESS\").length;\n\n  const failedJobs = totalJobs - successfulJobs;\n\n  const successRate = ((successfulJobs / totalJobs) * 100).toFixed(1) + \"%\";\n  const failureRate = ((failedJobs / totalJobs) * 100).toFixed(1) + \"%\";\n\n  // calculate execution time for jobs that have both startedAt and endedAt\n  const durations: number[] = jobs\n    .filter((job) => job.startedAt && job.endedAt)\n    .map((job) => {\n      const start = new Date(job.startedAt!).getTime();\n      const end = new Date(job.endedAt!).getTime();\n      return (end - start) / 1000; // in seconds\n    });\n\n  const avgExecutionTimeSec = durations.reduce((sum, d) => sum + d, 0) / durations.length || 0;\n\n  return {\n    totalJobs,\n    successfulJobs,\n    failedJobs,\n    successRate,\n    failureRate,\n    avgExecutionTimeSec: parseFloat(avgExecutionTimeSec.toFixed(1)),\n  };\n}\n\ntype JobsOverTime = { date: string; jobs: number }[];\ntype ResourceUsage = { job: string; cpu: number; memory: number }[];\n\nexport function extractJobGraphs(jobs: Job[]): {\n  jobsOverTime: JobsOverTime;\n  resourceUsage: ResourceUsage;\n} {\n  const jobsByDateMap = new Map<string, number>();\n  const resourceUsage: ResourceUsage = [];\n\n  jobs.forEach((job, index) => {\n    // Gro",
        "full_content": "import { Job } from \"@/hooks/data-type\";\nimport { AxiosError } from \"axios\";\nimport { clsx, type ClassValue } from \"clsx\";\nimport { format } from \"date-fns\";\nimport { twMerge } from \"tailwind-merge\";\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n}\n\nexport const getErrorMessage = (error: Error) => {\n  const axiosError = error as AxiosError<{ message: string }>;\n  return axiosError.response?.data?.message || \"Something went wrong, Please try again\";\n};\n\nexport function calculateJobStats(jobs: Job[]): {\n  totalJobs: number;\n  successfulJobs: number;\n  failedJobs: number;\n  successRate: string;\n  failureRate: string;\n  avgExecutionTimeSec: number;\n} {\n  const totalJobs = jobs.length;\n\n  const successfulJobs = jobs.filter((job) => job.status === \"SUCCESS\").length;\n\n  const failedJobs = totalJobs - successfulJobs;\n\n  const successRate = ((successfulJobs / totalJobs) * 100).toFixed(1) + \"%\";\n  const failureRate = ((failedJobs / totalJobs) * 100).toFixed(1) + \"%\";\n\n  // calculate execution time for jobs that have both startedAt and endedAt\n  const durations: number[] = jobs\n    .filter((job) => job.startedAt && job.endedAt)\n    .map((job) => {\n      const start = new Date(job.startedAt!).getTime();\n      const end = new Date(job.endedAt!).getTime();\n      return (end - start) / 1000; // in seconds\n    });\n\n  const avgExecutionTimeSec = durations.reduce((sum, d) => sum + d, 0) / durations.length || 0;\n\n  return {\n    totalJobs,\n    successfulJobs,\n    failedJobs,\n    successRate,\n    failureRate,\n    avgExecutionTimeSec: parseFloat(avgExecutionTimeSec.toFixed(1)),\n  };\n}\n\ntype JobsOverTime = { date: string; jobs: number }[];\ntype ResourceUsage = { job: string; cpu: number; memory: number }[];\n\nexport function extractJobGraphs(jobs: Job[]): {\n  jobsOverTime: JobsOverTime;\n  resourceUsage: ResourceUsage;\n} {\n  const jobsByDateMap = new Map<string, number>();\n  const resourceUsage: ResourceUsage = [];\n\n  jobs.forEach((job, index) => {\n    // Group by day\n    const date = format(new Date(job.createdAt), \"MMM d\");\n    jobsByDateMap.set(date, (jobsByDateMap.get(date) || 0) + 1);\n\n    // Push CPU/mem usage if present\n    if (job.cpuUsage != null && job.memoryUsage != null) {\n      resourceUsage.push({\n        job: `Job ${index + 1}`,\n        cpu: job.cpuUsage,\n        memory: job.memoryUsage,\n      });\n    }\n  });\n\n  // Convert map to sorted array\n  const jobsOverTime: JobsOverTime = Array.from(jobsByDateMap.entries())\n    .map(([date, jobs]) => ({ date, jobs }))\n    .sort((a, b) => new Date(a.date).getTime() - new Date(b.date).getTime());\n\n  return { jobsOverTime, resourceUsage };\n}\n"
      }
    },
    {
      "file_path": "frontend/next.config.ts",
      "relative_path": "frontend/next.config.ts",
      "language": "typescript",
      "imports": [
        "next"
      ],
      "exports": [],
      "classes": [],
      "functions": [],
      "variables": [
        "nextConfig"
      ],
      "description": "Configuration file defining 0 settings and options",
      "lines_of_code": 8,
      "metadata": {
        "size_bytes": 133,
        "last_modified": "2025-10-07T19:50:38.729Z"
      },
      "analysis_enhanced": {
        "complexity_score": 1,
        "detected_issues": [],
        "semantic_tags": [
          "typescript",
          "nextjs"
        ],
        "needs_ai_summary": false,
        "priority": "low",
        "summary_type": "rule-based",
        "code_snippet": "import type { NextConfig } from \"next\";\n\nconst nextConfig: NextConfig = {\n  /* config options here */\n};\n\nexport default nextConfig;\n",
        "full_content": "import type { NextConfig } from \"next\";\n\nconst nextConfig: NextConfig = {\n  /* config options here */\n};\n\nexport default nextConfig;\n"
      }
    },
    {
      "file_path": "frontend/package-lock.json",
      "relative_path": "frontend/package-lock.json",
      "language": "json",
      "imports": [],
      "exports": [],
      "classes": [],
      "functions": [],
      "variables": [],
      "description": "JSON configuration or data file",
      "lines_of_code": 5270,
      "metadata": {
        "size_bytes": 186823,
        "last_modified": "2025-10-07T19:50:38.729Z"
      },
      "analysis_enhanced": {
        "complexity_score": 0,
        "detected_issues": [],
        "semantic_tags": [
          "json",
          "http-client",
          "authentication",
          "validation",
          "caching",
          "background-jobs"
        ],
        "needs_ai_summary": false,
        "priority": "low",
        "summary_type": "rule-based",
        "code_snippet": "{\n  \"name\": \"frontend\",\n  \"version\": \"0.1.0\",\n  \"lockfileVersion\": 3,\n  \"requires\": true,\n  \"packages\": {\n    \"\": {\n      \"name\": \"frontend\",\n      \"version\": \"0.1.0\",\n      \"dependencies\": {\n        \"@radix-ui/react-accordion\": \"^1.2.11\",\n        \"@radix-ui/react-checkbox\": \"^1.3.2\",\n        \"@radix-ui/react-dialog\": \"^1.1.14\",\n        \"@radix-ui/react-label\": \"^2.1.7\",\n        \"@radix-ui/react-scroll-area\": \"^1.2.9\",\n        \"@radix-ui/react-select\": \"^2.2.5\",\n        \"@radix-ui/react-separator\": \"^1.1.7\",\n        \"@radix-ui/react-slot\": \"^1.2.3\",\n        \"@radix-ui/react-switch\": \"^1.2.5\",\n        \"@radix-ui/react-toast\": \"^1.2.14\",\n        \"@radix-ui/react-tooltip\": \"^1.2.7\",\n        \"@tanstack/react-query\": \"^5.82.0\",\n        \"@tanstack/react-query-devtools\": \"^5.82.0\",\n        \"axios\": \"^1.10.0\",\n        \"class-variance-authority\": \"^0.7.1\",\n        \"clsx\": \"^2.1.1\",\n        \"date-fns\": \"^4.1.0\",\n        \"lucide-react\": \"^0.525.0\",\n        \"motion\": \"^12.23.3\",\n        \"next\": \"15.3.5\",\n        \"next-themes\": \"^0.4.6\",\n        \"react\": \"^19.0.0\",\n        \"react-dom\": \"^19.0.0\",\n        \"recharts\": \"^2.15.4\",\n        \"socket.io-client\": \"^4.8.1\",\n        \"tailwind-merge\": \"^3.3.1\"\n      },\n      \"devDependencies\": {\n        \"@tailwindcss/postcss\": \"^4\",\n        \"@tanstack/eslint-plugin-query\": \"^5.81.2\",\n        \"@types/node\": \"^20\",\n        \"@types/react\": \"^19\",\n        \"@types/react-dom\": \"^19\",\n        \"eslint\": \"^9.30.1\",\n        \"eslint-plugin-unused-imports\": \"^4.1.4\",\n        \"tailwindcss\": \"^4\",\n        \"tw-animate-css\": \"^1.3.5\",\n        \"typescript\": \"^5\"\n      }\n    },\n    \"node_modules/@alloc/quick-lru\": {\n      \"version\": \"5.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/@alloc/quick-lru/-/quick-lru-5.2.0.tgz\",\n      \"integrity\": \"sha512-UrcABB+4bUrFABwbluTIBErXwvbsU/V7TZWfmbgJfbkwiBuziS9gxdODUyuiecfdGQ85jglMW6juS3+z5TsKLw==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n    ",
        "full_content": "{\n  \"name\": \"frontend\",\n  \"version\": \"0.1.0\",\n  \"lockfileVersion\": 3,\n  \"requires\": true,\n  \"packages\": {\n    \"\": {\n      \"name\": \"frontend\",\n      \"version\": \"0.1.0\",\n      \"dependencies\": {\n        \"@radix-ui/react-accordion\": \"^1.2.11\",\n        \"@radix-ui/react-checkbox\": \"^1.3.2\",\n        \"@radix-ui/react-dialog\": \"^1.1.14\",\n        \"@radix-ui/react-label\": \"^2.1.7\",\n        \"@radix-ui/react-scroll-area\": \"^1.2.9\",\n        \"@radix-ui/react-select\": \"^2.2.5\",\n        \"@radix-ui/react-separator\": \"^1.1.7\",\n        \"@radix-ui/react-slot\": \"^1.2.3\",\n        \"@radix-ui/react-switch\": \"^1.2.5\",\n        \"@radix-ui/react-toast\": \"^1.2.14\",\n        \"@radix-ui/react-tooltip\": \"^1.2.7\",\n        \"@tanstack/react-query\": \"^5.82.0\",\n        \"@tanstack/react-query-devtools\": \"^5.82.0\",\n        \"axios\": \"^1.10.0\",\n        \"class-variance-authority\": \"^0.7.1\",\n        \"clsx\": \"^2.1.1\",\n        \"date-fns\": \"^4.1.0\",\n        \"lucide-react\": \"^0.525.0\",\n        \"motion\": \"^12.23.3\",\n        \"next\": \"15.3.5\",\n        \"next-themes\": \"^0.4.6\",\n        \"react\": \"^19.0.0\",\n        \"react-dom\": \"^19.0.0\",\n        \"recharts\": \"^2.15.4\",\n        \"socket.io-client\": \"^4.8.1\",\n        \"tailwind-merge\": \"^3.3.1\"\n      },\n      \"devDependencies\": {\n        \"@tailwindcss/postcss\": \"^4\",\n        \"@tanstack/eslint-plugin-query\": \"^5.81.2\",\n        \"@types/node\": \"^20\",\n        \"@types/react\": \"^19\",\n        \"@types/react-dom\": \"^19\",\n        \"eslint\": \"^9.30.1\",\n        \"eslint-plugin-unused-imports\": \"^4.1.4\",\n        \"tailwindcss\": \"^4\",\n        \"tw-animate-css\": \"^1.3.5\",\n        \"typescript\": \"^5\"\n      }\n    },\n    \"node_modules/@alloc/quick-lru\": {\n      \"version\": \"5.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/@alloc/quick-lru/-/quick-lru-5.2.0.tgz\",\n      \"integrity\": \"sha512-UrcABB+4bUrFABwbluTIBErXwvbsU/V7TZWfmbgJfbkwiBuziS9gxdODUyuiecfdGQ85jglMW6juS3+z5TsKLw==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/@ampproject/remapping\": {\n      \"version\": \"2.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/@ampproject/remapping/-/remapping-2.3.0.tgz\",\n      \"integrity\": \"sha512-30iZtAPgz+LTIYoeivqYo853f02jBYSd5uGnGpkFV0M3xOt9aN73erkgYAmZU43x4VfqcnLxW9Kpg3R5LC4YYw==\",\n      \"dev\": true,\n      \"license\": \"Apache-2.0\",\n      \"dependencies\": {\n        \"@jridgewell/gen-mapping\": \"^0.3.5\",\n        \"@jridgewell/trace-mapping\": \"^0.3.24\"\n      },\n      \"engines\": {\n        \"node\": \">=6.0.0\"\n      }\n    },\n    \"node_modules/@babel/runtime\": {\n      \"version\": \"7.27.6\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/runtime/-/runtime-7.27.6.tgz\",\n      \"integrity\": \"sha512-vbavdySgbTTrmFE+EsiqUTzlOr5bzlnJtUv9PynGCAKvfQqjIXbvFdumPM/GxMDfyuGMJaJAU6TO4zc1Jf1i8Q==\",\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/@emnapi/runtime\": {\n      \"version\": \"1.4.4\",\n      \"resolved\": \"https://registry.npmjs.org/@emnapi/runtime/-/runtime-1.4.4.tgz\",\n      \"integrity\": \"sha512-hHyapA4A3gPaDCNfiqyZUStTMqIkKRshqPIuDOXv1hcBnD4U3l8cP0T1HMCfGRxQ6V64TGCcoswChANyOAwbQg==\",\n      \"license\": \"MIT\",\n      \"optional\": true,\n      \"dependencies\": {\n        \"tslib\": \"^2.4.0\"\n      }\n    },\n    \"node_modules/@eslint-community/eslint-utils\": {\n      \"version\": \"4.7.0\",\n      \"resolved\": \"https://registry.npmjs.org/@eslint-community/eslint-utils/-/eslint-utils-4.7.0.tgz\",\n      \"integrity\": \"sha512-dyybb3AcajC7uha6CvhdVRJqaKyn7w2YKqKyAN37NKYgZT36w+iRb0Dymmc5qEJ549c/S31cMMSFd75bteCpCw==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"eslint-visitor-keys\": \"^3.4.3\"\n      },\n      \"engines\": {\n        \"node\": \"^12.22.0 || ^14.17.0 || >=16.0.0\"\n      },\n      \"funding\": {\n        \"url\": \"https://opencollective.com/eslint\"\n      },\n      \"peerDependencies\": {\n        \"eslint\": \"^6.0.0 || ^7.0.0 || >=8.0.0\"\n      }\n    },\n    \"node_modules/@eslint-community/eslint-utils/node_modules/eslint-visitor-keys\": {\n      \"version\": \"3.4.3\",\n      \"resolved\": \"https://registry.npmjs.org/eslint-visitor-keys/-/eslint-visitor-keys-3.4.3.tgz\",\n      \"integrity\": \"sha512-wpc+LXeiyiisxPlEkUzU6svyS1frIO3Mgxj1fdy7Pm8Ygzguax2N3Fa/D/ag1WqbOprdI+uY6wMUl8/a2G+iag==\",\n      \"dev\": true,\n      \"license\": \"Apache-2.0\",\n      \"engines\": {\n        \"node\": \"^12.22.0 || ^14.17.0 || >=16.0.0\"\n      },\n      \"funding\": {\n        \"url\": \"https://opencollective.com/eslint\"\n      }\n    },\n    \"node_modules/@eslint-community/regexpp\": {\n      \"version\": \"4.12.1\",\n      \"resolved\": \"https://registry.npmjs.org/@eslint-community/regexpp/-/regexpp-4.12.1.tgz\",\n      \"integrity\": \"sha512-CCZCDJuduB9OUkFkY2IgppNZMi2lBQgD2qzwXkEia16cge2pijY/aXi96CJMquDMn3nJdlPV1A5KrJEXwfLNzQ==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \"^12.0.0 || ^14.0.0 || >=16.0.0\"\n      }\n    },\n    \"node_modules/@eslint/config-array\": {\n      \"version\": \"0.21.0\",\n      \"resolved\": \"https://registry.npmjs.org/@eslint/config-array/-/config-array-0.21.0.tgz\",\n      \"integrity\": \"sha512-ENIdc4iLu0d93HeYirvKmrzshzofPw6VkZRKQGe9Nv46ZnWUzcF1xV01dcvEg/1wXUR61OmmlSfyeyO7EvjLxQ==\",\n      \"dev\": true,\n      \"license\": \"Apache-2.0\",\n      \"dependencies\": {\n        \"@eslint/object-schema\": \"^2.1.6\",\n        \"debug\": \"^4.3.1\",\n        \"minimatch\": \"^3.1.2\"\n      },\n      \"engines\": {\n        \"node\": \"^18.18.0 || ^20.9.0 || >=21.1.0\"\n      }\n    },\n    \"node_modules/@eslint/config-helpers\": {\n      \"version\": \"0.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/@eslint/config-helpers/-/config-helpers-0.3.0.tgz\",\n      \"integrity\": \"sha512-ViuymvFmcJi04qdZeDc2whTHryouGcDlaxPqarTD0ZE10ISpxGUVZGZDx4w01upyIynL3iu6IXH2bS1NhclQMw==\",\n      \"dev\": true,\n      \"license\": \"Apache-2.0\",\n      \"engines\": {\n        \"node\": \"^18.18.0 || ^20.9.0 || >=21.1.0\"\n      }\n    },\n    \"node_modules/@eslint/core\": {\n      \"version\": \"0.14.0\",\n      \"resolved\": \"https://registry.npmjs.org/@eslint/core/-/core-0.14.0.tgz\",\n      \"integrity\": \"sha512-qIbV0/JZr7iSDjqAc60IqbLdsj9GDt16xQtWD+B78d/HAlvysGdZZ6rpJHGAc2T0FQx1X6thsSPdnoiGKdNtdg==\",\n      \"dev\": true,\n      \"license\": \"Apache-2.0\",\n      \"dependencies\": {\n        \"@types/json-schema\": \"^7.0.15\"\n      },\n      \"engines\": {\n        \"node\": \"^18.18.0 || ^20.9.0 || >=21.1.0\"\n      }\n    },\n    \"node_modules/@eslint/eslintrc\": {\n      \"version\": \"3.3.1\",\n      \"resolved\": \"https://registry.npmjs.org/@eslint/eslintrc/-/eslintrc-3.3.1.tgz\",\n      \"integrity\": \"sha512-gtF186CXhIl1p4pJNGZw8Yc6RlshoePRvE0X91oPGb3vZ8pM3qOS9W9NGPat9LziaBV7XrJWGylNQXkGcnM3IQ==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"ajv\": \"^6.12.4\",\n        \"debug\": \"^4.3.2\",\n        \"espree\": \"^10.0.1\",\n        \"globals\": \"^14.0.0\",\n        \"ignore\": \"^5.2.0\",\n        \"import-fresh\": \"^3.2.1\",\n        \"js-yaml\": \"^4.1.0\",\n        \"minimatch\": \"^3.1.2\",\n        \"strip-json-comments\": \"^3.1.1\"\n      },\n      \"engines\": {\n        \"node\": \"^18.18.0 || ^20.9.0 || >=21.1.0\"\n      },\n      \"funding\": {\n        \"url\": \"https://opencollective.com/eslint\"\n      }\n    },\n    \"node_modules/@eslint/js\": {\n      \"version\": \"9.30.1\",\n      \"resolved\": \"https://registry.npmjs.org/@eslint/js/-/js-9.30.1.tgz\",\n      \"integrity\": \"sha512-zXhuECFlyep42KZUhWjfvsmXGX39W8K8LFb8AWXM9gSV9dQB+MrJGLKvW6Zw0Ggnbpw0VHTtrhFXYe3Gym18jg==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \"^18.18.0 || ^20.9.0 || >=21.1.0\"\n      },\n      \"funding\": {\n        \"url\": \"https://eslint.org/donate\"\n      }\n    },\n    \"node_modules/@eslint/object-schema\": {\n      \"version\": \"2.1.6\",\n      \"resolved\": \"https://registry.npmjs.org/@eslint/object-schema/-/object-schema-2.1.6.tgz\",\n      \"integrity\": \"sha512-RBMg5FRL0I0gs51M/guSAj5/e14VQ4tpZnQNWwuDT66P14I43ItmPfIZRhO9fUVIPOAQXU47atlywZ/czoqFPA==\",\n      \"dev\": true,\n      \"license\": \"Apache-2.0\",\n      \"engines\": {\n        \"node\": \"^18.18.0 || ^20.9.0 || >=21.1.0\"\n      }\n    },\n    \"node_modules/@eslint/plugin-kit\": {\n      \"version\": \"0.3.3\",\n      \"resolved\": \"https://registry.npmjs.org/@eslint/plugin-kit/-/plugin-kit-0.3.3.tgz\",\n      \"integrity\": \"sha512-1+WqvgNMhmlAambTvT3KPtCl/Ibr68VldY2XY40SL1CE0ZXiakFR/cbTspaF5HsnpDMvcYYoJHfl4980NBjGag==\",\n      \"dev\": true,\n      \"license\": \"Apache-2.0\",\n      \"dependencies\": {\n        \"@eslint/core\": \"^0.15.1\",\n        \"levn\": \"^0.4.1\"\n      },\n      \"engines\": {\n        \"node\": \"^18.18.0 || ^20.9.0 || >=21.1.0\"\n      }\n    },\n    \"node_modules/@eslint/plugin-kit/node_modules/@eslint/core\": {\n      \"version\": \"0.15.1\",\n      \"resolved\": \"https://registry.npmjs.org/@eslint/core/-/core-0.15.1.tgz\",\n      \"integrity\": \"sha512-bkOp+iumZCCbt1K1CmWf0R9pM5yKpDv+ZXtvSyQpudrI9kuFLp+bM2WOPXImuD/ceQuaa8f5pj93Y7zyECIGNA==\",\n      \"dev\": true,\n      \"license\": \"Apache-2.0\",\n      \"dependencies\": {\n        \"@types/json-schema\": \"^7.0.15\"\n      },\n      \"engines\": {\n        \"node\": \"^18.18.0 || ^20.9.0 || >=21.1.0\"\n      }\n    },\n    \"node_modules/@floating-ui/core\": {\n      \"version\": \"1.7.2\",\n      \"resolved\": \"https://registry.npmjs.org/@floating-ui/core/-/core-1.7.2.tgz\",\n      \"integrity\": \"sha512-wNB5ooIKHQc+Kui96jE/n69rHFWAVoxn5CAzL1Xdd8FG03cgY3MLO+GF9U3W737fYDSgPWA6MReKhBQBop6Pcw==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@floating-ui/utils\": \"^0.2.10\"\n      }\n    },\n    \"node_modules/@floating-ui/dom\": {\n      \"version\": \"1.7.2\",\n      \"resolved\": \"https://registry.npmjs.org/@floating-ui/dom/-/dom-1.7.2.tgz\",\n      \"integrity\": \"sha512-7cfaOQuCS27HD7DX+6ib2OrnW+b4ZBwDNnCcT0uTyidcmyWb03FnQqJybDBoCnpdxwBSfA94UAYlRCt7mV+TbA==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@floating-ui/core\": \"^1.7.2\",\n        \"@floating-ui/utils\": \"^0.2.10\"\n      }\n    },\n    \"node_modules/@floating-ui/react-dom\": {\n      \"version\": \"2.1.4\",\n      \"resolved\": \"https://registry.npmjs.org/@floating-ui/react-dom/-/react-dom-2.1.4.tgz\",\n      \"integrity\": \"sha512-JbbpPhp38UmXDDAu60RJmbeme37Jbgsm7NrHGgzYYFKmblzRUh6Pa641dII6LsjwF4XlScDrde2UAzDo/b9KPw==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@floating-ui/dom\": \"^1.7.2\"\n      },\n      \"peerDependencies\": {\n        \"react\": \">=16.8.0\",\n        \"react-dom\": \">=16.8.0\"\n      }\n    },\n    \"node_modules/@floating-ui/utils\": {\n      \"version\": \"0.2.10\",\n      \"resolved\": \"https://registry.npmjs.org/@floating-ui/utils/-/utils-0.2.10.tgz\",\n      \"integrity\": \"sha512-aGTxbpbg8/b5JfU1HXSrbH3wXZuLPJcNEcZQFMxLs3oSzgtVu6nFPkbbGGUvBcUjKV2YyB9Wxxabo+HEH9tcRQ==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/@humanfs/core\": {\n      \"version\": \"0.19.1\",\n      \"resolved\": \"https://registry.npmjs.org/@humanfs/core/-/core-0.19.1.tgz\",\n      \"integrity\": \"sha512-5DyQ4+1JEUzejeK1JGICcideyfUbGixgS9jNgex5nqkW+cY7WZhxBigmieN5Qnw9ZosSNVC9KQKyb+GUaGyKUA==\",\n      \"dev\": true,\n      \"license\": \"Apache-2.0\",\n      \"engines\": {\n        \"node\": \">=18.18.0\"\n      }\n    },\n    \"node_modules/@humanfs/node\": {\n      \"version\": \"0.16.6\",\n      \"resolved\": \"https://registry.npmjs.org/@humanfs/node/-/node-0.16.6.tgz\",\n      \"integrity\": \"sha512-YuI2ZHQL78Q5HbhDiBA1X4LmYdXCKCMQIfw0pw7piHJwyREFebJUvrQN4cMssyES6x+vfUbx1CIpaQUKYdQZOw==\",\n      \"dev\": true,\n      \"license\": \"Apache-2.0\",\n      \"dependencies\": {\n        \"@humanfs/core\": \"^0.19.1\",\n        \"@humanwhocodes/retry\": \"^0.3.0\"\n      },\n      \"engines\": {\n        \"node\": \">=18.18.0\"\n      }\n    },\n    \"node_modules/@humanfs/node/node_modules/@humanwhocodes/retry\": {\n      \"version\": \"0.3.1\",\n      \"resolved\": \"https://registry.npmjs.org/@humanwhocodes/retry/-/retry-0.3.1.tgz\",\n      \"integrity\": \"sha512-JBxkERygn7Bv/GbN5Rv8Ul6LVknS+5Bp6RgDC/O8gEBU/yeH5Ui5C/OlWrTb6qct7LjjfT6Re2NxB0ln0yYybA==\",\n      \"dev\": true,\n      \"license\": \"Apache-2.0\",\n      \"engines\": {\n        \"node\": \">=18.18\"\n      },\n      \"funding\": {\n        \"type\": \"github\",\n        \"url\": \"https://github.com/sponsors/nzakas\"\n      }\n    },\n    \"node_modules/@humanwhocodes/module-importer\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/@humanwhocodes/module-importer/-/module-importer-1.0.1.tgz\",\n      \"integrity\": \"sha512-bxveV4V8v5Yb4ncFTT3rPSgZBOpCkjfK0y4oVVVJwIuDVBRMDXrPyXRL988i5ap9m9bnyEEjWfm5WkBmtffLfA==\",\n      \"dev\": true,\n      \"license\": \"Apache-2.0\",\n      \"engines\": {\n        \"node\": \">=12.22\"\n      },\n      \"funding\": {\n        \"type\": \"github\",\n        \"url\": \"https://github.com/sponsors/nzakas\"\n      }\n    },\n    \"node_modules/@humanwhocodes/retry\": {\n      \"version\": \"0.4.3\",\n      \"resolved\": \"https://registry.npmjs.org/@humanwhocodes/retry/-/retry-0.4.3.tgz\",\n      \"integrity\": \"sha512-bV0Tgo9K4hfPCek+aMAn81RppFKv2ySDQeMoSZuvTASywNTnVJCArCZE2FWqpvIatKu7VMRLWlR1EazvVhDyhQ==\",\n      \"dev\": true,\n      \"license\": \"Apache-2.0\",\n      \"engines\": {\n        \"node\": \">=18.18\"\n      },\n      \"funding\": {\n        \"type\": \"github\",\n        \"url\": \"https://github.com/sponsors/nzakas\"\n      }\n    },\n    \"node_modules/@img/sharp-darwin-arm64\": {\n      \"version\": \"0.34.3\",\n      \"resolved\": \"https://registry.npmjs.org/@img/sharp-darwin-arm64/-/sharp-darwin-arm64-0.34.3.tgz\",\n      \"integrity\": \"sha512-ryFMfvxxpQRsgZJqBd4wsttYQbCxsJksrv9Lw/v798JcQ8+w84mBWuXwl+TT0WJ/WrYOLaYpwQXi3sA9nTIaIg==\",\n      \"cpu\": [\n        \"arm64\"\n      ],\n      \"license\": \"Apache-2.0\",\n      \"optional\": true,\n      \"os\": [\n        \"darwin\"\n      ],\n      \"engines\": {\n        \"node\": \"^18.17.0 || ^20.3.0 || >=21.0.0\"\n      },\n      \"funding\": {\n        \"url\": \"https://opencollective.com/libvips\"\n      },\n      \"optionalDependencies\": {\n        \"@img/sharp-libvips-darwin-arm64\": \"1.2.0\"\n      }\n    },\n    \"node_modules/@img/sharp-darwin-x64\": {\n      \"version\": \"0.34.3\",\n      \"resolved\": \"https://registry.npmjs.org/@img/sharp-darwin-x64/-/sharp-darwin-x64-0.34.3.tgz\",\n      \"integrity\": \"sha512-yHpJYynROAj12TA6qil58hmPmAwxKKC7reUqtGLzsOHfP7/rniNGTL8tjWX6L3CTV4+5P4ypcS7Pp+7OB+8ihA==\",\n      \"cpu\": [\n        \"x64\"\n      ],\n      \"license\": \"Apache-2.0\",\n      \"optional\": true,\n      \"os\": [\n        \"darwin\"\n      ],\n      \"engines\": {\n        \"node\": \"^18.17.0 || ^20.3.0 || >=21.0.0\"\n      },\n      \"funding\": {\n        \"url\": \"https://opencollective.com/libvips\"\n      },\n      \"optionalDependencies\": {\n        \"@img/sharp-libvips-darwin-x64\": \"1.2.0\"\n      }\n    },\n    \"node_modules/@img/sharp-libvips-darwin-arm64\": {\n      \"version\": \"1.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/@img/sharp-libvips-darwin-arm64/-/sharp-libvips-darwin-arm64-1.2.0.tgz\",\n      \"integrity\": \"sha512-sBZmpwmxqwlqG9ueWFXtockhsxefaV6O84BMOrhtg/YqbTaRdqDE7hxraVE3y6gVM4eExmfzW4a8el9ArLeEiQ==\",\n      \"cpu\": [\n        \"arm64\"\n      ],\n      \"license\": \"LGPL-3.0-or-later\",\n      \"optional\": true,\n      \"os\": [\n        \"darwin\"\n      ],\n      \"funding\": {\n        \"url\": \"https://opencollective.com/libvips\"\n      }\n    },\n    \"node_modules/@img/sharp-libvips-darwin-x64\": {\n      \"version\": \"1.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/@img/sharp-libvips-darwin-x64/-/sharp-libvips-darwin-x64-1.2.0.tgz\",\n      \"integrity\": \"sha512-M64XVuL94OgiNHa5/m2YvEQI5q2cl9d/wk0qFTDVXcYzi43lxuiFTftMR1tOnFQovVXNZJ5TURSDK2pNe9Yzqg==\",\n      \"cpu\": [\n        \"x64\"\n      ],\n      \"license\": \"LGPL-3.0-or-later\",\n      \"optional\": true,\n      \"os\": [\n        \"darwin\"\n      ],\n      \"funding\": {\n        \"url\": \"https://opencollective.com/libvips\"\n      }\n    },\n    \"node_modules/@img/sharp-libvips-linux-arm\": {\n      \"version\": \"1.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/@img/sharp-libvips-linux-arm/-/sharp-libvips-linux-arm-1.2.0.tgz\",\n      \"integrity\": \"sha512-mWd2uWvDtL/nvIzThLq3fr2nnGfyr/XMXlq8ZJ9WMR6PXijHlC3ksp0IpuhK6bougvQrchUAfzRLnbsen0Cqvw==\",\n      \"cpu\": [\n        \"arm\"\n      ],\n      \"license\": \"LGPL-3.0-or-later\",\n      \"optional\": true,\n      \"os\": [\n        \"linux\"\n      ],\n      \"funding\": {\n        \"url\": \"https://opencollective.com/libvips\"\n      }\n    },\n    \"node_modules/@img/sharp-libvips-linux-arm64\": {\n      \"version\": \"1.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/@img/sharp-libvips-linux-arm64/-/sharp-libvips-linux-arm64-1.2.0.tgz\",\n      \"integrity\": \"sha512-RXwd0CgG+uPRX5YYrkzKyalt2OJYRiJQ8ED/fi1tq9WQW2jsQIn0tqrlR5l5dr/rjqq6AHAxURhj2DVjyQWSOA==\",\n      \"cpu\": [\n        \"arm64\"\n      ],\n      \"license\": \"LGPL-3.0-or-later\",\n      \"optional\": true,\n      \"os\": [\n        \"linux\"\n      ],\n      \"funding\": {\n        \"url\": \"https://opencollective.com/libvips\"\n      }\n    },\n    \"node_modules/@img/sharp-libvips-linux-ppc64\": {\n      \"version\": \"1.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/@img/sharp-libvips-linux-ppc64/-/sharp-libvips-linux-ppc64-1.2.0.tgz\",\n      \"integrity\": \"sha512-Xod/7KaDDHkYu2phxxfeEPXfVXFKx70EAFZ0qyUdOjCcxbjqyJOEUpDe6RIyaunGxT34Anf9ue/wuWOqBW2WcQ==\",\n      \"cpu\": [\n        \"ppc64\"\n      ],\n      \"license\": \"LGPL-3.0-or-later\",\n      \"optional\": true,\n      \"os\": [\n        \"linux\"\n      ],\n      \"funding\": {\n        \"url\": \"https://opencollective.com/libvips\"\n      }\n    },\n    \"node_modules/@img/sharp-libvips-linux-s390x\": {\n      \"version\": \"1.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/@img/sharp-libvips-linux-s390x/-/sharp-libvips-linux-s390x-1.2.0.tgz\",\n      \"integrity\": \"sha512-eMKfzDxLGT8mnmPJTNMcjfO33fLiTDsrMlUVcp6b96ETbnJmd4uvZxVJSKPQfS+odwfVaGifhsB07J1LynFehw==\",\n      \"cpu\": [\n        \"s390x\"\n      ],\n      \"license\": \"LGPL-3.0-or-later\",\n      \"optional\": true,\n      \"os\": [\n        \"linux\"\n      ],\n      \"funding\": {\n        \"url\": \"https://opencollective.com/libvips\"\n      }\n    },\n    \"node_modules/@img/sharp-libvips-linux-x64\": {\n      \"version\": \"1.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/@img/sharp-libvips-linux-x64/-/sharp-libvips-linux-x64-1.2.0.tgz\",\n      \"integrity\": \"sha512-ZW3FPWIc7K1sH9E3nxIGB3y3dZkpJlMnkk7z5tu1nSkBoCgw2nSRTFHI5pB/3CQaJM0pdzMF3paf9ckKMSE9Tg==\",\n      \"cpu\": [\n        \"x64\"\n      ],\n      \"license\": \"LGPL-3.0-or-later\",\n      \"optional\": true,\n      \"os\": [\n        \"linux\"\n      ],\n      \"funding\": {\n        \"url\": \"https://opencollective.com/libvips\"\n      }\n    },\n    \"node_modules/@img/sharp-libvips-linuxmusl-arm64\": {\n      \"version\": \"1.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/@img/sharp-libvips-linuxmusl-arm64/-/sharp-libvips-linuxmusl-arm64-1.2.0.tgz\",\n      \"integrity\": \"sha512-UG+LqQJbf5VJ8NWJ5Z3tdIe/HXjuIdo4JeVNADXBFuG7z9zjoegpzzGIyV5zQKi4zaJjnAd2+g2nna8TZvuW9Q==\",\n      \"cpu\": [\n        \"arm64\"\n      ],\n      \"license\": \"LGPL-3.0-or-later\",\n      \"optional\": true,\n      \"os\": [\n        \"linux\"\n      ],\n      \"funding\": {\n        \"url\": \"https://opencollective.com/libvips\"\n      }\n    },\n    \"node_modules/@img/sharp-libvips-linuxmusl-x64\": {\n      \"version\": \"1.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/@img/sharp-libvips-linuxmusl-x64/-/sharp-libvips-linuxmusl-x64-1.2.0.tgz\",\n      \"integrity\": \"sha512-SRYOLR7CXPgNze8akZwjoGBoN1ThNZoqpOgfnOxmWsklTGVfJiGJoC/Lod7aNMGA1jSsKWM1+HRX43OP6p9+6Q==\",\n      \"cpu\": [\n        \"x64\"\n      ],\n      \"license\": \"LGPL-3.0-or-later\",\n      \"optional\": true,\n      \"os\": [\n        \"linux\"\n      ],\n      \"funding\": {\n        \"url\": \"https://opencollective.com/libvips\"\n      }\n    },\n    \"node_modules/@img/sharp-linux-arm\": {\n      \"version\": \"0.34.3\",\n      \"resolved\": \"https://registry.npmjs.org/@img/sharp-linux-arm/-/sharp-linux-arm-0.34.3.tgz\",\n      \"integrity\": \"sha512-oBK9l+h6KBN0i3dC8rYntLiVfW8D8wH+NPNT3O/WBHeW0OQWCjfWksLUaPidsrDKpJgXp3G3/hkmhptAW0I3+A==\",\n      \"cpu\": [\n        \"arm\"\n      ],\n      \"license\": \"Apache-2.0\",\n      \"optional\": true,\n      \"os\": [\n        \"linux\"\n      ],\n      \"engines\": {\n        \"node\": \"^18.17.0 || ^20.3.0 || >=21.0.0\"\n      },\n      \"funding\": {\n        \"url\": \"https://opencollective.com/libvips\"\n      },\n      \"optionalDependencies\": {\n        \"@img/sharp-libvips-linux-arm\": \"1.2.0\"\n      }\n    },\n    \"node_modules/@img/sharp-linux-arm64\": {\n      \"version\": \"0.34.3\",\n      \"resolved\": \"https://registry.npmjs.org/@img/sharp-linux-arm64/-/sharp-linux-arm64-0.34.3.tgz\",\n      \"integrity\": \"sha512-QdrKe3EvQrqwkDrtuTIjI0bu6YEJHTgEeqdzI3uWJOH6G1O8Nl1iEeVYRGdj1h5I21CqxSvQp1Yv7xeU3ZewbA==\",\n      \"cpu\": [\n        \"arm64\"\n      ],\n      \"license\": \"Apache-2.0\",\n      \"optional\": true,\n      \"os\": [\n        \"linux\"\n      ],\n      \"engines\": {\n        \"node\": \"^18.17.0 || ^20.3.0 || >=21.0.0\"\n      },\n      \"funding\": {\n        \"url\": \"https://opencollective.com/libvips\"\n      },\n      \"optionalDependencies\": {\n        \"@img/sharp-libvips-linux-arm64\": \"1.2.0\"\n      }\n    },\n    \"node_modules/@img/sharp-linux-ppc64\": {\n      \"version\": \"0.34.3\",\n      \"resolved\": \"https://registry.npmjs.org/@img/sharp-linux-ppc64/-/sharp-linux-ppc64-0.34.3.tgz\",\n      \"integrity\": \"sha512-GLtbLQMCNC5nxuImPR2+RgrviwKwVql28FWZIW1zWruy6zLgA5/x2ZXk3mxj58X/tszVF69KK0Is83V8YgWhLA==\",\n      \"cpu\": [\n        \"ppc64\"\n      ],\n      \"license\": \"Apache-2.0\",\n      \"optional\": true,\n      \"os\": [\n        \"linux\"\n      ],\n      \"engines\": {\n        \"node\": \"^18.17.0 || ^20.3.0 || >=21.0.0\"\n      },\n      \"funding\": {\n        \"url\": \"https://opencollective.com/libvips\"\n      },\n      \"optionalDependencies\": {\n        \"@img/sharp-libvips-linux-ppc64\": \"1.2.0\"\n      }\n    },\n    \"node_modules/@img/sharp-linux-s390x\": {\n      \"version\": \"0.34.3\",\n      \"resolved\": \"https://registry.npmjs.org/@img/sharp-linux-s390x/-/sharp-linux-s390x-0.34.3.tgz\",\n      \"integrity\": \"sha512-3gahT+A6c4cdc2edhsLHmIOXMb17ltffJlxR0aC2VPZfwKoTGZec6u5GrFgdR7ciJSsHT27BD3TIuGcuRT0KmQ==\",\n      \"cpu\": [\n        \"s390x\"\n      ],\n      \"license\": \"Apache-2.0\",\n      \"optional\": true,\n      \"os\": [\n        \"linux\"\n      ],\n      \"engines\": {\n        \"node\": \"^18.17.0 || ^20.3.0 || >=21.0.0\"\n      },\n      \"funding\": {\n        \"url\": \"https://opencollective.com/libvips\"\n      },\n      \"optionalDependencies\": {\n        \"@img/sharp-libvips-linux-s390x\": \"1.2.0\"\n      }\n    },\n    \"node_modules/@img/sharp-linux-x64\": {\n      \"version\": \"0.34.3\",\n      \"resolved\": \"https://registry.npmjs.org/@img/sharp-linux-x64/-/sharp-linux-x64-0.34.3.tgz\",\n      \"integrity\": \"sha512-8kYso8d806ypnSq3/Ly0QEw90V5ZoHh10yH0HnrzOCr6DKAPI6QVHvwleqMkVQ0m+fc7EH8ah0BB0QPuWY6zJQ==\",\n      \"cpu\": [\n        \"x64\"\n      ],\n      \"license\": \"Apache-2.0\",\n      \"optional\": true,\n      \"os\": [\n        \"linux\"\n      ],\n      \"engines\": {\n        \"node\": \"^18.17.0 || ^20.3.0 || >=21.0.0\"\n      },\n      \"funding\": {\n        \"url\": \"https://opencollective.com/libvips\"\n      },\n      \"optionalDependencies\": {\n        \"@img/sharp-libvips-linux-x64\": \"1.2.0\"\n      }\n    },\n    \"node_modules/@img/sharp-linuxmusl-arm64\": {\n      \"version\": \"0.34.3\",\n      \"resolved\": \"https://registry.npmjs.org/@img/sharp-linuxmusl-arm64/-/sharp-linuxmusl-arm64-0.34.3.tgz\",\n      \"integrity\": \"sha512-vAjbHDlr4izEiXM1OTggpCcPg9tn4YriK5vAjowJsHwdBIdx0fYRsURkxLG2RLm9gyBq66gwtWI8Gx0/ov+JKQ==\",\n      \"cpu\": [\n        \"arm64\"\n      ],\n      \"license\": \"Apache-2.0\",\n      \"optional\": true,\n      \"os\": [\n        \"linux\"\n      ],\n      \"engines\": {\n        \"node\": \"^18.17.0 || ^20.3.0 || >=21.0.0\"\n      },\n      \"funding\": {\n        \"url\": \"https://opencollective.com/libvips\"\n      },\n      \"optionalDependencies\": {\n        \"@img/sharp-libvips-linuxmusl-arm64\": \"1.2.0\"\n      }\n    },\n    \"node_modules/@img/sharp-linuxmusl-x64\": {\n      \"version\": \"0.34.3\",\n      \"resolved\": \"https://registry.npmjs.org/@img/sharp-linuxmusl-x64/-/sharp-linuxmusl-x64-0.34.3.tgz\",\n      \"integrity\": \"sha512-gCWUn9547K5bwvOn9l5XGAEjVTTRji4aPTqLzGXHvIr6bIDZKNTA34seMPgM0WmSf+RYBH411VavCejp3PkOeQ==\",\n      \"cpu\": [\n        \"x64\"\n      ],\n      \"license\": \"Apache-2.0\",\n      \"optional\": true,\n      \"os\": [\n        \"linux\"\n      ],\n      \"engines\": {\n        \"node\": \"^18.17.0 || ^20.3.0 || >=21.0.0\"\n      },\n      \"funding\": {\n        \"url\": \"https://opencollective.com/libvips\"\n      },\n      \"optionalDependencies\": {\n        \"@img/sharp-libvips-linuxmusl-x64\": \"1.2.0\"\n      }\n    },\n    \"node_modules/@img/sharp-wasm32\": {\n      \"version\": \"0.34.3\",\n      \"resolved\": \"https://registry.npmjs.org/@img/sharp-wasm32/-/sharp-wasm32-0.34.3.tgz\",\n      \"integrity\": \"sha512-+CyRcpagHMGteySaWos8IbnXcHgfDn7pO2fiC2slJxvNq9gDipYBN42/RagzctVRKgxATmfqOSulgZv5e1RdMg==\",\n      \"cpu\": [\n        \"wasm32\"\n      ],\n      \"license\": \"Apache-2.0 AND LGPL-3.0-or-later AND MIT\",\n      \"optional\": true,\n      \"dependencies\": {\n        \"@emnapi/runtime\": \"^1.4.4\"\n      },\n      \"engines\": {\n        \"node\": \"^18.17.0 || ^20.3.0 || >=21.0.0\"\n      },\n      \"funding\": {\n        \"url\": \"https://opencollective.com/libvips\"\n      }\n    },\n    \"node_modules/@img/sharp-win32-arm64\": {\n      \"version\": \"0.34.3\",\n      \"resolved\": \"https://registry.npmjs.org/@img/sharp-win32-arm64/-/sharp-win32-arm64-0.34.3.tgz\",\n      \"integrity\": \"sha512-MjnHPnbqMXNC2UgeLJtX4XqoVHHlZNd+nPt1kRPmj63wURegwBhZlApELdtxM2OIZDRv/DFtLcNhVbd1z8GYXQ==\",\n      \"cpu\": [\n        \"arm64\"\n      ],\n      \"license\": \"Apache-2.0 AND LGPL-3.0-or-later\",\n      \"optional\": true,\n      \"os\": [\n        \"win32\"\n      ],\n      \"engines\": {\n        \"node\": \"^18.17.0 || ^20.3.0 || >=21.0.0\"\n      },\n      \"funding\": {\n        \"url\": \"https://opencollective.com/libvips\"\n      }\n    },\n    \"node_modules/@img/sharp-win32-ia32\": {\n      \"version\": \"0.34.3\",\n      \"resolved\": \"https://registry.npmjs.org/@img/sharp-win32-ia32/-/sharp-win32-ia32-0.34.3.tgz\",\n      \"integrity\": \"sha512-xuCdhH44WxuXgOM714hn4amodJMZl3OEvf0GVTm0BEyMeA2to+8HEdRPShH0SLYptJY1uBw+SCFP9WVQi1Q/cw==\",\n      \"cpu\": [\n        \"ia32\"\n      ],\n      \"license\": \"Apache-2.0 AND LGPL-3.0-or-later\",\n      \"optional\": true,\n      \"os\": [\n        \"win32\"\n      ],\n      \"engines\": {\n        \"node\": \"^18.17.0 || ^20.3.0 || >=21.0.0\"\n      },\n      \"funding\": {\n        \"url\": \"https://opencollective.com/libvips\"\n      }\n    },\n    \"node_modules/@img/sharp-win32-x64\": {\n      \"version\": \"0.34.3\",\n      \"resolved\": \"https://registry.npmjs.org/@img/sharp-win32-x64/-/sharp-win32-x64-0.34.3.tgz\",\n      \"integrity\": \"sha512-OWwz05d++TxzLEv4VnsTz5CmZ6mI6S05sfQGEMrNrQcOEERbX46332IvE7pO/EUiw7jUrrS40z/M7kPyjfl04g==\",\n      \"cpu\": [\n        \"x64\"\n      ],\n      \"license\": \"Apache-2.0 AND LGPL-3.0-or-later\",\n      \"optional\": true,\n      \"os\": [\n        \"win32\"\n      ],\n      \"engines\": {\n        \"node\": \"^18.17.0 || ^20.3.0 || >=21.0.0\"\n      },\n      \"funding\": {\n        \"url\": \"https://opencollective.com/libvips\"\n      }\n    },\n    \"node_modules/@isaacs/fs-minipass\": {\n      \"version\": \"4.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/@isaacs/fs-minipass/-/fs-minipass-4.0.1.tgz\",\n      \"integrity\": \"sha512-wgm9Ehl2jpeqP3zw/7mo3kRHFp5MEDhqAdwy1fTGkHAwnkGOVsgpvQhL8B5n1qlb01jV3n/bI0ZfZp5lWA1k4w==\",\n      \"dev\": true,\n      \"license\": \"ISC\",\n      \"dependencies\": {\n        \"minipass\": \"^7.0.4\"\n      },\n      \"engines\": {\n        \"node\": \">=18.0.0\"\n      }\n    },\n    \"node_modules/@jridgewell/gen-mapping\": {\n      \"version\": \"0.3.12\",\n      \"resolved\": \"https://registry.npmjs.org/@jridgewell/gen-mapping/-/gen-mapping-0.3.12.tgz\",\n      \"integrity\": \"sha512-OuLGC46TjB5BbN1dH8JULVVZY4WTdkF7tV9Ys6wLL1rubZnCMstOhNHueU5bLCrnRuDhKPDM4g6sw4Bel5Gzqg==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@jridgewell/sourcemap-codec\": \"^1.5.0\",\n        \"@jridgewell/trace-mapping\": \"^0.3.24\"\n      }\n    },\n    \"node_modules/@jridgewell/resolve-uri\": {\n      \"version\": \"3.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/@jridgewell/resolve-uri/-/resolve-uri-3.1.2.tgz\",\n      \"integrity\": \"sha512-bRISgCIjP20/tbWSPWMEi54QVPRZExkuD9lJL+UIxUKtwVJA8wW1Trb1jMs1RFXo1CBTNZ/5hpC9QvmKWdopKw==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">=6.0.0\"\n      }\n    },\n    \"node_modules/@jridgewell/sourcemap-codec\": {\n      \"version\": \"1.5.4\",\n      \"resolved\": \"https://registry.npmjs.org/@jridgewell/sourcemap-codec/-/sourcemap-codec-1.5.4.tgz\",\n      \"integrity\": \"sha512-VT2+G1VQs/9oz078bLrYbecdZKs912zQlkelYpuf+SXF+QvZDYJlbx/LSx+meSAwdDFnF8FVXW92AVjjkVmgFw==\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/@jridgewell/trace-mapping\": {\n      \"version\": \"0.3.29\",\n      \"resolved\": \"https://registry.npmjs.org/@jridgewell/trace-mapping/-/trace-mapping-0.3.29.tgz\",\n      \"integrity\": \"sha512-uw6guiW/gcAGPDhLmd77/6lW8QLeiV5RUTsAX46Db6oLhGaVj4lhnPwb184s1bkc8kdVg/+h988dro8GRDpmYQ==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@jridgewell/resolve-uri\": \"^3.1.0\",\n        \"@jridgewell/sourcemap-codec\": \"^1.4.14\"\n      }\n    },\n    \"node_modules/@next/env\": {\n      \"version\": \"15.3.5\",\n      \"resolved\": \"https://registry.npmjs.org/@next/env/-/env-15.3.5.tgz\",\n      \"integrity\": \"sha512-7g06v8BUVtN2njAX/r8gheoVffhiKFVt4nx74Tt6G4Hqw9HCLYQVx/GkH2qHvPtAHZaUNZ0VXAa0pQP6v1wk7g==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/@next/swc-darwin-arm64\": {\n      \"version\": \"15.3.5\",\n      \"resolved\": \"https://registry.npmjs.org/@next/swc-darwin-arm64/-/swc-darwin-arm64-15.3.5.tgz\",\n      \"integrity\": \"sha512-lM/8tilIsqBq+2nq9kbTW19vfwFve0NR7MxfkuSUbRSgXlMQoJYg+31+++XwKVSXk4uT23G2eF/7BRIKdn8t8w==\",\n      \"cpu\": [\n        \"arm64\"\n      ],\n      \"license\": \"MIT\",\n      \"optional\": true,\n      \"os\": [\n        \"darwin\"\n      ],\n      \"engines\": {\n        \"node\": \">= 10\"\n      }\n    },\n    \"node_modules/@next/swc-darwin-x64\": {\n      \"version\": \"15.3.5\",\n      \"resolved\": \"https://registry.npmjs.org/@next/swc-darwin-x64/-/swc-darwin-x64-15.3.5.tgz\",\n      \"integrity\": \"sha512-WhwegPQJ5IfoUNZUVsI9TRAlKpjGVK0tpJTL6KeiC4cux9774NYE9Wu/iCfIkL/5J8rPAkqZpG7n+EfiAfidXA==\",\n      \"cpu\": [\n        \"x64\"\n      ],\n      \"license\": \"MIT\",\n      \"optional\": true,\n      \"os\": [\n        \"darwin\"\n      ],\n      \"engines\": {\n        \"node\": \">= 10\"\n      }\n    },\n    \"node_modules/@next/swc-linux-arm64-gnu\": {\n      \"version\": \"15.3.5\",\n      \"resolved\": \"https://registry.npmjs.org/@next/swc-linux-arm64-gnu/-/swc-linux-arm64-gnu-15.3.5.tgz\",\n      \"integrity\": \"sha512-LVD6uMOZ7XePg3KWYdGuzuvVboxujGjbcuP2jsPAN3MnLdLoZUXKRc6ixxfs03RH7qBdEHCZjyLP/jBdCJVRJQ==\",\n      \"cpu\": [\n        \"arm64\"\n      ],\n      \"license\": \"MIT\",\n      \"optional\": true,\n      \"os\": [\n        \"linux\"\n      ],\n      \"engines\": {\n        \"node\": \">= 10\"\n      }\n    },\n    \"node_modules/@next/swc-linux-arm64-musl\": {\n      \"version\": \"15.3.5\",\n      \"resolved\": \"https://registry.npmjs.org/@next/swc-linux-arm64-musl/-/swc-linux-arm64-musl-15.3.5.tgz\",\n      \"integrity\": \"sha512-k8aVScYZ++BnS2P69ClK7v4nOu702jcF9AIHKu6llhHEtBSmM2zkPGl9yoqbSU/657IIIb0QHpdxEr0iW9z53A==\",\n      \"cpu\": [\n        \"arm64\"\n      ],\n      \"license\": \"MIT\",\n      \"optional\": true,\n      \"os\": [\n        \"linux\"\n      ],\n      \"engines\": {\n        \"node\": \">= 10\"\n      }\n    },\n    \"node_modules/@next/swc-linux-x64-gnu\": {\n      \"version\": \"15.3.5\",\n      \"resolved\": \"https://registry.npmjs.org/@next/swc-linux-x64-gnu/-/swc-linux-x64-gnu-15.3.5.tgz\",\n      \"integrity\": \"sha512-2xYU0DI9DGN/bAHzVwADid22ba5d/xrbrQlr2U+/Q5WkFUzeL0TDR963BdrtLS/4bMmKZGptLeg6282H/S2i8A==\",\n      \"cpu\": [\n        \"x64\"\n      ],\n      \"license\": \"MIT\",\n      \"optional\": true,\n      \"os\": [\n        \"linux\"\n      ],\n      \"engines\": {\n        \"node\": \">= 10\"\n      }\n    },\n    \"node_modules/@next/swc-linux-x64-musl\": {\n      \"version\": \"15.3.5\",\n      \"resolved\": \"https://registry.npmjs.org/@next/swc-linux-x64-musl/-/swc-linux-x64-musl-15.3.5.tgz\",\n      \"integrity\": \"sha512-TRYIqAGf1KCbuAB0gjhdn5Ytd8fV+wJSM2Nh2is/xEqR8PZHxfQuaiNhoF50XfY90sNpaRMaGhF6E+qjV1b9Tg==\",\n      \"cpu\": [\n        \"x64\"\n      ],\n      \"license\": \"MIT\",\n      \"optional\": true,\n      \"os\": [\n        \"linux\"\n      ],\n      \"engines\": {\n        \"node\": \">= 10\"\n      }\n    },\n    \"node_modules/@next/swc-win32-arm64-msvc\": {\n      \"version\": \"15.3.5\",\n      \"resolved\": \"https://registry.npmjs.org/@next/swc-win32-arm64-msvc/-/swc-win32-arm64-msvc-15.3.5.tgz\",\n      \"integrity\": \"sha512-h04/7iMEUSMY6fDGCvdanKqlO1qYvzNxntZlCzfE8i5P0uqzVQWQquU1TIhlz0VqGQGXLrFDuTJVONpqGqjGKQ==\",\n      \"cpu\": [\n        \"arm64\"\n      ],\n      \"license\": \"MIT\",\n      \"optional\": true,\n      \"os\": [\n        \"win32\"\n      ],\n      \"engines\": {\n        \"node\": \">= 10\"\n      }\n    },\n    \"node_modules/@next/swc-win32-x64-msvc\": {\n      \"version\": \"15.3.5\",\n      \"resolved\": \"https://registry.npmjs.org/@next/swc-win32-x64-msvc/-/swc-win32-x64-msvc-15.3.5.tgz\",\n      \"integrity\": \"sha512-5fhH6fccXxnX2KhllnGhkYMndhOiLOLEiVGYjP2nizqeGWkN10sA9taATlXwake2E2XMvYZjjz0Uj7T0y+z1yw==\",\n      \"cpu\": [\n        \"x64\"\n      ],\n      \"license\": \"MIT\",\n      \"optional\": true,\n      \"os\": [\n        \"win32\"\n      ],\n      \"engines\": {\n        \"node\": \">= 10\"\n      }\n    },\n    \"node_modules/@nodelib/fs.scandir\": {\n      \"version\": \"2.1.5\",\n      \"resolved\": \"https://registry.npmjs.org/@nodelib/fs.scandir/-/fs.scandir-2.1.5.tgz\",\n      \"integrity\": \"sha512-vq24Bq3ym5HEQm2NKCr3yXDwjc7vTsEThRDnkp2DK9p1uqLR+DHurm/NOTo0KG7HYHU7eppKZj3MyqYuMBf62g==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@nodelib/fs.stat\": \"2.0.5\",\n        \"run-parallel\": \"^1.1.9\"\n      },\n      \"engines\": {\n        \"node\": \">= 8\"\n      }\n    },\n    \"node_modules/@nodelib/fs.stat\": {\n      \"version\": \"2.0.5\",\n      \"resolved\": \"https://registry.npmjs.org/@nodelib/fs.stat/-/fs.stat-2.0.5.tgz\",\n      \"integrity\": \"sha512-RkhPPp2zrqDAQA/2jNhnztcPAlv64XdhIp7a7454A5ovI7Bukxgt7MX7udwAu3zg1DcpPU0rz3VV1SeaqvY4+A==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"engines\": {\n        \"node\": \">= 8\"\n      }\n    },\n    \"node_modules/@nodelib/fs.walk\": {\n      \"version\": \"1.2.8\",\n      \"resolved\": \"https://registry.npmjs.org/@nodelib/fs.walk/-/fs.walk-1.2.8.tgz\",\n      \"integrity\": \"sha512-oGB+UxlgWcgQkgwo8GcEGwemoTFt3FIO9ababBmaGwXIoBKZ+GTy0pP185beGg7Llih/NSHSV2XAs1lnznocSg==\",\n      \"dev\": true,\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@nodelib/fs.scandir\": \"2.1.5\",\n        \"fastq\": \"^1.6.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 8\"\n      }\n    },\n    \"node_modules/@radix-ui/number\": {\n      \"version\": \"1.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/@radix-ui/number/-/number-1.1.1.tgz\",\n      \"integrity\": \"sha512-MkKCwxlXTgz6CFoJx3pCwn07GKp36+aZyu/u2Ln2VrA5DcdyCZkASEDBTd8x5whTQQL5CiYf4prXKLcgQdv29g==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/@radix-ui/primitive\": {\n      \"version\": \"1.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/@radix-ui/primitive/-/primitive-1.1.2.tgz\",\n      \"integrity\": \"sha512-XnbHrrprsNqZKQhStrSwgRUQzoCI1glLzdw79xiZPoofhGICeZRSQ3dIxAKH1gb3OHfNf4d6f+vAv3kil2eggA==\",\n      \"license\": \"MIT\"\n    },\n    \"node_modules/@radix-ui/react-accordion\": {\n      \"version\": \"1.2.11\",\n      \"resolved\": \"https://registry.npmjs.org/@radix-ui/react-accordion/-/react-accordion-1.2.11.tgz\",\n      \"integrity\": \"sha512-l3W5D54emV2ues7jjeG1xcyN7S3jnK3zE2zHqgn0CmMsy9lNJwmgcrmaxS+7ipw15FAivzKNzH3d5EcGoFKw0A==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@radix-ui/primitive\": \"1.1.2\",\n        \"@radix-ui/react-collapsible\": \"1.1.11\",\n        \"@radix-ui/react-collection\": \"1.1.7\",\n        \"@radix-ui/react-compose-refs\": \"1.1.2\",\n        \"@radix-ui/react-context\": \"1.1.2\",\n        \"@radix-ui/react-direction\": \"1.1.1\",\n        \"@radix-ui/react-id\": \"1.1.1\",\n        \"@radix-ui/react-primitive\": \"2.1.3\",\n        \"@radix-ui/react-use-controllable-state\": \"1.2.2\"\n      },\n      \"peerDependencies\": {\n        \"@types/react\": \"*\",\n        \"@types/react-dom\": \"*\",\n        \"react\": \"^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\",\n        \"react-dom\": \"^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\"\n      },\n      \"peerDependenciesMeta\": {\n        \"@types/react\": {\n          \"optional\": true\n        },\n        \"@types/react-dom\": {\n          \"optional\": true\n        }\n      }\n    },\n    \"node_modules/@radix-ui/react-arrow\": {\n      \"version\": \"1.1.7\",\n      \"resolved\": \"https://registry.npmjs.org/@radix-ui/react-arrow/-/react-arrow-1.1.7.tgz\",\n      \"integrity\": \"sha512-F+M1tLhO+mlQaOWspE8Wstg+z6PwxwRd8oQ8IXceWz92kfAmalTRf0EjrouQeo7QssEPfCn05B4Ihs1K9WQ/7w==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@radix-ui/react-primitive\": \"2.1.3\"\n      },\n      \"peerDependencies\": {\n        \"@types/react\": \"*\",\n        \"@types/react-dom\": \"*\",\n        \"react\": \"^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\",\n        \"react-dom\": \"^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\"\n      },\n      \"peerDependenciesMeta\": {\n        \"@types/react\": {\n          \"optional\": true\n        },\n        \"@types/react-dom\": {\n          \"optional\": true\n        }\n      }\n    },\n    \"node_modules/@radix-ui/react-checkbox\": {\n      \"version\": \"1.3.2\",\n      \"resolved\": \"https://registry.npmjs.org/@radix-ui/react-checkbox/-/react-checkbox-1.3.2.tgz\",\n      \"integrity\": \"sha512-yd+dI56KZqawxKZrJ31eENUwqc1QSqg4OZ15rybGjF2ZNwMO+wCyHzAVLRp9qoYJf7kYy0YpZ2b0JCzJ42HZpA==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@radix-ui/primitive\": \"1.1.2\",\n        \"@radix-ui/react-compose-refs\": \"1.1.2\",\n        \"@radix-ui/react-context\": \"1.1.2\",\n        \"@radix-ui/react-presence\": \"1.1.4\",\n        \"@radix-ui/react-primitive\": \"2.1.3\",\n        \"@radix-ui/react-use-controllable-state\": \"1.2.2\",\n        \"@radix-ui/react-use-previous\": \"1.1.1\",\n        \"@radix-ui/react-use-size\": \"1.1.1\"\n      },\n      \"peerDependencies\": {\n        \"@types/react\": \"*\",\n        \"@types/react-dom\": \"*\",\n        \"react\": \"^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\",\n        \"react-dom\": \"^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\"\n      },\n      \"peerDependenciesMeta\": {\n        \"@types/react\": {\n          \"optional\": true\n        },\n        \"@types/react-dom\": {\n          \"optional\": true\n        }\n      }\n    },\n    \"node_modules/@radix-ui/react-collapsible\": {\n      \"version\": \"1.1.11\",\n      \"resolved\": \"https://registry.npmjs.org/@radix-ui/react-collapsible/-/react-collapsible-1.1.11.tgz\",\n      \"integrity\": \"sha512-2qrRsVGSCYasSz1RFOorXwl0H7g7J1frQtgpQgYrt+MOidtPAINHn9CPovQXb83r8ahapdx3Tu0fa/pdFFSdPg==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@radix-ui/primitive\": \"1.1.2\",\n        \"@radix-ui/react-compose-refs\": \"1.1.2\",\n        \"@radix-ui/react-context\": \"1.1.2\",\n        \"@radix-ui/react-id\": \"1.1.1\",\n        \"@radix-ui/react-presence\": \"1.1.4\",\n        \"@radix-ui/react-primitive\": \"2.1.3\",\n        \"@radix-ui/react-use-controllable-state\": \"1.2.2\",\n        \"@radix-ui/react-use-layout-effect\": \"1.1.1\"\n      },\n      \"peerDependencies\": {\n        \"@types/react\": \"*\",\n        \"@types/react-dom\": \"*\",\n        \"react\": \"^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\",\n        \"react-dom\": \"^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\"\n      },\n      \"peerDependenciesMeta\": {\n        \"@types/react\": {\n          \"optional\": true\n        },\n        \"@types/react-dom\": {\n          \"optional\": true\n        }\n      }\n    },\n    \"node_modules/@radix-ui/react-collection\": {\n      \"version\": \"1.1.7\",\n      \"resolved\": \"https://registry.npmjs.org/@radix-ui/react-collection/-/react-collection-1.1.7.tgz\",\n      \"integrity\": \"sha512-Fh9rGN0MoI4ZFUNyfFVNU4y9LUz93u9/0K+yLgA2bwRojxM8JU1DyvvMBabnZPBgMWREAJvU2jjVzq+LrFUglw==\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"@radix-ui/react-compose-refs\": \"1.1.2\",\n        \"@radix-ui/react-context\": \"1.1.2\",\n        \"@radix-ui/react-primitive\": \"2.1.3\",\n        \"@radix-ui/react-slot\": \"1.2.3\"\n      },\n      \"peerDependencies\": {\n        \"@types/react\": \"*\",\n        \"@types/react-dom\": \"*\",\n        \"react\": \"^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\",\n        \"react-dom\": \"^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc\"\n      },\n      \"peerDependenciesMeta\": {\n        \"@types/react\": {\n          \"optional\": true\n        },\n        \"@types/react-dom\": {\n          \"optional\": true\n        }\n      }\n    },\n    \"node_modules/@radix-ui/react-compose-refs\": {\n      \"version\": \"1.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/@radix-ui/react-compose-refs/-/react-compose-refs-1.1.2.tgz\",\n      \"integr"
      }
    },
    {
      "file_path": "frontend/package.json",
      "relative_path": "frontend/package.json",
      "language": "json",
      "imports": [],
      "exports": [],
      "classes": [],
      "functions": [],
      "variables": [],
      "description": "JSON configuration or data file",
      "lines_of_code": 52,
      "metadata": {
        "size_bytes": 1478,
        "last_modified": "2025-10-07T19:50:38.730Z"
      },
      "analysis_enhanced": {
        "complexity_score": 0,
        "detected_issues": [],
        "semantic_tags": [
          "json",
          "http-client",
          "authentication"
        ],
        "needs_ai_summary": false,
        "priority": "low",
        "summary_type": "rule-based",
        "code_snippet": "{\n  \"name\": \"frontend\",\n  \"version\": \"0.1.0\",\n  \"private\": true,\n  \"scripts\": {\n    \"dev\": \"next dev --turbopack\",\n    \"build\": \"next build\",\n    \"start\": \"next start\",\n    \"lint\": \"next lint\"\n  },\n  \"dependencies\": {\n    \"@radix-ui/react-accordion\": \"^1.2.11\",\n    \"@radix-ui/react-checkbox\": \"^1.3.2\",\n    \"@radix-ui/react-dialog\": \"^1.1.14\",\n    \"@radix-ui/react-label\": \"^2.1.7\",\n    \"@radix-ui/react-scroll-area\": \"^1.2.9\",\n    \"@radix-ui/react-select\": \"^2.2.5\",\n    \"@radix-ui/react-separator\": \"^1.1.7\",\n    \"@radix-ui/react-slot\": \"^1.2.3\",\n    \"@radix-ui/react-switch\": \"^1.2.5\",\n    \"@radix-ui/react-toast\": \"^1.2.14\",\n    \"@radix-ui/react-tooltip\": \"^1.2.7\",\n    \"@tanstack/react-query\": \"^5.82.0\",\n    \"@tanstack/react-query-devtools\": \"^5.82.0\",\n    \"axios\": \"^1.10.0\",\n    \"class-variance-authority\": \"^0.7.1\",\n    \"clsx\": \"^2.1.1\",\n    \"date-fns\": \"^4.1.0\",\n    \"lucide-react\": \"^0.525.0\",\n    \"motion\": \"^12.23.3\",\n    \"next\": \"15.3.5\",\n    \"next-themes\": \"^0.4.6\",\n    \"react\": \"^19.0.0\",\n    \"react-dom\": \"^19.0.0\",\n    \"recharts\": \"^2.15.4\",\n    \"socket.io-client\": \"^4.8.1\",\n    \"tailwind-merge\": \"^3.3.1\"\n  },\n  \"devDependencies\": {\n    \"@tailwindcss/postcss\": \"^4\",\n    \"@tanstack/eslint-plugin-query\": \"^5.81.2\",\n    \"@types/node\": \"^20\",\n    \"@types/react\": \"^19\",\n    \"@types/react-dom\": \"^19\",\n    \"eslint\": \"^9.30.1\",\n    \"eslint-plugin-unused-imports\": \"^4.1.4\",\n    \"tailwindcss\": \"^4\",\n    \"tw-animate-css\": \"^1.3.5\",\n    \"typescript\": \"^5\"\n  }\n}\n",
        "full_content": "{\n  \"name\": \"frontend\",\n  \"version\": \"0.1.0\",\n  \"private\": true,\n  \"scripts\": {\n    \"dev\": \"next dev --turbopack\",\n    \"build\": \"next build\",\n    \"start\": \"next start\",\n    \"lint\": \"next lint\"\n  },\n  \"dependencies\": {\n    \"@radix-ui/react-accordion\": \"^1.2.11\",\n    \"@radix-ui/react-checkbox\": \"^1.3.2\",\n    \"@radix-ui/react-dialog\": \"^1.1.14\",\n    \"@radix-ui/react-label\": \"^2.1.7\",\n    \"@radix-ui/react-scroll-area\": \"^1.2.9\",\n    \"@radix-ui/react-select\": \"^2.2.5\",\n    \"@radix-ui/react-separator\": \"^1.1.7\",\n    \"@radix-ui/react-slot\": \"^1.2.3\",\n    \"@radix-ui/react-switch\": \"^1.2.5\",\n    \"@radix-ui/react-toast\": \"^1.2.14\",\n    \"@radix-ui/react-tooltip\": \"^1.2.7\",\n    \"@tanstack/react-query\": \"^5.82.0\",\n    \"@tanstack/react-query-devtools\": \"^5.82.0\",\n    \"axios\": \"^1.10.0\",\n    \"class-variance-authority\": \"^0.7.1\",\n    \"clsx\": \"^2.1.1\",\n    \"date-fns\": \"^4.1.0\",\n    \"lucide-react\": \"^0.525.0\",\n    \"motion\": \"^12.23.3\",\n    \"next\": \"15.3.5\",\n    \"next-themes\": \"^0.4.6\",\n    \"react\": \"^19.0.0\",\n    \"react-dom\": \"^19.0.0\",\n    \"recharts\": \"^2.15.4\",\n    \"socket.io-client\": \"^4.8.1\",\n    \"tailwind-merge\": \"^3.3.1\"\n  },\n  \"devDependencies\": {\n    \"@tailwindcss/postcss\": \"^4\",\n    \"@tanstack/eslint-plugin-query\": \"^5.81.2\",\n    \"@types/node\": \"^20\",\n    \"@types/react\": \"^19\",\n    \"@types/react-dom\": \"^19\",\n    \"eslint\": \"^9.30.1\",\n    \"eslint-plugin-unused-imports\": \"^4.1.4\",\n    \"tailwindcss\": \"^4\",\n    \"tw-animate-css\": \"^1.3.5\",\n    \"typescript\": \"^5\"\n  }\n}\n"
      }
    },
    {
      "file_path": "frontend/postcss.config.mjs",
      "relative_path": "frontend/postcss.config.mjs",
      "language": "unknown",
      "imports": [],
      "exports": [],
      "classes": [],
      "functions": [],
      "variables": [],
      "description": "Non-code file",
      "lines_of_code": 6,
      "metadata": {
        "size_bytes": 81,
        "last_modified": "2025-10-07T19:50:38.730Z"
      },
      "analysis_enhanced": {
        "complexity_score": 0,
        "detected_issues": [],
        "semantic_tags": [
          "unknown"
        ],
        "priority": "low",
        "summary_type": "rule-based",
        "code_snippet": "const config = {\n  plugins: [\"@tailwindcss/postcss\"],\n};\n\nexport default config;\n",
        "full_content": "const config = {\n  plugins: [\"@tailwindcss/postcss\"],\n};\n\nexport default config;\n"
      }
    },
    {
      "file_path": "frontend/provider/auth-provider.tsx",
      "relative_path": "frontend/provider/auth-provider.tsx",
      "language": "typescript",
      "imports": [
        "react",
        "next/navigation",
        "@/lib/token-storage"
      ],
      "exports": [
        "withAuth"
      ],
      "classes": [],
      "functions": [
        {
          "name": "withAuth",
          "parameters": [
            "Component"
          ],
          "returnType": "unknown",
          "isAsync": false,
          "isExported": true
        }
      ],
      "variables": [],
      "description": "**Technical Description of the Authentication Module**\n\n### Purpose\n\nThe purpose of this authentication module is to provide a Higher-Order Component (HOC) called `withAuth` that checks if a user is authenticated before rendering a protected component.\n\n### Components\n\n* `withAuth`: a Higher-Order Component (HOC) that checks for authentication and redirects to the login page if necessary.\n\n### Dependencies\n\n* `react`: for building the React UI component\n* `next/navigation`: for accessing the Next.js navigation API\n* `@/lib/token-storage`: for storing and retrieving access tokens\n\n### Issues\n\n* None detected\n\n### Impact\n\nThis authentication module has a significant impact on the application's security and user experience. It ensures that only authenticated",
      "lines_of_code": 31,
      "metadata": {
        "size_bytes": 790,
        "last_modified": "2025-10-07T19:50:38.730Z"
      },
      "analysis_enhanced": {
        "complexity_score": 4,
        "detected_issues": [],
        "semantic_tags": [
          "typescript",
          "authentication",
          "react",
          "nextjs",
          "routing"
        ],
        "needs_ai_summary": true,
        "priority": "medium",
        "summary_type": "ai-generated",
        "code_snippet": "// hoc/withAuth.tsx\n\"use client\"\n\nimport { useLayoutEffect } from \"react\"\nimport { usePathname, useRouter } from \"next/navigation\"\nimport { accessTokenStorage } from \"@/lib/token-storage\"\n\nfunction withAuth(Component: React.ComponentType) {\n  return function Protected(props: any) {\n    const isAuthenticated = accessTokenStorage.get()\n    const publicRoutes = [\"/\", \"/login\", \"/sign-up\"]\n    const pathname = usePathname()\n    const router = useRouter()\n\n    useLayoutEffect(() => {\n      if (\n        !isAuthenticated &&\n        !publicRoutes.includes(window.location.pathname)\n      ) {\n        router.replace(\"/login\")\n      }\n    }, [isAuthenticated, pathname])\n\n    if (!isAuthenticated) return null // or a spinner\n\n    return <Component {...props} />\n  }\n}\n\nexport default withAuth\n",
        "full_content": "// hoc/withAuth.tsx\n\"use client\"\n\nimport { useLayoutEffect } from \"react\"\nimport { usePathname, useRouter } from \"next/navigation\"\nimport { accessTokenStorage } from \"@/lib/token-storage\"\n\nfunction withAuth(Component: React.ComponentType) {\n  return function Protected(props: any) {\n    const isAuthenticated = accessTokenStorage.get()\n    const publicRoutes = [\"/\", \"/login\", \"/sign-up\"]\n    const pathname = usePathname()\n    const router = useRouter()\n\n    useLayoutEffect(() => {\n      if (\n        !isAuthenticated &&\n        !publicRoutes.includes(window.location.pathname)\n      ) {\n        router.replace(\"/login\")\n      }\n    }, [isAuthenticated, pathname])\n\n    if (!isAuthenticated) return null // or a spinner\n\n    return <Component {...props} />\n  }\n}\n\nexport default withAuth\n"
      }
    },
    {
      "file_path": "frontend/provider/client-provider.tsx",
      "relative_path": "frontend/provider/client-provider.tsx",
      "language": "typescript",
      "imports": [
        "@tanstack/react-query",
        "react",
        "@tanstack/react-query-devtools",
        "@/hooks/data-access/job"
      ],
      "exports": [
        "ClientProvider"
      ],
      "classes": [],
      "functions": [
        {
          "name": "ClientProvider",
          "parameters": [
            "{ children }"
          ],
          "returnType": "unknown",
          "isAsync": false,
          "isExported": true
        },
        {
          "name": "PreFetchData",
          "parameters": [],
          "returnType": "unknown",
          "isAsync": false,
          "isExported": false
        }
      ],
      "variables": [],
      "description": "React component: ClientProvider with 2 methods and 0 classes",
      "lines_of_code": 38,
      "metadata": {
        "size_bytes": 972,
        "last_modified": "2025-10-07T19:50:38.730Z"
      },
      "analysis_enhanced": {
        "complexity_score": 6,
        "detected_issues": [],
        "semantic_tags": [
          "typescript",
          "react",
          "background-jobs"
        ],
        "priority": "low",
        "summary_type": "rule-based",
        "code_snippet": "\"use client\";\nimport { QueryClient, QueryClientProvider, useQueryClient } from \"@tanstack/react-query\";\nimport { useLayoutEffect, useState } from \"react\";\nimport { ReactQueryDevtools } from \"@tanstack/react-query-devtools\";\nimport * as Job from \"@/hooks/data-access/job\";\nfunction ClientProvider({ children }: { children: React.ReactNode }) {\n  const [queryClient] = useState(\n    () =>\n      new QueryClient({\n        defaultOptions: {\n          queries: {\n            refetchOnWindowFocus: false,\n          },\n        },\n      })\n  );\n  return (\n    <QueryClientProvider client={queryClient}>\n      {children}\n      <ReactQueryDevtools initialIsOpen={false} />\n      <PreFetchData />\n    </QueryClientProvider>\n  );\n}\n\nfunction PreFetchData() {\n  const queryClient = useQueryClient();\n  useLayoutEffect(() => {\n    queryClient.fetchQuery({\n      queryKey: [\"jobs\"],\n      queryFn: () => Job.getJobs(),\n    });\n  }, []);\n  return <></>;\n}\n\nexport default ClientProvider;\n",
        "full_content": "\"use client\";\nimport { QueryClient, QueryClientProvider, useQueryClient } from \"@tanstack/react-query\";\nimport { useLayoutEffect, useState } from \"react\";\nimport { ReactQueryDevtools } from \"@tanstack/react-query-devtools\";\nimport * as Job from \"@/hooks/data-access/job\";\nfunction ClientProvider({ children }: { children: React.ReactNode }) {\n  const [queryClient] = useState(\n    () =>\n      new QueryClient({\n        defaultOptions: {\n          queries: {\n            refetchOnWindowFocus: false,\n          },\n        },\n      })\n  );\n  return (\n    <QueryClientProvider client={queryClient}>\n      {children}\n      <ReactQueryDevtools initialIsOpen={false} />\n      <PreFetchData />\n    </QueryClientProvider>\n  );\n}\n\nfunction PreFetchData() {\n  const queryClient = useQueryClient();\n  useLayoutEffect(() => {\n    queryClient.fetchQuery({\n      queryKey: [\"jobs\"],\n      queryFn: () => Job.getJobs(),\n    });\n  }, []);\n  return <></>;\n}\n\nexport default ClientProvider;\n"
      }
    },
    {
      "file_path": "frontend/provider/redirect-loggedin.tsx",
      "relative_path": "frontend/provider/redirect-loggedin.tsx",
      "language": "typescript",
      "imports": [
        "@/lib/token-storage",
        "next/navigation"
      ],
      "exports": [],
      "classes": [],
      "functions": [],
      "variables": [
        "RedirectLoggedIn"
      ],
      "description": "TypeScript React file containing basic code structure and definitions",
      "lines_of_code": 14,
      "metadata": {
        "size_bytes": 326,
        "last_modified": "2025-10-07T19:50:38.730Z"
      },
      "analysis_enhanced": {
        "complexity_score": 1,
        "detected_issues": [],
        "semantic_tags": [
          "typescript",
          "nextjs",
          "routing"
        ],
        "priority": "low",
        "summary_type": "rule-based",
        "code_snippet": "import { accessTokenStorage } from \"@/lib/token-storage\"\nimport { useRouter } from \"next/navigation\"\n\nconst RedirectLoggedIn = () => {\n  const router = useRouter()\n  const isAuthenticated = accessTokenStorage.get()\n  if (isAuthenticated) {\n    router.replace(\"/dashboard\")\n  }\n  return null\n}\n\nexport default RedirectLoggedIn\n",
        "full_content": "import { accessTokenStorage } from \"@/lib/token-storage\"\nimport { useRouter } from \"next/navigation\"\n\nconst RedirectLoggedIn = () => {\n  const router = useRouter()\n  const isAuthenticated = accessTokenStorage.get()\n  if (isAuthenticated) {\n    router.replace(\"/dashboard\")\n  }\n  return null\n}\n\nexport default RedirectLoggedIn\n"
      }
    },
    {
      "file_path": "frontend/provider/socket-provider.tsx",
      "relative_path": "frontend/provider/socket-provider.tsx",
      "language": "typescript",
      "imports": [
        "react",
        "socket.io-client",
        "@/lib/socket"
      ],
      "exports": [],
      "classes": [],
      "functions": [],
      "variables": [
        "SocketContext",
        "useSocket",
        "SocketProvider"
      ],
      "description": "TypeScript React file containing basic code structure and definitions",
      "lines_of_code": 27,
      "metadata": {
        "size_bytes": 745,
        "last_modified": "2025-10-07T19:50:38.730Z"
      },
      "analysis_enhanced": {
        "complexity_score": 2,
        "detected_issues": [],
        "semantic_tags": [
          "typescript",
          "react"
        ],
        "priority": "low",
        "summary_type": "rule-based",
        "code_snippet": "// context/SocketContext.tsx\n\"use client\";\nimport { createContext, useContext, useEffect, useState } from \"react\";\nimport { Socket } from \"socket.io-client\";\nimport { getSocket } from \"@/lib/socket\";\n\nconst SocketContext = createContext<Socket | null>(null);\n\nexport const useSocket = () => useContext(SocketContext);\n\nexport const SocketProvider = ({ children }: { children: React.ReactNode }) => {\n  const [socket, setSocket] = useState<Socket | null>(null);\n\n  useEffect(() => {\n    const socketInstance = getSocket();\n    socketInstance.connect();\n\n    setSocket(socketInstance);\n\n    return () => {\n      socketInstance.disconnect();\n    };\n  }, []);\n\n  return <SocketContext.Provider value={socket}>{children}</SocketContext.Provider>;\n};\n",
        "full_content": "// context/SocketContext.tsx\n\"use client\";\nimport { createContext, useContext, useEffect, useState } from \"react\";\nimport { Socket } from \"socket.io-client\";\nimport { getSocket } from \"@/lib/socket\";\n\nconst SocketContext = createContext<Socket | null>(null);\n\nexport const useSocket = () => useContext(SocketContext);\n\nexport const SocketProvider = ({ children }: { children: React.ReactNode }) => {\n  const [socket, setSocket] = useState<Socket | null>(null);\n\n  useEffect(() => {\n    const socketInstance = getSocket();\n    socketInstance.connect();\n\n    setSocket(socketInstance);\n\n    return () => {\n      socketInstance.disconnect();\n    };\n  }, []);\n\n  return <SocketContext.Provider value={socket}>{children}</SocketContext.Provider>;\n};\n"
      }
    },
    {
      "file_path": "frontend/tsconfig.json",
      "relative_path": "frontend/tsconfig.json",
      "language": "json",
      "imports": [],
      "exports": [],
      "classes": [],
      "functions": [],
      "variables": [],
      "description": "JSON configuration or data file",
      "lines_of_code": 28,
      "metadata": {
        "size_bytes": 619,
        "last_modified": "2025-10-07T19:50:38.740Z"
      },
      "analysis_enhanced": {
        "complexity_score": 0,
        "detected_issues": [],
        "semantic_tags": [
          "json"
        ],
        "needs_ai_summary": false,
        "priority": "low",
        "summary_type": "rule-based",
        "code_snippet": "{\n  \"compilerOptions\": {\n    \"target\": \"ES2017\",\n    \"lib\": [\"dom\", \"dom.iterable\", \"esnext\"],\n    \"allowJs\": true,\n    \"skipLibCheck\": true,\n    \"strict\": true,\n    \"noEmit\": true,\n    \"esModuleInterop\": true,\n    \"module\": \"esnext\",\n    \"moduleResolution\": \"bundler\",\n    \"resolveJsonModule\": true,\n    \"isolatedModules\": true,\n    \"jsx\": \"preserve\",\n    \"incremental\": true,\n    \"plugins\": [\n      {\n        \"name\": \"next\"\n      }\n    ],\n    \"paths\": {\n      \"@/*\": [\"./*\"]\n    }\n  },\n  \"include\": [\"next-env.d.ts\", \"**/*.ts\", \"**/*.tsx\", \".next/types/**/*.ts\", \" eslint.config.js\"],\n  \"exclude\": [\"node_modules\"]\n}\n",
        "full_content": "{\n  \"compilerOptions\": {\n    \"target\": \"ES2017\",\n    \"lib\": [\"dom\", \"dom.iterable\", \"esnext\"],\n    \"allowJs\": true,\n    \"skipLibCheck\": true,\n    \"strict\": true,\n    \"noEmit\": true,\n    \"esModuleInterop\": true,\n    \"module\": \"esnext\",\n    \"moduleResolution\": \"bundler\",\n    \"resolveJsonModule\": true,\n    \"isolatedModules\": true,\n    \"jsx\": \"preserve\",\n    \"incremental\": true,\n    \"plugins\": [\n      {\n        \"name\": \"next\"\n      }\n    ],\n    \"paths\": {\n      \"@/*\": [\"./*\"]\n    }\n  },\n  \"include\": [\"next-env.d.ts\", \"**/*.ts\", \"**/*.tsx\", \".next/types/**/*.ts\", \" eslint.config.js\"],\n  \"exclude\": [\"node_modules\"]\n}\n"
      }
    },
    {
      "file_path": "job-manager/nodemon.json",
      "relative_path": "job-manager/nodemon.json",
      "language": "json",
      "imports": [],
      "exports": [],
      "classes": [],
      "functions": [],
      "variables": [],
      "description": "JSON configuration or data file",
      "lines_of_code": 10,
      "metadata": {
        "size_bytes": 183,
        "last_modified": "2025-10-07T19:50:38.741Z"
      },
      "analysis_enhanced": {
        "complexity_score": 0,
        "detected_issues": [],
        "semantic_tags": [
          "json"
        ],
        "needs_ai_summary": false,
        "priority": "low",
        "summary_type": "rule-based",
        "code_snippet": "{\n  \"watch\": [\"src\"],\n  \"ext\": \"ts,js,json\",\n  \"ignore\": [\"node_modules\", \"dist\"],\n  \"exec\": \"ts-node -r tsconfig-paths/register src/index.ts\",\n  \"env\": {\n    \"NODE_ENV\": \"dev\"\n  }\n}\n",
        "full_content": "{\n  \"watch\": [\"src\"],\n  \"ext\": \"ts,js,json\",\n  \"ignore\": [\"node_modules\", \"dist\"],\n  \"exec\": \"ts-node -r tsconfig-paths/register src/index.ts\",\n  \"env\": {\n    \"NODE_ENV\": \"dev\"\n  }\n}\n"
      }
    },
    {
      "file_path": "job-manager/package.json",
      "relative_path": "job-manager/package.json",
      "language": "json",
      "imports": [],
      "exports": [],
      "classes": [],
      "functions": [],
      "variables": [],
      "description": "JSON configuration or data file",
      "lines_of_code": 43,
      "metadata": {
        "size_bytes": 993,
        "last_modified": "2025-10-07T19:50:38.741Z"
      },
      "analysis_enhanced": {
        "complexity_score": 0,
        "detected_issues": [],
        "semantic_tags": [
          "json",
          "http-client",
          "authentication",
          "caching",
          "background-jobs"
        ],
        "needs_ai_summary": false,
        "priority": "low",
        "summary_type": "rule-based",
        "code_snippet": "{\n  \"name\": \"job-manager\",\n  \"version\": \"1.0.0\",\n  \"description\": \"\",\n  \"main\": \"index.js\",\n  \"scripts\": {\n    \"start\": \"tsc -b && tsc-alias && node dist/index.js\",\n    \"dev\": \"nodemon\",\n    \"build\": \"tsc -b\"\n  },\n  \"keywords\": [],\n  \"author\": \"\",\n  \"license\": \"ISC\",\n  \"packageManager\": \"pnpm@10.12.3\",\n  \"dependencies\": {\n    \"@types/axios\": \"^0.14.4\",\n    \"@types/cors\": \"^2.8.19\",\n    \"@types/express\": \"^5.0.3\",\n    \"axios\": \"^1.10.0\",\n    \"bcrypt\": \"^6.0.0\",\n    \"cors\": \"^2.8.5\",\n    \"dotenv\": \"^17.1.0\",\n    \"express\": \"^5.1.0\",\n    \"ioredis\": \"^5.6.1\",\n    \"joi\": \"^17.13.3\",\n    \"jsonwebtoken\": \"^9.0.2\",\n    \"prisma\": \"^6.11.1\",\n    \"socket.io\": \"^4.8.1\",\n    \"tsc-alias\": \"^1.8.16\",\n    \"typescript\": \"^5.8.3\"\n  },\n  \"devDependencies\": {\n    \"@prisma/client\": \"^6.11.1\",\n    \"@types/bcrypt\": \"^5.0.2\",\n    \"@types/jsonwebtoken\": \"^9.0.10\",\n    \"nodemon\": \"^3.1.10\",\n    \"prettier\": \"^3.6.2\",\n    \"ts-node\": \"^10.9.2\",\n    \"tsc-node\": \"^0.0.3\",\n    \"tsconfig-paths\": \"^4.2.0\"\n  }\n}\n",
        "full_content": "{\n  \"name\": \"job-manager\",\n  \"version\": \"1.0.0\",\n  \"description\": \"\",\n  \"main\": \"index.js\",\n  \"scripts\": {\n    \"start\": \"tsc -b && tsc-alias && node dist/index.js\",\n    \"dev\": \"nodemon\",\n    \"build\": \"tsc -b\"\n  },\n  \"keywords\": [],\n  \"author\": \"\",\n  \"license\": \"ISC\",\n  \"packageManager\": \"pnpm@10.12.3\",\n  \"dependencies\": {\n    \"@types/axios\": \"^0.14.4\",\n    \"@types/cors\": \"^2.8.19\",\n    \"@types/express\": \"^5.0.3\",\n    \"axios\": \"^1.10.0\",\n    \"bcrypt\": \"^6.0.0\",\n    \"cors\": \"^2.8.5\",\n    \"dotenv\": \"^17.1.0\",\n    \"express\": \"^5.1.0\",\n    \"ioredis\": \"^5.6.1\",\n    \"joi\": \"^17.13.3\",\n    \"jsonwebtoken\": \"^9.0.2\",\n    \"prisma\": \"^6.11.1\",\n    \"socket.io\": \"^4.8.1\",\n    \"tsc-alias\": \"^1.8.16\",\n    \"typescript\": \"^5.8.3\"\n  },\n  \"devDependencies\": {\n    \"@prisma/client\": \"^6.11.1\",\n    \"@types/bcrypt\": \"^5.0.2\",\n    \"@types/jsonwebtoken\": \"^9.0.10\",\n    \"nodemon\": \"^3.1.10\",\n    \"prettier\": \"^3.6.2\",\n    \"ts-node\": \"^10.9.2\",\n    \"tsc-node\": \"^0.0.3\",\n    \"tsconfig-paths\": \"^4.2.0\"\n  }\n}\n"
      }
    },
    {
      "file_path": "job-manager/pnpm-lock.yaml",
      "relative_path": "job-manager/pnpm-lock.yaml",
      "language": "yaml",
      "imports": [],
      "exports": [],
      "classes": [],
      "functions": [],
      "variables": [],
      "description": "YAML configuration file",
      "lines_of_code": 1855,
      "metadata": {
        "size_bytes": 57335,
        "last_modified": "2025-10-07T19:50:38.741Z"
      },
      "analysis_enhanced": {
        "complexity_score": 0,
        "detected_issues": [],
        "semantic_tags": [
          "yaml",
          "http-client",
          "routing",
          "validation",
          "caching",
          "background-jobs"
        ],
        "needs_ai_summary": false,
        "priority": "low",
        "summary_type": "rule-based",
        "code_snippet": "lockfileVersion: '9.0'\n\nsettings:\n  autoInstallPeers: true\n  excludeLinksFromLockfile: false\n\nimporters:\n\n  .:\n    dependencies:\n      '@types/axios':\n        specifier: ^0.14.4\n        version: 0.14.4\n      '@types/cors':\n        specifier: ^2.8.19\n        version: 2.8.19\n      '@types/express':\n        specifier: ^5.0.3\n        version: 5.0.3\n      axios:\n        specifier: ^1.10.0\n        version: 1.10.0\n      bcrypt:\n        specifier: ^6.0.0\n        version: 6.0.0\n      cors:\n        specifier: ^2.8.5\n        version: 2.8.5\n      dotenv:\n        specifier: ^17.1.0\n        version: 17.1.0\n      express:\n        specifier: ^5.1.0\n        version: 5.1.0\n      ioredis:\n        specifier: ^5.6.1\n        version: 5.6.1\n      joi:\n        specifier: ^17.13.3\n        version: 17.13.3\n      jsonwebtoken:\n        specifier: ^9.0.2\n        version: 9.0.2\n      prisma:\n        specifier: ^6.11.1\n        version: 6.11.1(typescript@5.8.3)\n      socket.io:\n        specifier: ^4.8.1\n        version: 4.8.1\n      tsc-alias:\n        specifier: ^1.8.16\n        version: 1.8.16\n      typescript:\n        specifier: ^5.8.3\n        version: 5.8.3\n    devDependencies:\n      '@prisma/client':\n        specifier: ^6.11.1\n        version: 6.11.1(prisma@6.11.1(typescript@5.8.3))(typescript@5.8.3)\n      '@types/bcrypt':\n        specifier: ^5.0.2\n        version: 5.0.2\n      '@types/jsonwebtoken':\n        specifier: ^9.0.10\n        version: 9.0.10\n      nodemon:\n        specifier: ^3.1.10\n        version: 3.1.10\n      prettier:\n        specifier: ^3.6.2\n        version: 3.6.2\n      ts-node:\n        specifier: ^10.9.2\n        version: 10.9.2(@types/node@24.0.11)(typescript@5.8.3)\n      tsc-node:\n        specifier: ^0.0.3\n        version: 0.0.3\n      tsconfig-paths:\n        specifier: ^4.2.0\n        version: 4.2.0\n\npackages:\n\n  '@cspotcode/source-map-support@0.8.1':\n    resolution: {integrity: sha512-IchNf6dN4tHoMFIn/7OE8LWZ19Y6q/67Bmf6vnGREv8RSbBVb9LPJxEcnwrcwX6ixSvaiGoomAUvu4YSxXrVgw==}\n    en",
        "full_content": "lockfileVersion: '9.0'\n\nsettings:\n  autoInstallPeers: true\n  excludeLinksFromLockfile: false\n\nimporters:\n\n  .:\n    dependencies:\n      '@types/axios':\n        specifier: ^0.14.4\n        version: 0.14.4\n      '@types/cors':\n        specifier: ^2.8.19\n        version: 2.8.19\n      '@types/express':\n        specifier: ^5.0.3\n        version: 5.0.3\n      axios:\n        specifier: ^1.10.0\n        version: 1.10.0\n      bcrypt:\n        specifier: ^6.0.0\n        version: 6.0.0\n      cors:\n        specifier: ^2.8.5\n        version: 2.8.5\n      dotenv:\n        specifier: ^17.1.0\n        version: 17.1.0\n      express:\n        specifier: ^5.1.0\n        version: 5.1.0\n      ioredis:\n        specifier: ^5.6.1\n        version: 5.6.1\n      joi:\n        specifier: ^17.13.3\n        version: 17.13.3\n      jsonwebtoken:\n        specifier: ^9.0.2\n        version: 9.0.2\n      prisma:\n        specifier: ^6.11.1\n        version: 6.11.1(typescript@5.8.3)\n      socket.io:\n        specifier: ^4.8.1\n        version: 4.8.1\n      tsc-alias:\n        specifier: ^1.8.16\n        version: 1.8.16\n      typescript:\n        specifier: ^5.8.3\n        version: 5.8.3\n    devDependencies:\n      '@prisma/client':\n        specifier: ^6.11.1\n        version: 6.11.1(prisma@6.11.1(typescript@5.8.3))(typescript@5.8.3)\n      '@types/bcrypt':\n        specifier: ^5.0.2\n        version: 5.0.2\n      '@types/jsonwebtoken':\n        specifier: ^9.0.10\n        version: 9.0.10\n      nodemon:\n        specifier: ^3.1.10\n        version: 3.1.10\n      prettier:\n        specifier: ^3.6.2\n        version: 3.6.2\n      ts-node:\n        specifier: ^10.9.2\n        version: 10.9.2(@types/node@24.0.11)(typescript@5.8.3)\n      tsc-node:\n        specifier: ^0.0.3\n        version: 0.0.3\n      tsconfig-paths:\n        specifier: ^4.2.0\n        version: 4.2.0\n\npackages:\n\n  '@cspotcode/source-map-support@0.8.1':\n    resolution: {integrity: sha512-IchNf6dN4tHoMFIn/7OE8LWZ19Y6q/67Bmf6vnGREv8RSbBVb9LPJxEcnwrcwX6ixSvaiGoomAUvu4YSxXrVgw==}\n    engines: {node: '>=12'}\n\n  '@hapi/hoek@9.3.0':\n    resolution: {integrity: sha512-/c6rf4UJlmHlC9b5BaNvzAcFv7HZ2QHaV0D4/HNlBdvFnvQq8RI4kYdhyPCl7Xj+oWvTWQ8ujhqS53LIgAe6KQ==}\n\n  '@hapi/topo@5.1.0':\n    resolution: {integrity: sha512-foQZKJig7Ob0BMAYBfcJk8d77QtOe7Wo4ox7ff1lQYoNNAb6jwcY1ncdoy2e9wQZzvNy7ODZCYJkK8kzmcAnAg==}\n\n  '@ioredis/commands@1.2.0':\n    resolution: {integrity: sha512-Sx1pU8EM64o2BrqNpEO1CNLtKQwyhuXuqyfH7oGKCk+1a33d2r5saW8zNwm3j6BTExtjrv2BxTgzzkMwts6vGg==}\n\n  '@jridgewell/resolve-uri@3.1.2':\n    resolution: {integrity: sha512-bRISgCIjP20/tbWSPWMEi54QVPRZExkuD9lJL+UIxUKtwVJA8wW1Trb1jMs1RFXo1CBTNZ/5hpC9QvmKWdopKw==}\n    engines: {node: '>=6.0.0'}\n\n  '@jridgewell/sourcemap-codec@1.5.4':\n    resolution: {integrity: sha512-VT2+G1VQs/9oz078bLrYbecdZKs912zQlkelYpuf+SXF+QvZDYJlbx/LSx+meSAwdDFnF8FVXW92AVjjkVmgFw==}\n\n  '@jridgewell/trace-mapping@0.3.9':\n    resolution: {integrity: sha512-3Belt6tdc8bPgAtbcmdtNJlirVoTmEb5e2gC94PnkwEW9jI6CAHUeoG85tjWP5WquqfavoMtMwiG4P926ZKKuQ==}\n\n  '@nodelib/fs.scandir@2.1.5':\n    resolution: {integrity: sha512-vq24Bq3ym5HEQm2NKCr3yXDwjc7vTsEThRDnkp2DK9p1uqLR+DHurm/NOTo0KG7HYHU7eppKZj3MyqYuMBf62g==}\n    engines: {node: '>= 8'}\n\n  '@nodelib/fs.stat@2.0.5':\n    resolution: {integrity: sha512-RkhPPp2zrqDAQA/2jNhnztcPAlv64XdhIp7a7454A5ovI7Bukxgt7MX7udwAu3zg1DcpPU0rz3VV1SeaqvY4+A==}\n    engines: {node: '>= 8'}\n\n  '@nodelib/fs.walk@1.2.8':\n    resolution: {integrity: sha512-oGB+UxlgWcgQkgwo8GcEGwemoTFt3FIO9ababBmaGwXIoBKZ+GTy0pP185beGg7Llih/NSHSV2XAs1lnznocSg==}\n    engines: {node: '>= 8'}\n\n  '@prisma/client@6.11.1':\n    resolution: {integrity: sha512-5CLFh8QP6KxRm83pJ84jaVCeSVPQr8k0L2SEtOJHwdkS57/VQDcI/wQpGmdyOZi+D9gdNabdo8tj1Uk+w+upsQ==}\n    engines: {node: '>=18.18'}\n    peerDependencies:\n      prisma: '*'\n      typescript: '>=5.1.0'\n    peerDependenciesMeta:\n      prisma:\n        optional: true\n      typescript:\n        optional: true\n\n  '@prisma/config@6.11.1':\n    resolution: {integrity: sha512-z6rCTQN741wxDq82cpdzx2uVykpnQIXalLhrWQSR0jlBVOxCIkz3HZnd8ern3uYTcWKfB3IpVAF7K2FU8t/8AQ==}\n\n  '@prisma/debug@6.11.1':\n    resolution: {integrity: sha512-lWRb/YSWu8l4Yum1UXfGLtqFzZkVS2ygkWYpgkbgMHn9XJlMITIgeMvJyX5GepChzhmxuSuiq/MY/kGFweOpGw==}\n\n  '@prisma/engines-version@6.11.1-1.f40f79ec31188888a2e33acda0ecc8fd10a853a9':\n    resolution: {integrity: sha512-swFJTOOg4tHyOM1zB/pHb3MeH0i6t7jFKn5l+ZsB23d9AQACuIRo9MouvuKGvnDogzkcjbWnXi/NvOZ0+n5Jfw==}\n\n  '@prisma/engines@6.11.1':\n    resolution: {integrity: sha512-6eKEcV6V8W2eZAUwX2xTktxqPM4vnx3sxz3SDtpZwjHKpC6lhOtc4vtAtFUuf5+eEqBk+dbJ9Dcaj6uQU+FNNg==}\n\n  '@prisma/fetch-engine@6.11.1':\n    resolution: {integrity: sha512-NBYzmkXTkj9+LxNPRSndaAeALOL1Gr3tjvgRYNqruIPlZ6/ixLeuE/5boYOewant58tnaYFZ5Ne0jFBPfGXHpQ==}\n\n  '@prisma/get-platform@6.11.1':\n    resolution: {integrity: sha512-b2Z8oV2gwvdCkFemBTFd0x4lsL4O2jLSx8lB7D+XqoFALOQZPa7eAPE1NU0Mj1V8gPHRxIsHnyUNtw2i92psUw==}\n\n  '@sideway/address@4.1.5':\n    resolution: {integrity: sha512-IqO/DUQHUkPeixNQ8n0JA6102hT9CmaljNTPmQ1u8MEhBo/R4Q8eKLN/vGZxuebwOroDB4cbpjheD4+/sKFK4Q==}\n\n  '@sideway/formula@3.0.1':\n    resolution: {integrity: sha512-/poHZJJVjx3L+zVD6g9KgHfYnb443oi7wLu/XKojDviHy6HOEOA6z1Trk5aR1dGcmPenJEgb2sK2I80LeS3MIg==}\n\n  '@sideway/pinpoint@2.0.0':\n    resolution: {integrity: sha512-RNiOoTPkptFtSVzQevY/yWtZwf/RxyVnPy/OcA9HBM3MlGDnBEYL5B41H0MTn0Uec8Hi+2qUtTfG2WWZBmMejQ==}\n\n  '@socket.io/component-emitter@3.1.2':\n    resolution: {integrity: sha512-9BCxFwvbGg/RsZK9tjXd8s4UcwR0MWeFQ1XEKIQVVvAGJyINdrqKMcTRyLoK8Rse1GjzLV9cwjWV1olXRWEXVA==}\n\n  '@tsconfig/node10@1.0.11':\n    resolution: {integrity: sha512-DcRjDCujK/kCk/cUe8Xz8ZSpm8mS3mNNpta+jGCA6USEDfktlNvm1+IuZ9eTcDbNk41BHwpHHeW+N1lKCz4zOw==}\n\n  '@tsconfig/node12@1.0.11':\n    resolution: {integrity: sha512-cqefuRsh12pWyGsIoBKJA9luFu3mRxCA+ORZvA4ktLSzIuCUtWVxGIuXigEwO5/ywWFMZ2QEGKWvkZG1zDMTag==}\n\n  '@tsconfig/node14@1.0.3':\n    resolution: {integrity: sha512-ysT8mhdixWK6Hw3i1V2AeRqZ5WfXg1G43mqoYlM2nc6388Fq5jcXyr5mRsqViLx/GJYdoL0bfXD8nmF+Zn/Iow==}\n\n  '@tsconfig/node16@1.0.4':\n    resolution: {integrity: sha512-vxhUy4J8lyeyinH7Azl1pdd43GJhZH/tP2weN8TntQblOY+A0XbT8DJk1/oCPuOOyg/Ja757rG0CgHcWC8OfMA==}\n\n  '@types/axios@0.14.4':\n    resolution: {integrity: sha512-9JgOaunvQdsQ/qW2OPmE5+hCeUB52lQSolecrFrthct55QekhmXEwT203s20RL+UHtCQc15y3VXpby9E7Kkh/g==}\n    deprecated: This is a stub types definition. axios provides its own type definitions, so you do not need this installed.\n\n  '@types/bcrypt@5.0.2':\n    resolution: {integrity: sha512-6atioO8Y75fNcbmj0G7UjI9lXN2pQ/IGJ2FWT4a/btd0Lk9lQalHLKhkgKVZ3r+spnmWUKfbMi1GEe9wyHQfNQ==}\n\n  '@types/body-parser@1.19.6':\n    resolution: {integrity: sha512-HLFeCYgz89uk22N5Qg3dvGvsv46B8GLvKKo1zKG4NybA8U2DiEO3w9lqGg29t/tfLRJpJ6iQxnVw4OnB7MoM9g==}\n\n  '@types/connect@3.4.38':\n    resolution: {integrity: sha512-K6uROf1LD88uDQqJCktA4yzL1YYAK6NgfsI0v/mTgyPKWsX1CnJ0XPSDhViejru1GcRkLWb8RlzFYJRqGUbaug==}\n\n  '@types/cors@2.8.19':\n    resolution: {integrity: sha512-mFNylyeyqN93lfe/9CSxOGREz8cpzAhH+E93xJ4xWQf62V8sQ/24reV2nyzUWM6H6Xji+GGHpkbLe7pVoUEskg==}\n\n  '@types/express-serve-static-core@5.0.7':\n    resolution: {integrity: sha512-R+33OsgWw7rOhD1emjU7dzCDHucJrgJXMA5PYCzJxVil0dsyx5iBEPHqpPfiKNJQb7lZ1vxwoLR4Z87bBUpeGQ==}\n\n  '@types/express@5.0.3':\n    resolution: {integrity: sha512-wGA0NX93b19/dZC1J18tKWVIYWyyF2ZjT9vin/NRu0qzzvfVzWjs04iq2rQ3H65vCTQYlRqs3YHfY7zjdV+9Kw==}\n\n  '@types/http-errors@2.0.5':\n    resolution: {integrity: sha512-r8Tayk8HJnX0FztbZN7oVqGccWgw98T/0neJphO91KkmOzug1KkofZURD4UaD5uH8AqcFLfdPErnBod0u71/qg==}\n\n  '@types/jsonwebtoken@9.0.10':\n    resolution: {integrity: sha512-asx5hIG9Qmf/1oStypjanR7iKTv0gXQ1Ov/jfrX6kS/EO0OFni8orbmGCn0672NHR3kXHwpAwR+B368ZGN/2rA==}\n\n  '@types/mime@1.3.5':\n    resolution: {integrity: sha512-/pyBZWSLD2n0dcHE3hq8s8ZvcETHtEuF+3E7XVt0Ig2nvsVQXdghHVcEkIWjy9A0wKfTn97a/PSDYohKIlnP/w==}\n\n  '@types/ms@2.1.0':\n    resolution: {integrity: sha512-GsCCIZDE/p3i96vtEqx+7dBUGXrc7zeSK3wwPHIaRThS+9OhWIXRqzs4d6k1SVU8g91DrNRWxWUGhp5KXQb2VA==}\n\n  '@types/node@24.0.11':\n    resolution: {integrity: sha512-CJV8eqrYnwQJGMrvcRhQmZfpyniDavB+7nAZYJc6w99hFYJyFN3INV1/2W3QfQrqM36WTLrijJ1fxxvGBmCSxA==}\n\n  '@types/qs@6.14.0':\n    resolution: {integrity: sha512-eOunJqu0K1923aExK6y8p6fsihYEn/BYuQ4g0CxAAgFc4b/ZLN4CrsRZ55srTdqoiLzU2B2evC+apEIxprEzkQ==}\n\n  '@types/range-parser@1.2.7':\n    resolution: {integrity: sha512-hKormJbkJqzQGhziax5PItDUTMAM9uE2XXQmM37dyd4hVM+5aVl7oVxMVUiVQn2oCQFN/LKCZdvSM0pFRqbSmQ==}\n\n  '@types/send@0.17.5':\n    resolution: {integrity: sha512-z6F2D3cOStZvuk2SaP6YrwkNO65iTZcwA2ZkSABegdkAh/lf+Aa/YQndZVfmEXT5vgAp6zv06VQ3ejSVjAny4w==}\n\n  '@types/serve-static@1.15.8':\n    resolution: {integrity: sha512-roei0UY3LhpOJvjbIP6ZZFngyLKl5dskOtDhxY5THRSpO+ZI+nzJ+m5yUMzGrp89YRa7lvknKkMYjqQFGwA7Sg==}\n\n  accepts@1.3.8:\n    resolution: {integrity: sha512-PYAthTa2m2VKxuvSD3DPC/Gy+U+sOA1LAuT8mkmRuvw+NACSaeXEQ+NHcVF7rONl6qcaxV3Uuemwawk+7+SJLw==}\n    engines: {node: '>= 0.6'}\n\n  accepts@2.0.0:\n    resolution: {integrity: sha512-5cvg6CtKwfgdmVqY1WIiXKc3Q1bkRqGLi+2W/6ao+6Y7gu/RCwRuAhGEzh5B4KlszSuTLgZYuqFqo5bImjNKng==}\n    engines: {node: '>= 0.6'}\n\n  acorn-walk@8.3.4:\n    resolution: {integrity: sha512-ueEepnujpqee2o5aIYnvHU6C0A42MNdsIDeqy5BydrkuC5R1ZuUFnm27EeFJGoEHJQgn3uleRvmTXaJgfXbt4g==}\n    engines: {node: '>=0.4.0'}\n\n  acorn@8.15.0:\n    resolution: {integrity: sha512-NZyJarBfL7nWwIq+FDL6Zp/yHEhePMNnnJ0y3qfieCrmNvYct8uvtiV41UvlSe6apAfk0fY1FbWx+NwfmpvtTg==}\n    engines: {node: '>=0.4.0'}\n    hasBin: true\n\n  anymatch@3.1.3:\n    resolution: {integrity: sha512-KMReFUr0B4t+D+OBkjR3KYqvocp2XaSzO55UcB6mgQMd3KbcE+mWTyvVV7D/zsdEbNnV6acZUutkiHQXvTr1Rw==}\n    engines: {node: '>= 8'}\n\n  arg@4.1.3:\n    resolution: {integrity: sha512-58S9QDqG0Xx27YwPSt9fJxivjYl432YCwfDMfZ+71RAqUrZef7LrKQZ3LHLOwCS4FLNBplP533Zx895SeOCHvA==}\n\n  array-union@2.1.0:\n    resolution: {integrity: sha512-HGyxoOTYUyCM6stUe6EJgnd4EoewAI7zMdfqO+kGjnlZmBDz/cR5pf8r/cR4Wq60sL/p0IkcjUEEPwS3GFrIyw==}\n    engines: {node: '>=8'}\n\n  asynckit@0.4.0:\n    resolution: {integrity: sha512-Oei9OH4tRh0YqU3GxhX79dM/mwVgvbZJaSNaRk+bshkj0S5cfHcgYakreBjrHwatXKbz+IoIdYLxrKim2MjW0Q==}\n\n  axios@1.10.0:\n    resolution: {integrity: sha512-/1xYAC4MP/HEG+3duIhFr4ZQXR4sQXOIe+o6sdqzeykGLx6Upp/1p8MHqhINOvGeP7xyNHe7tsiJByc4SSVUxw==}\n\n  balanced-match@1.0.2:\n    resolution: {integrity: sha512-3oSeUO0TMV67hN1AmbXsK4yaqU7tjiHlbxRDZOpH0KW9+CeX4bRAaX0Anxt0tx2MrpRpWwQaPwIlISEJhYU5Pw==}\n\n  base64id@2.0.0:\n    resolution: {integrity: sha512-lGe34o6EHj9y3Kts9R4ZYs/Gr+6N7MCaMlIFA3F1R2O5/m7K06AxfSeO5530PEERE6/WyEg3lsuyw4GHlPZHog==}\n    engines: {node: ^4.5.0 || >= 5.9}\n\n  bcrypt@6.0.0:\n    resolution: {integrity: sha512-cU8v/EGSrnH+HnxV2z0J7/blxH8gq7Xh2JFT6Aroax7UohdmiJJlxApMxtKfuI7z68NvvVcmR78k2LbT6efhRg==}\n    engines: {node: '>= 18'}\n\n  binary-extensions@2.3.0:\n    resolution: {integrity: sha512-Ceh+7ox5qe7LJuLHoY0feh3pHuUDHAcRUeyL2VYghZwfpkNIy/+8Ocg0a3UuSoYzavmylwuLWQOf3hl0jjMMIw==}\n    engines: {node: '>=8'}\n\n  body-parser@2.2.0:\n    resolution: {integrity: sha512-02qvAaxv8tp7fBa/mw1ga98OGm+eCbqzJOKoRt70sLmfEEi+jyBYVTDGfCL/k06/4EMk/z01gCe7HoCH/f2LTg==}\n    engines: {node: '>=18'}\n\n  brace-expansion@1.1.12:\n    resolution: {integrity: sha512-9T9UjW3r0UW5c1Q7GTwllptXwhvYmEzFhzMfZ9H7FQWt+uZePjZPjBP/W1ZEyZ1twGWom5/56TF4lPcqjnDHcg==}\n\n  braces@3.0.3:\n    resolution: {integrity: sha512-yQbXgO/OSZVD2IsiLlro+7Hf6Q18EJrKSEsdoMzKePKXct3gvD8oLcOQdIzGupr5Fj+EDe8gO/lxc1BzfMpxvA==}\n    engines: {node: '>=8'}\n\n  buffer-equal-constant-time@1.0.1:\n    resolution: {integrity: sha512-zRpUiDwd/xk6ADqPMATG8vc9VPrkck7T07OIx0gnjmJAnHnTVXNQG3vfvWNuiZIkwu9KrKdA1iJKfsfTVxE6NA==}\n\n  bytes@3.1.2:\n    resolution: {integrity: sha512-/Nf7TyzTx6S3yRJObOAV7956r8cr2+Oj8AC5dt8wSP3BQAoeX58NoHyCU8P8zGkNXStjTSi6fzO6F0pBdcYbEg==}\n    engines: {node: '>= 0.8'}\n\n  call-bind-apply-helpers@1.0.2:\n    resolution: {integrity: sha512-Sp1ablJ0ivDkSzjcaJdxEunN5/XvksFJ2sMBFfq6x0ryhQV/2b/KwFe21cMpmHtPOSij8K99/wSfoEuTObmuMQ==}\n    engines: {node: '>= 0.4'}\n\n  call-bound@1.0.4:\n    resolution: {integrity: sha512-+ys997U96po4Kx/ABpBCqhA9EuxJaQWDQg7295H4hBphv3IZg0boBKuwYpt4YXp6MZ5AmZQnU/tyMTlRpaSejg==}\n    engines: {node: '>= 0.4'}\n\n  chokidar@3.6.0:\n    resolution: {integrity: sha512-7VT13fmjotKpGipCW9JEQAusEPE+Ei8nl6/g4FBAmIm0GOOLMua9NDDo/DWp0ZAxCr3cPq5ZpBqmPAQgDda2Pw==}\n    engines: {node: '>= 8.10.0'}\n\n  cluster-key-slot@1.1.2:\n    resolution: {integrity: sha512-RMr0FhtfXemyinomL4hrWcYJxmX6deFdCxpJzhDttxgO1+bcCnkk+9drydLVDmAMG7NE6aN/fl4F7ucU/90gAA==}\n    engines: {node: '>=0.10.0'}\n\n  combined-stream@1.0.8:\n    resolution: {integrity: sha512-FQN4MRfuJeHf7cBbBMJFXhKSDq+2kAArBlmRBvcvFE5BB1HZKXtSFASDhdlz9zOYwxh8lDdnvmMOe/+5cdoEdg==}\n    engines: {node: '>= 0.8'}\n\n  commander@9.5.0:\n    resolution: {integrity: sha512-KRs7WVDKg86PWiuAqhDrAQnTXZKraVcCc6vFdL14qrZ/DcWwuRo7VoiYXalXO7S5GKpqYiVEwCbgFDfxNHKJBQ==}\n    engines: {node: ^12.20.0 || >=14}\n\n  concat-map@0.0.1:\n    resolution: {integrity: sha512-/Srv4dswyQNBfohGpz9o6Yb3Gz3SrUDqBH5rTuhGR7ahtlbYKnVxw2bCFMRljaA7EXHaXZ8wsHdodFvbkhKmqg==}\n\n  content-disposition@1.0.0:\n    resolution: {integrity: sha512-Au9nRL8VNUut/XSzbQA38+M78dzP4D+eqg3gfJHMIHHYa3bg067xj1KxMUWj+VULbiZMowKngFFbKczUrNJ1mg==}\n    engines: {node: '>= 0.6'}\n\n  content-type@1.0.5:\n    resolution: {integrity: sha512-nTjqfcBFEipKdXCv4YDQWCfmcLZKm81ldF0pAopTvyrFGVbcR6P/VAAd5G7N+0tTr8QqiU0tFadD6FK4NtJwOA==}\n    engines: {node: '>= 0.6'}\n\n  cookie-signature@1.2.2:\n    resolution: {integrity: sha512-D76uU73ulSXrD1UXF4KE2TMxVVwhsnCgfAyTg9k8P6KGZjlXKrOLe4dJQKI3Bxi5wjesZoFXJWElNWBjPZMbhg==}\n    engines: {node: '>=6.6.0'}\n\n  cookie@0.7.2:\n    resolution: {integrity: sha512-yki5XnKuf750l50uGTllt6kKILY4nQ1eNIQatoXEByZ5dWgnKqbnqmTrBE5B4N7lrMJKQ2ytWMiTO2o0v6Ew/w==}\n    engines: {node: '>= 0.6'}\n\n  cors@2.8.5:\n    resolution: {integrity: sha512-KIHbLJqu73RGr/hnbrO9uBeixNGuvSQjul/jdFvS/KFSIH1hWVd1ng7zOHx+YrEfInLG7q4n6GHQ9cDtxv/P6g==}\n    engines: {node: '>= 0.10'}\n\n  create-require@1.1.1:\n    resolution: {integrity: sha512-dcKFX3jn0MpIaXjisoRvexIJVEKzaq7z2rZKxf+MSr9TkdmHmsU4m2lcLojrj/FHl8mk5VxMmYA+ftRkP/3oKQ==}\n\n  debug@4.3.7:\n    resolution: {integrity: sha512-Er2nc/H7RrMXZBFCEim6TCmMk02Z8vLC2Rbi1KEBggpo0fS6l0S1nnapwmIi3yW/+GOJap1Krg4w0Hg80oCqgQ==}\n    engines: {node: '>=6.0'}\n    peerDependencies:\n      supports-color: '*'\n    peerDependenciesMeta:\n      supports-color:\n        optional: true\n\n  debug@4.4.1:\n    resolution: {integrity: sha512-KcKCqiftBJcZr++7ykoDIEwSa3XWowTfNPo92BYxjXiyYEVrUQh2aLyhxBCwww+heortUFxEJYcRzosstTEBYQ==}\n    engines: {node: '>=6.0'}\n    peerDependencies:\n      supports-color: '*'\n    peerDependenciesMeta:\n      supports-color:\n        optional: true\n\n  delayed-stream@1.0.0:\n    resolution: {integrity: sha512-ZySD7Nf91aLB0RxL4KGrKHBXl7Eds1DAmEdcoVawXnLD7SDhpNgtuII2aAkg7a7QS41jxPSZ17p4VdGnMHk3MQ==}\n    engines: {node: '>=0.4.0'}\n\n  denque@2.1.0:\n    resolution: {integrity: sha512-HVQE3AAb/pxF8fQAoiqpvg9i3evqug3hoiwakOyZAwJm+6vZehbkYXZ0l4JxS+I3QxM97v5aaRNhj8v5oBhekw==}\n    engines: {node: '>=0.10'}\n\n  depd@2.0.0:\n    resolution: {integrity: sha512-g7nH6P6dyDioJogAAGprGpCtVImJhpPk/roCzdb3fIh61/s/nPsfR6onyMwkCAR/OlC3yBC0lESvUoQEAssIrw==}\n    engines: {node: '>= 0.8'}\n\n  diff@4.0.2:\n    resolution: {integrity: sha512-58lmxKSA4BNyLz+HHMUzlOEpg09FV+ev6ZMe3vJihgdxzgcwZ8VoEEPmALCZG9LmqfVoNMMKpttIYTVG6uDY7A==}\n    engines: {node: '>=0.3.1'}\n\n  dir-glob@3.0.1:\n    resolution: {integrity: sha512-WkrWp9GR4KXfKGYzOLmTuGVi1UWFfws377n9cc55/tb6DuqyF6pcQ5AbiHEshaDpY9v6oaSr2XCDidGmMwdzIA==}\n    engines: {node: '>=8'}\n\n  dotenv@17.1.0:\n    resolution: {integrity: sha512-tG9VUTJTuju6GcXgbdsOuRhupE8cb4mRgY5JLRCh4MtGoVo3/gfGUtOMwmProM6d0ba2mCFvv+WrpYJV6qgJXQ==}\n    engines: {node: '>=12'}\n\n  dunder-proto@1.0.1:\n    resolution: {integrity: sha512-KIN/nDJBQRcXw0MLVhZE9iQHmG68qAVIBg9CqmUYjmQIhgij9U5MFvrqkUL5FbtyyzZuOeOt0zdeRe4UY7ct+A==}\n    engines: {node: '>= 0.4'}\n\n  ecdsa-sig-formatter@1.0.11:\n    resolution: {integrity: sha512-nagl3RYrbNv6kQkeJIpt6NJZy8twLB/2vtz6yN9Z4vRKHN4/QZJIEbqohALSgwKdnksuY3k5Addp5lg8sVoVcQ==}\n\n  ee-first@1.1.1:\n    resolution: {integrity: sha512-WMwm9LhRUo+WUaRN+vRuETqG89IgZphVSNkdFgeb6sS/E4OrDIN7t48CAewSHXc6C8lefD8KKfr5vY61brQlow==}\n\n  encodeurl@2.0.0:\n    resolution: {integrity: sha512-Q0n9HRi4m6JuGIV1eFlmvJB7ZEVxu93IrMyiMsGC0lrMJMWzRgx6WGquyfQgZVb31vhGgXnfmPNNXmxnOkRBrg==}\n    engines: {node: '>= 0.8'}\n\n  engine.io-parser@5.2.3:\n    resolution: {integrity: sha512-HqD3yTBfnBxIrbnM1DoD6Pcq8NECnh8d4As1Qgh0z5Gg3jRRIqijury0CL3ghu/edArpUYiYqQiDUQBIs4np3Q==}\n    engines: {node: '>=10.0.0'}\n\n  engine.io@6.6.4:\n    resolution: {integrity: sha512-ZCkIjSYNDyGn0R6ewHDtXgns/Zre/NT6Agvq1/WobF7JXgFff4SeDroKiCO3fNJreU9YG429Sc81o4w5ok/W5g==}\n    engines: {node: '>=10.2.0'}\n\n  es-define-property@1.0.1:\n    resolution: {integrity: sha512-e3nRfgfUZ4rNGL232gUgX06QNyyez04KdjFrF+LTRoOXmrOgFKDg4BCdsjW8EnT69eqdYGmRpJwiPVYNrCaW3g==}\n    engines: {node: '>= 0.4'}\n\n  es-errors@1.3.0:\n    resolution: {integrity: sha512-Zf5H2Kxt2xjTvbJvP2ZWLEICxA6j+hAmMzIlypy4xcBg1vKVnx89Wy0GbS+kf5cwCVFFzdCFh2XSCFNULS6csw==}\n    engines: {node: '>= 0.4'}\n\n  es-object-atoms@1.1.1:\n    resolution: {integrity: sha512-FGgH2h8zKNim9ljj7dankFPcICIK9Cp5bm+c2gQSYePhpaG5+esrLODihIorn+Pe6FGJzWhXQotPv73jTaldXA==}\n    engines: {node: '>= 0.4'}\n\n  es-set-tostringtag@2.1.0:\n    resolution: {integrity: sha512-j6vWzfrGVfyXxge+O0x5sh6cvxAog0a/4Rdd2K36zCMV5eJ+/+tOAngRO8cODMNWbVRdVlmGZQL2YS3yR8bIUA==}\n    engines: {node: '>= 0.4'}\n\n  escape-html@1.0.3:\n    resolution: {integrity: sha512-NiSupZ4OeuGwr68lGIeym/ksIZMJodUGOSCZ/FSnTxcrekbvqrgdUxlJOMpijaKZVjAJrWrGs/6Jy8OMuyj9ow==}\n\n  etag@1.8.1:\n    resolution: {integrity: sha512-aIL5Fx7mawVa300al2BnEE4iNvo1qETxLrPI/o05L7z6go7fCw1J6EQmbK4FmJ2AS7kgVF/KEZWufBfdClMcPg==}\n    engines: {node: '>= 0.6'}\n\n  express@5.1.0:\n    resolution: {integrity: sha512-DT9ck5YIRU+8GYzzU5kT3eHGA5iL+1Zd0EutOmTE9Dtk+Tvuzd23VBU+ec7HPNSTxXYO55gPV/hq4pSBJDjFpA==}\n    engines: {node: '>= 18'}\n\n  fast-glob@3.3.3:\n    resolution: {integrity: sha512-7MptL8U0cqcFdzIzwOTHoilX9x5BrNqye7Z/LuC7kCMRio1EMSyqRK3BEAUD7sXRq4iT4AzTVuZdhgQ2TCvYLg==}\n    engines: {node: '>=8.6.0'}\n\n  fastq@1.19.1:\n    resolution: {integrity: sha512-GwLTyxkCXjXbxqIhTsMI2Nui8huMPtnxg7krajPJAjnEG/iiOS7i+zCtWGZR9G0NBKbXKh6X9m9UIsYX/N6vvQ==}\n\n  fill-range@7.1.1:\n    resolution: {integrity: sha512-YsGpe3WHLK8ZYi4tWDg2Jy3ebRz2rXowDxnld4bkQB00cc/1Zw9AWnC0i9ztDJitivtQvaI9KaLyKrc+hBW0yg==}\n    engines: {node: '>=8'}\n\n  finalhandler@2.1.0:\n    resolution: {integrity: sha512-/t88Ty3d5JWQbWYgaOGCCYfXRwV1+be02WqYYlL6h0lEiUAMPM8o8qKGO01YIkOHzka2up08wvgYD0mDiI+q3Q==}\n    engines: {node: '>= 0.8'}\n\n  follow-redirects@1.15.9:\n    resolution: {integrity: sha512-gew4GsXizNgdoRyqmyfMHyAmXsZDk6mHkSxZFCzW9gwlbtOW44CDtYavM+y+72qD/Vq2l550kMF52DT8fOLJqQ==}\n    engines: {node: '>=4.0'}\n    peerDependencies:\n      debug: '*'\n    peerDependenciesMeta:\n      debug:\n        optional: true\n\n  form-data@4.0.3:\n    resolution: {integrity: sha512-qsITQPfmvMOSAdeyZ+12I1c+CKSstAFAwu+97zrnWAbIr5u8wfsExUzCesVLC8NgHuRUqNN4Zy6UPWUTRGslcA==}\n    engines: {node: '>= 6'}\n\n  forwarded@0.2.0:\n    resolution: {integrity: sha512-buRG0fpBtRHSTCOASe6hD258tEubFoRLb4ZNA6NxMVHNw2gOcwHo9wyablzMzOA5z9xA9L1KNjk/Nt6MT9aYow==}\n    engines: {node: '>= 0.6'}\n\n  fresh@2.0.0:\n    resolution: {integrity: sha512-Rx/WycZ60HOaqLKAi6cHRKKI7zxWbJ31MhntmtwMoaTeF7XFH9hhBp8vITaMidfljRQ6eYWCKkaTK+ykVJHP2A==}\n    engines: {node: '>= 0.8'}\n\n  fsevents@2.3.3:\n    resolution: {integrity: sha512-5xoDfX+fL7faATnagmWPpbFtwh/R77WmMMqqHGS65C3vvB0YHrgF+B1YmZ3441tMj5n63k0212XNoJwzlhffQw==}\n    engines: {node: ^8.16.0 || ^10.6.0 || >=11.0.0}\n    os: [darwin]\n\n  function-bind@1.1.2:\n    resolution: {integrity: sha512-7XHNxH7qX9xG5mIwxkhumTox/MIRNcOgDrxWsMt2pAr23WHp6MrRlN7FBSFpCpr+oVO0F744iUgR82nJMfG2SA==}\n\n  get-intrinsic@1.3.0:\n    resolution: {integrity: sha512-9fSjSaos/fRIVIp+xSJlE6lfwhES7LNtKaCBIamHsjr2na1BiABJPo0mOjjz8GJDURarmCPGqaiVg5mfjb98CQ==}\n    engines: {node: '>= 0.4'}\n\n  get-proto@1.0.1:\n    resolution: {integrity: sha512-sTSfBjoXBp89JvIKIefqw7U2CCebsc74kiY6awiGogKtoSGbgjYE/G/+l9sF3MWFPNc9IcoOC4ODfKHfxFmp0g==}\n    engines: {node: '>= 0.4'}\n\n  get-tsconfig@4.10.1:\n    resolution: {integrity: sha512-auHyJ4AgMz7vgS8Hp3N6HXSmlMdUyhSUrfBF16w153rxtLIEOE+HGqaBppczZvnHLqQJfiHotCYpNhl0lUROFQ==}\n\n  glob-parent@5.1.2:\n    resolution: {integrity: sha512-AOIgSQCepiJYwP3ARnGx+5VnTu2HBYdzbGP45eLw1vr3zB3vZLeyed1sC9hnbcOc9/SrMyM5RPQrkGz4aS9Zow==}\n    engines: {node: '>= 6'}\n\n  globby@11.1.0:\n    resolution: {integrity: sha512-jhIXaOzy1sb8IyocaruWSn1TjmnBVs8Ayhcy83rmxNJ8q2uWKCAj3CnJY+KpGSXCueAPc0i05kVvVKtP1t9S3g==}\n    engines: {node: '>=10'}\n\n  gopd@1.2.0:\n    resolution: {integrity: sha512-ZUKRh6/kUFoAiTAtTYPZJ3hw9wNxx+BIBOijnlG9PnrJsCcSjs1wyyD6vJpaYtgnzDrKYRSqf3OO6Rfa93xsRg==}\n    engines: {node: '>= 0.4'}\n\n  has-flag@3.0.0:\n    resolution: {integrity: sha512-sKJf1+ceQBr4SMkvQnBDNDtf4TXpVhVGateu0t918bl30FnbE2m4vNLX+VWe/dpjlb+HugGYzW7uQXH98HPEYw==}\n    engines: {node: '>=4'}\n\n  has-symbols@1.1.0:\n    resolution: {integrity: sha512-1cDNdwJ2Jaohmb3sg4OmKaMBwuC48sYni5HUw2DvsC8LjGTLK9h+eb1X6RyuOHe4hT0ULCW68iomhjUoKUqlPQ==}\n    engines: {node: '>= 0.4'}\n\n  has-tostringtag@1.0.2:\n    resolution: {integrity: sha512-NqADB8VjPFLM2V0VvHUewwwsw0ZWBaIdgo+ieHtK3hasLz4qeCRjYcqfB6AQrBggRKppKF8L52/VqdVsO47Dlw==}\n    engines: {node: '>= 0.4'}\n\n  hasown@2.0.2:\n    resolution: {integrity: sha512-0hJU9SCPvmMzIBdZFqNPXWa6dqh7WdH0cII9y+CyS8rG3nL48Bclra9HmKhVVUHyPWNH5Y7xDwAB7bfgSjkUMQ==}\n    engines: {node: '>= 0.4'}\n\n  http-errors@2.0.0:\n    resolution: {integrity: sha512-FtwrG/euBzaEjYeRqOgly7G0qviiXoJWnvEH2Z1plBdXgbyjv34pHTSb9zoeHMyDy33+DWy5Wt9Wo+TURtOYSQ==}\n    engines: {node: '>= 0.8'}\n\n  iconv-lite@0.6.3:\n    resolution: {integrity: sha512-4fCk79wshMdzMp2rH06qWrJE4iolqLhCUH+OiuIgU++RB0+94NlDL81atO7GX55uUKueo0txHNtvEyI6D7WdMw==}\n    engines: {node: '>=0.10.0'}\n\n  ignore-by-default@1.0.1:\n    resolution: {integrity: sha512-Ius2VYcGNk7T90CppJqcIkS5ooHUZyIQK+ClZfMfMNFEF9VSE73Fq+906u/CWu92x4gzZMWOwfFYckPObzdEbA==}\n\n  ignore@5.3.2:\n    resolution: {integrity: sha512-hsBTNUqQTDwkWtcdYI2i06Y/nUBEsNEDJKjWdigLvegy8kDuJAS8uRlpkkcQpyEXL0Z/pjDy5HBmMjRCJ2gq+g==}\n    engines: {node: '>= 4'}\n\n  inherits@2.0.4:\n    resolution: {integrity: sha512-k/vGaX4/Yla3WzyMCvTQOXYeIHvqOKtnqBduzTHpzpQZzAskKMhZ2K+EnBiSM9zGSoIFeMpXKxa4dYeZIQqewQ==}\n\n  ioredis@5.6.1:\n    resolution: {integrity: sha512-UxC0Yv1Y4WRJiGQxQkP0hfdL0/5/6YvdfOOClRgJ0qppSarkhneSa6UvkMkms0AkdGimSH3Ikqm+6mkMmX7vGA==}\n    engines: {node: '>=12.22.0'}\n\n  ipaddr.js@1.9.1:\n    resolution: {integrity: sha512-0KI/607xoxSToH7GjN1FfSbLoU0+btTicjsQSWQlh/hZykN8KpmMf7uYwPW3R+akZ6R/w18ZlXSHBYXiYUPO3g==}\n    engines: {node: '>= 0.10'}\n\n  is-binary-path@2.1.0:\n    resolution: {integrity: sha512-ZMERYes6pDydyuGidse7OsHxtbI7WVeUEozgR/g7rd0xUimYNlvZRE/K2MgZTjWy725IfelLeVcEM97mmtRGXw==}\n    engines: {node: '>=8'}\n\n  is-extglob@2.1.1:\n    resolution: {integrity: sha512-SbKbANkN603Vi4jEZv49LeVJMn4yGwsbzZworEoyEiutsN3nJYdbO36zfhGJ6QEDpOZIFkDtnq5JRxmvl3jsoQ==}\n    engines: {node: '>=0.10.0'}\n\n  is-glob@4.0.3:\n    resolution: {integrity: sha512-xelSayHH36ZgE7ZWhli7pW34hNbNl8Ojv5KVmkJD4hBdD3th8Tfk9vYasLM+mXWOZhFkgZfxhLSnrwRr4elSSg==}\n    engines: {node: '>=0.10.0'}\n\n  is-number@7.0.0:\n    resolution: {integrity: sha512-41Cifkg6e8TylSpdtTpeLVMqvSBEVzTttHvERD741+pnZ8ANv0004MRL43QKPDlK9cGvNp6NZWZUBlbGXYxxng==}\n    engines: {node: '>=0.12.0'}\n\n  is-promise@4.0.0:\n    resolution: {integrity: sha512-hvpoI6korhJMnej285dSg6nu1+e6uxs7zG3BYAm5byqDsgJNWwxzM6z6iZiAgQR4TJ30JmBTOwqZUw3WlyH3AQ==}\n\n  jiti@2.4.2:\n    resolution: {integrity: sha512-rg9zJN+G4n2nfJl5MW3BMygZX56zKPNVEYYqq7adpmMh4Jn2QNEwhvQlFy6jPVdcod7txZtKHWnyZiA3a0zP7A==}\n    hasBin: true\n\n  joi@17.13.3:\n    resolution: {integrity: sha512-otDA4ldcIx+ZXsKHWmp0YizCweVRZG96J10b0FevjfuncLO1oX59THoAmHkNubYJ+9gWsYsp5k8v4ib6oDv1fA==}\n\n  json5@2.2.3:\n    resolution: {integrity: sha512-XmOWe7eyHYH14cLdVPoyg+GOH3rYX++KpzrylJwSW98t3Nk+U8XOl8FWKOgwtzdb8lXGf6zYwDUzeHMWfxasyg==}\n    engines: {node: '>=6'}\n    hasBin: true\n\n  jsonwebtoken@9.0.2:\n    resolution: {integrity: sha512-PRp66vJ865SSqOlgqS8hujT5U4AOgMfhrwYIuIhfKaoSCZcirrmASQr8CX7cUg+RMih+hgznrjp99o+W4pJLHQ==}\n    engines: {node: '>=12', npm: '>=6'}\n\n  jwa@1.4.2:\n    resolution: {integrity: sha512-eeH5JO+21J78qMvTIDdBXidBd6nG2kZjg5Ohz/1fpa28Z4CcsWUzJ1ZZyFq/3z3N17aZy+ZuBoHljASbL1WfOw==}\n\n  jws@3.2.2:\n    resolution: {integrity: sha512-YHlZCB6lMTllWDtSPHz/ZXTsi8S00usEV6v1tjq8tOUZzw7DpSDWVXjXDre6ed1w/pd495ODpHZYSdkRTsa0HA==}\n\n  lodash.defaults@4.2.0:\n    resolution: {integrity: sha512-qjxPLHd3r5DnsdGacqOMU6pb/avJzdh9tFX2ymgoZE27BmjXrNy/y4LoaiTeAb+O3gL8AfpJGtqfX/ae2leYYQ==}\n\n  lodash.includes@4.3.0:\n    resolution: {integrity: sha512-W3Bx6mdkRTGtlJISOvVD/lbqjTlPPUDTMnlXZFnVwi9NKJ6tiAk6LVdlhZMm17VZisqhKcgzpO5Wz91PCt5b0w==}\n\n  lodash.isarguments@3.1.0:\n    resolution: {integrity: sha512-chi4NHZlZqZD18a0imDHnZPrDeBbTtVN7GXMwuGdRH9qotxAjYs3aVLKc7zNOG9eddR5Ksd8rvFEBc9SsggPpg==}\n\n  lodash.isboolean@3.0.3:\n    resolution: {integrity: sha512-Bz5mupy2SVbPHURB98VAcw+aHh4vRV5IPNhILUCsOzRmsTmSQ17jIuqopAentWoehktxGd9e/hbIXq980/1QJg==}\n\n  lodash.isinteger@4.0.4:\n    resolution: {integrity: sha512-DBwtEWN2caHQ9/imiNeEA5ys1JoRtRfY3d7V9wkqtbycnAmTvRRmbHKDV4a0EYc678/dia0jrte4tjYwVBaZUA==}\n\n  lodash.isnumber@3.0.3:\n    resolution: {integrity: sha512-QYqzpfwO3/CWf3XP+Z+tkQsfaLL/EnUlXWVkIk5FUPc4sBdTehEqZONuyRt2P67PXAk+NXmTBcc97zw9t1FQrw==}\n\n  lodash.isplainobject@4.0.6:\n    resolution: {integrity: sha512-oSXzaWypCMHkPC3NvBEaPHf0KsA5mvPrOPgQWDsbg8n7orZ290M0BmC/jgRZ4vcJ6DTAhjrsSYgdsW/F+MFOBA==}\n\n  lodash.isstring@4.0.1:\n    resolution: {integrity: sha512-0wJxfxH1wgO3GrbuP+dTTk7op+6L41QCXbGINEmD+ny/G/eCqGzxyCsh7159S+mgDDcoarnBw6PC1PS5+wUGgw==}\n\n  lodash.once@4.1.1:\n    resolution: {integrity: sha512-Sb487aTOCr9drQVL8pIxOzVhafOjZN9UU54hiN8PU3uAiSV7lx1yYNpbNmex2PK6dSJoNTSJUUswT651yww3Mg==}\n\n  make-error@1.3.6:\n    resolution: {integrity: sha512-s8UhlNe7vPKomQhC1qFelMokr/Sc3AgNbso3n74mVPA5LTZwkB9NlXf4XPamLxJE8h0gh73rM94xvwRT2CVInw==}\n\n  math-intrinsics@1.1.0:\n    resolution: {integrity: sha512-/IXtbwEk5HTPyEwyKX6hGkYXxM9nbj64B+ilVJnC/R6B0pH5G4V3b0pVbL7DBj4tkhBAppbQUlf6F6Xl9LHu1g==}\n    engines: {node: '>= 0.4'}\n\n  media-typer@1.1.0:\n    resolution: {integrity: sha512-aisnrDP4GNe06UcKFnV5bfMNPBUw4jsLGaWwWfnH3v02GnBuXX2MCVn5RbrWo0j3pczUilYblq7fQ7Nw2t5XKw==}\n    engines: {node: '>= 0.8'}\n\n  merge-descriptors@2.0.0:\n    resolution: {integrity: sha512-Snk314V5ayFLhp3fkUREub6WtjBfPdCPY1Ln8/8munuLuiYhsABgBVWsozAG+MWMbVEvcdcpbi9R7ww22l9Q3g==}\n    engines: {node: '>=18'}\n\n  merge2@1.4.1:\n    resolution: {integrity: sha512-8q7VEgMJW4J8tcfVPy8g09NcQwZdbwFEqhe/WZkoIzjn/3TGDwtOCYtXGxA3O8tPzpczCCDgv+P2P5y00ZJOOg==}\n    engines: {node: '>= 8'}\n\n  micromatch@4.0.8:\n    resolution: {integrity: sha512-PXwfBhYu0hBCPw8Dn0E+WDYb7af3dSLVWKi3HGv84IdF4TyFoC0ysxFd0Goxw7nSv4T/PzEJQxsYsEiFCKo2BA==}\n    engines: {node: '>=8.6'}\n\n  mime-db@1.52.0:\n    resolution: {integrity: sha512-sPU4uV7dYlvtWJxwwxHD0PuihVNiE7TyAbQ5SWxDCB9mUYvOgroQOwYQQOKPJ8CIbE+1ETVlOoK1UC2nU3gYvg==}\n    engines: {node: '>= 0.6'}\n\n  mime-db@1.54.0:\n    resolution: {integrity: sha512-aU5EJuIN2WDemCcAp2vFBfp/m4EAhWJnUNSSw0ixs7/kXbd6Pg64EmwJkNdFhB8aWt1sH2CTXrLxo/iAGV3oPQ==}\n    engines: {node: '>= 0.6'}\n\n  mime-types@2.1.35:\n    resolution: {integrity: sha512-ZDY+bPm5zTTF+YpCrAU9nK0UgICYPT0QtT1NZWFv4s++TNkcgVaT0g6+4R2uI4MjQjzysHB1zxuWL50hzaeXiw==}\n    engines: {node: '>= 0.6'}\n\n  mime-types@3.0.1:\n    resolution: {integrity: sha512-xRc4oEhT6eaBpU1XF7AjpOFD+xQmXNB5OVKwp4tqCuBpHLS/ZbBDrc07mYTDqVMg6PfxUjjNp85O6Cd2Z/5HWA==}\n    engines: {node: '>= 0.6'}\n\n  minimatch@3.1.2:\n    resolution: {integrity: sha512-J7p63hRiAjw1NDEww1W7i37+ByIrOWO5XQQAzZ3VOcL0PNybwpfmV/N05zFAzwQ9USyEcX6t3UO+K5aqBQOIHw==}\n\n  minimist@1.2.8:\n    resolution: {integrity: sha512-2yyAR8qBkN3YuheJanUpWC5U3bb5osDywNB8RzDVlDwDHbocAJveqqj1u8+SVD7jkWT4yvsHCpWqqWqAxb0zCA==}\n\n  ms@2.1.3:\n    resolution: {integrity: sha512-6FlzubTLZG3J2a/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq/s5xXI6/XXP6tz7R9xAOtHnSO/tXtF3WRTlA==}\n\n  mylas@2.1.13:\n    resolution: {integrity: sha512-+MrqnJRtxdF+xngFfUUkIMQrUUL0KsxbADUkn23Z/4ibGg192Q+z+CQyiYwvWTsYjJygmMR8+w3ZDa98Zh6ESg==}\n    engines: {node: '>=12.0.0'}\n\n  negotiator@0.6.3:\n    resolution: {integrity: sha512-+EUsqGPLsM+j/zdChZjsnX51g4XrHFOIXwfnCVPGlQk/k5giakcKsuxCObBRu6DSm9opw/O6slWbJdghQM4bBg==}\n    engines: {node: '>= 0.6'}\n\n  negotiator@1.0.0:\n    resolution: {integrity: sha512-8Ofs/AUQh8MaEcrlq5xOX0CQ9ypTF5dl78mjlMNfOK08fzpgTHQRQPBxcPlEtIw0yRpws+Zo/3r+5WRby7u3Gg==}\n    engines: {node: '>= 0.6'}\n\n  node-addon-api@8.4.0:\n    resolution: {integrity: sha512-D9DI/gXHvVmjHS08SVch0Em8G5S1P+QWtU31appcKT/8wFSPRcdHadIFSAntdMMVM5zz+/DL+bL/gz3UDppqtg==}\n    engines: {node: ^18 || ^20 || >= 21}\n\n  node-gyp-build@4.8.4:\n    resolution: {integrity: sha512-LA4ZjwlnUblHVgq0oBF3Jl/6h/Nvs5fzBLwdEF4nuxnFdsfajde4WfxtJr3CaiH+F6ewcIB/q4jQ4UzPyid+CQ==}\n    hasBin: true\n\n  nodemon@3.1.10:\n    resolution: {integrity: sha512-WDjw3pJ0/0jMFmyNDp3gvY2YizjLmmOUQo6DEBY+JgdvW/yQ9mEeSw6H5ythl5Ny2ytb7f9C2nIbjSxMNzbJXw==}\n    engines: {node: '>=10'}\n    hasBin: true\n\n  normalize-path@3.0.0:\n    resolution: {integrity: sha512-6eZs5Ls3WtCisHWp9S2GUy8dqkpGi4BVSz3GaqiE6ezub0512ESztXUwUB6C6IKbQkY2Pnb/mD4WYojCRwcwLA==}\n    engines: {node: '>=0.10.0'}\n\n  object-assign@4.1.1:\n    resolution: {integrity: sha512-rJgTQnkUnH1sFw8yT6VSU3zD3sWmu6sZhIseY8VX+GRu3P6F7Fu+JNDoXfklElbLJSnc3FUQHVe4cU5hj+BcUg==}\n    engines: {node: '>=0.10.0'}\n\n  object-inspect@1.13.4:\n    resolution: {integrity: sha512-W67iLl4J2EXEGTbfeHCffrjDfitvLANg0UlX3wFUUSTx92KXRFegMHUVgSqE+wvhAbi4WqjGg9czysTV2Epbew==}\n    engines: {node: '>= 0.4'}\n\n  on-finished@2.4.1:\n    resolution: {integrity: sha512-oVlzkg3ENAhCk2zdv7IJwd/QUD4z2RxRwpkcGY8psCVcCYZNq4wYnVWALHM+brtuJjePWiYF/ClmuDr8Ch5+kg==}\n    engines: {node: '>= 0.8'}\n\n  once@1.4.0:\n    resolution: {integrity: sha512-lNaJgI+2Q5URQBkccEKHTQOPaXdUxnZZElQTZY0MFUAuaEqe1E+Nyvgdz/aIyNi6Z9MzO5dv1H8n58/GELp3+w==}\n\n  parseurl@1.3.3:\n    resolution: {integrity: sha512-CiyeOxFT/JZyN5m0z9PfXw4SCBJ6Sygz1Dpl0wqjlhDEGGBP1GnsUVEL0p63hoG1fcj3fHynXi9NYO4nWOL+qQ==}\n    engines: {node: '>= 0.8'}\n\n  path-to-regexp@8.2.0:\n    resolution: {integrity: sha512-TdrF7fW9Rphjq4RjrW0Kp2AW0Ahwu9sRGTkS6bvDi0SCwZlEZYmcfDbEsTz8RVk0EHIS/Vd1bv3JhG+1xZuAyQ==}\n    engines: {node: '>=16'}\n\n  path-type@4.0.0:\n    resolution: {integrity: sha512-gDKb8aZMDeD/tZWs9P6+q0J9Mwkdl6xMV8TjnGP3qJVJ06bdMgkbBlLU8IdfOsIsFz2BW1rNVT3XuNEl8zPAvw==}\n    engines: {node: '>=8'}\n\n  picomatch@2.3.1:\n    resolution: {integrity: sha512-JU3teHTNjmE2VCGFzuY8EXzCDVwEqB2a8fsIvwaStHhAWJEeVd1o1QD80CU6+ZdEXXSLbSsuLwJjkCBWqRQUVA==}\n    engines: {node: '>=8.6'}\n\n  plimit-lit@1.6.1:\n    resolution: {integrity: sha512-B7+VDyb8Tl6oMJT9oSO2CW8XC/T4UcJGrwOVoNGwOQsQYhlpfajmrMj5xeejqaASq3V/EqThyOeATEOMuSEXiA==}\n    engines: {node: '>=12'}\n\n  prettier@3.6.2:\n    resolution: {integrity: sha512-I7AIg5boAr5R0FFtJ6rCfD+LFsWHp81dolrFD8S79U9tb8Az2nGrJncnMSnys+bpQJfRUzqs9hnA81OAA3hCuQ==}\n    engines: {node: '>=14'}\n    hasBin: true\n\n  prisma@6.11.1:\n    resolution: {integrity: sha512-VzJToRlV0s9Vu2bfqHiRJw73hZNCG/AyJeX+kopbu4GATTjTUdEWUteO3p4BLYoHpMS4o8pD3v6tF44BHNZI1w==}\n    engines: {node: '>=18.18'}\n    hasBin: true\n    peerDependencies:\n      typescript: '>=5.1.0'\n    peerDependenciesMeta:\n      typescript:\n        optional: true\n\n  proxy-addr@2.0.7:\n    resolution: {integrity: sha512-llQsMLSUDUPT44jdrU/O37qlnifitDP+ZwrmmZcoSKyLKvtZxpyV0n2/bD/N4tBAAZ/gJEdZU7KMraoK1+XYAg==}\n    engines: {node: '>= 0.10'}\n\n  proxy-from-env@1.1.0:\n    resolution: {integrity: sha512-D+zkORCbA9f1tdWRK0RaCR3GPv50cMxcrz4X8k5LTSUD1Dkw47mKJEZQNunItRTkWwgtaUSo1RVFRIG9ZXiFYg==}\n\n  pstree.remy@1.1.8:\n    resolution: {integrity: sha512-77DZwxQmxKnu3aR542U+X8FypNzbfJ+C5XQDk3uWjWxn6151aIMGthWYRXTqT1E5oJvg+ljaa2OJi+VfvCOQ8w==}\n\n  qs@6.14.0:\n    resolution: {integrity: sha512-YWWTjgABSKcvs/nWBi9PycY/JiPJqOD4JA6o9Sej2AtvSGarXxKC3OQSk4pAarbdQlKAh5D4FCQkJNkW+GAn3w==}\n    engines: {node: '>=0.6'}\n\n  queue-lit@1.5.2:\n    resolution: {integrity: sha512-tLc36IOPeMAubu8BkW8YDBV+WyIgKlYU7zUNs0J5Vk9skSZ4JfGlPOqplP0aHdfv7HL0B2Pg6nwiq60Qc6M2Hw==}\n    engines: {node: '>=12'}\n\n  queue-microtask@1.2.3:\n    resolution: {integrity: sha512-NuaNSa6flKT5JaSYQzJok04JzTL1CA6aGhv5rfLW3PgqA+M2ChpZQnAC8h8i4ZFkBS8X5RqkDBHA7r4hej3K9A==}\n\n  range-parser@1.2.1:\n    resolution: {integrity: sha512-Hrgsx+orqoygnmhFbKaHE6c296J+HTAQXoxEF6gNupROmmGJRoyzfG3ccAveqCBrwr/2yxQ5BVd/GTl5agOwSg==}\n    engines: {node: '>= 0.6'}\n\n  raw-body@3.0.0:\n    resolution: {integrity: sha512-RmkhL8CAyCRPXCE28MMH0z2PNWQBNk2Q09ZdxM9IOOXwxwZbN+qbWaatPkdkWIKL2ZVDImrN/pK5HTRz2PcS4g==}\n    engines: {node: '>= 0.8'}\n\n  readdirp@3.6.0:\n    resolution: {integrity: sha512-hOS089on8RduqdbhvQ5Z37A0ESjsqz6qnRcffsMU3495FuTdqSm+7bhJ29JvIOsBDEEnan5DPu9t3To9VRlMzA==}\n    engines: {node: '>=8.10.0'}\n\n  redis-errors@1.2.0:\n    resolution: {integrity: sha512-1qny3OExCf0UvUV/5wpYKf2YwPcOqXzkwKKSmKHiE6ZMQs5heeE/c8eXK+PNllPvmjgAbfnsbpkGZWy8cBpn9w==}\n    engines: {node: '>=4'}\n\n  redis-parser@3.0.0:\n    resolution: {integrity: sha512-DJnGAeenTdpMEH6uAJRK/uiyEIH9WVsUmoLwzudwGJUwZPp80PDBWPHXSAGNPwNvIXAbe7MSUB1zQFugFml66A==}\n    engines: {node: '>=4'}\n\n  resolve-pkg-maps@1.0.0:\n    resolution: {integrity: sha512-seS2Tj26TBVOC2NIc2rOe2y2ZO7efxITtLZcGSOnHHNOQ7CkiUBfw0Iw2ck6xkIhPwLhKNLS8BO+hEpngQlqzw==}\n\n  reusify@1.1.0:\n    resolution: {integrity: sha512-g6QUff04oZpHs0eG5p83rFLhHeV00ug/Yf9nZM6fLeUrPguBTkTQOdpAWWspMh55TZfVQDPaN3NQJfbVRAxdIw==}\n    engines: {iojs: '>=1.0.0', node: '>=0.10.0'}\n\n  router@2.2.0:\n    resolution: {integrity: sha512-nLTrUKm2UyiL7rlhapu/Zl45FwNgkZGaCpZbIHajDYgwlJCOzLSk+cIPAnsEqV955GjILJnKbdQC1nVPz+gAYQ==}\n    engines: {node: '>= 18'}\n\n  run-parallel@1.2.0:\n    resolution: {integrity: sha512-5l4VyZR86LZ/lDxZTR6jqL8AFE2S0IFLMP26AbjsLVADxHdhB/c0GUsH+y39UfCi3dzz8OlQuPmnaJOMoDHQBA==}\n\n  safe-buffer@5.2.1:\n    resolution: {integrity: sha512-rp3So07KcdmmKbGvgaNxQSJr7bGVSVk5S9Eq1F+ppbRo70+YeaDxkw5Dd8NPN+GD6bjnYm2VuPuCXmpuYvmCXQ==}\n\n  safer-buffer@2.1.2:\n    resolution: {integrity: sha512-YZo3K82SD7Riyi0E1EQPojLz7kpepnSQI9IyPbHHg1XXXevb5dJI7tpyN2ADxGcQbHG7vcyRHk0cbwqcQriUtg==}\n\n  semver@7.7.2:\n    resolution: {integrity: sha512-RF0Fw+rO5AMf9MAyaRXI4AV0Ulj5lMHqVxxdSgiVbixSCXoEmmX/jk0CuJw4+3SqroYO9VoUh+HcuJivvtJemA==}\n    engines: {node: '>=10'}\n    hasBin: true\n\n  send@1.2.0:\n    resolution: {integrity: sha512-uaW0WwXKpL9blXE2o0bRhoL2EGXIrZxQ2ZQ4mgcfoBxdFmQold+qWsD2jLrfZ0trjKL6vOw0j//eAwcALFjKSw==}\n    engines: {node: '>= 18'}\n\n  serve-static@2.2.0:\n    resolution: {integrity: sha512-61g9pCh0Vnh7IutZjtLGGpTA355+OPn2TyDv/6ivP2h/AdAVX9azsoxmg2/M6nZeQZNYBEwIcsne1mJd9oQItQ==}\n    engines: {node: '>= 18'}\n\n  setprototypeof@1.2.0:\n    resolution: {integrity: sha512-E5LDX7Wrp85Kil5bhZv46j8jOeboKq5JMmYM3gVGdGH8xFpPWXUMsNrlODCrkoxMEeNi/XZIwuRvY4XNwYMJpw==}\n\n  side-channel-list@1.0.0:\n    resolution: {integrity: sha512-FCLHtRD/gnpCiCHEiJLOwdmFP+wzCmDEkc9y7NsYxeF4u7Btsn1ZuwgwJGxImImHicJArLP4R0yX4c2KCrMrTA==}\n    engines: {node: '>= 0.4'}\n\n  side-channel-map@1.0.1:\n    resolution: {integrity: sha512-VCjCNfgMsby3tTdo02nbjtM/ewra6jPHmpThenkTYh8pG9ucZ/1P8So4u4FGBek/BjpOVsDCMoLA/iuBKIFXRA==}\n    engines: {node: '>= 0.4'}\n\n  side-channel-weakmap@1.0.2:\n    resolution: {integrity: sha512-WPS/HvHQTYnHisLo9McqBHOJk2FkHO/tlpvldyrnem4aeQp4hai3gythswg6p01oSoTl58rcpiFAjF2br2Ak2A==}\n    engines: {node: '>= 0.4'}\n\n  side-channel@1.1.0:\n    resolution: {integrity: sha512-ZX99e6tRweoUXqR+VBrslhda51Nh5MTQwou5tnUDgbtyM0dBgmhEDtWGP/xbKn6hqfPRHujUNwz5fy/wbbhnpw==}\n    engines: {node: '>= 0.4'}\n\n  simple-update-notifier@2.0.0:\n    resolution: {integrity: sha512-a2B9Y0KlNXl9u/vsW6sTIu9vGEpfKu2wRV6l1H3XEas/0gUIzGzBoP/IouTcUQbm9JWZLH3COxyn03TYlFax6w==}\n    engines: {node: '>=10'}\n\n  slash@3.0.0:\n    resolution: {integrity: sha512-g9Q1haeby36OSStwb4ntCGGGaKsaVSjQ68fBxoQcutl5fS1vuY18H3wSt3jFyFtrkx+Kz0V1G85A4MyAdDMi2Q==}\n    engines: {node: '>=8'}\n\n  socket.io-adapter@2.5.5:\n    resolution: {integrity: sha512-eLDQas5dzPgOWCk9GuuJC2lBqItuhKI4uxGgo9aIV7MYbk2h9Q6uULEh8WBzThoI7l+qU9Ast9fVUmkqPP9wYg==}\n\n  socket.io-parser@4.2.4:\n    resolution: {integrity: sha512-/GbIKmo8ioc+NIWIhwdecY0ge+qVBSMdgxGygevmdHj24bsfgtCmcUUcQ5ZzcylGFHsN3k4HB4Cgkl96KVnuew==}\n    engines: {node: '>=10.0.0'}\n\n  socket.io@4.8.1:\n    resolution: {integrity: sha512-oZ7iUCxph8WYRHHcjBEc9unw3adt5CmSNlppj/5Q4k2RIrhl8Z5yY2Xr4j9zj0+wzVZ0bxmYoGSzKJnRl6A4yg==}\n    engines: {node: '>=10.2.0'}\n\n  standard-as-callback@2.1.0:\n    resolution: {integrity: sha512-qoRRSyROncaz1z0mvYqIE4lCd9p2R90i6GxW3uZv5ucSu8tU7B5HXUP1gG8pVZsYNVaXjk8ClXHPttLyxAL48A==}\n\n  statuses@2.0.1:\n    resolution: {integrity: sha512-RwNA9Z/7PrK06rYLIzFMlaF+l73iwpzsqRIFgbMLbTcLD6cOao82TaWefPXQvB2fOC4AjuYSEndS7N/mTCbkdQ==}\n    engines: {node: '>= 0.8'}\n\n  statuses@2.0.2:\n    resolution: {integrity: sha512-DvEy55V3DB7uknRo+4iOGT5fP1slR8wQohVdknigZPMpMstaKJQWhwiYBACJE3Ul2pTnATihhBYnRhZQHGBiRw==}\n    engines: {node: '>= 0.8'}\n\n  strip-bom@3.0.0:\n    resolution: {integrity: sha512-vavAMRXOgBVNF6nyEEmL3DBK19iRpDcoIwW+swQ+CbGiu7lju6t+JklA1MHweoWtadgt4ISVUsXLyDq34ddcwA==}\n    engines: {node: '>=4'}\n\n  supports-color@5.5.0:\n    resolution: {integrity: sha512-QjVjwdXIt408MIiAqCX4oUKsgU2EqAGzs2Ppkm4aQYbjm+ZEWEcW4SfFNTr4uMNZma0ey4f5lgLrkB0aX0QMow==}\n    engines: {node: '>=4'}\n\n  to-regex-range@5.0.1:\n    resolution: {integrity: sha512-65P7iz6X5yEr1cwcgvQxbbIw7Uk3gOy5dIdtZ4rDveLqhrdJP+Li/Hx6tyK0NEb+2GCyneCMJiGqrADCSNk8sQ==}\n    engines: {node: '>=8.0'}\n\n  toidentifier@1.0.1:\n    resolution: {integrity: sha512-o5sSPKEkg/DIQNmH43V0/uerLrpzVedkUh8tGNvaeXpfpuwjKenlSox/2O/BTlZUtEe+JG7s5YhEz608PlAHRA==}\n    engines: {node: '>=0.6'}\n\n  touch@3.1.1:\n    resolution: {integrity: sha512-r0eojU4bI8MnHr8c5bNo7lJDdI2qXlWWJk6a9EAFG7vbhTjElYhBVS3/miuE0uOuoLdb8Mc/rVfsmm6eo5o9GA==}\n    hasBin: true\n\n  ts-node@10.9.2:\n    resolution: {integrity: sha512-f0FFpIdcHgn8zcPSbf1dRevwt047YMnaiJM3u2w2RewrB+fob/zePZcrOyQoLMMO7aBIddLcQIEK5dYjkLnGrQ==}\n    hasBin: true\n    peerDependencies:\n      '@swc/core': '>=1.2.50'\n      '@swc/wasm': '>=1.2.50'\n      '@types/node': '*'\n      typescript: '>=2.7'\n    peerDependenciesMeta:\n      '@swc/core':\n        optional: true\n      '@swc/wasm':\n        optional: true\n\n  tsc-alias@1.8.16:\n    resolution: {integrity: sha512-QjCyu55NFyRSBAl6+MTFwplpFcnm2Pq01rR/uxfqJoLMm6X3O14KEGtaSDZpJYaE1bJBGDjD0eSuiIWPe2T58g==}\n    engines: {node: '>=16.20.2'}\n    hasBin: true\n\n  tsc-node@0.0.3:\n    resolution: {integrity: sha512-cCfkuHFGRUS5afZhabC9a8KEY1KD2X85KmXUu20HUUFXzJMHGfUvc6t++sy9p02dAscZsNfxKcUVbFLhTltTcA==}\n\n  tsconfig-paths@4.2.0:\n    resolution: {integrity: sha512-NoZ4roiN7LnbKn9QqE1amc9DJfzvZXxF4xDavcOWt1BPkdx+m+0gJuPM+S0vCe7zTJMYUP0R8pO2XMr+Y8oLIg==}\n    engines: {node: '>=6'}\n\n  type-is@2.0.1:\n    resolution: {integrity: sha512-OZs6gsjF4vMp32qrCbiVSkrFmXtG/AZhY3t0iAMrMBiAZyV9oALtXO8hsrHbMXF9x6L3grlFuwW2oAz7cav+Gw==}\n    engines: {node: '>= 0.6'}\n\n  typescript@2.9.2:\n    resolution: {integrity: sha512-Gr4p6nFNaoufRIY4NMdpQRNmgxVIGMs4Fcu/ujdYk3nAZqk7supzBE9idmvfZIlH/Cuj//dvi+019qEue9lV0w==}\n    engines: {node: '>=4.2.0'}\n    hasBin: true\n\n  typescript@5.8.3:\n    resolution: {integrity: sha512-p1diW6TqL9L07nNxvRMM7hMMw4c5XOo/1ibL4aAIGmSAt9slTE1Xgw5KWuof2uTOvCg9BY7ZRi+GaF+7sfgPeQ==}\n    engines: {node: '>=14.17'}\n    hasBin: true\n\n  undefsafe@2.0.5:\n    resolution: {integrity: sha512-WxONCrssBM8TSPRqN5EmsjVrsv4A8X12J4ArBiiayv3DyyG3ZlIg6yysuuSYdZsVz3TKcTg2fd//Ujd4CHV1iA==}\n\n  undici-types@7.8.0:\n    resolution: {integrity: sha512-9UJ2xGDvQ43tYyVMpuHlsgApydB8ZKfVYTsLDhXkFL/6gfkp+U8xTGdh8pMJv1SpZna0zxG1DwsKZsreLbXBxw==}\n\n  unpipe@1.0.0:\n    resolution: {integrity: sha512-pjy2bYhSsufwWlKwPc+l3cN7+wuJlK6uz0YdJEOlQDbl6jo/YlPi4mb8agUkVC8BF7V8NuzeyPNqRksA3hztKQ==}\n    engines: {node: '>= 0.8'}\n\n  v8-compile-cache-lib@3.0.1:\n    resolution: {integrity: sha512-wa7YjyUGfNZngI/vtK0UHAN+lgDCxBPCylVXGp0zu59Fz5aiGtNXaq3DhIov063MorB+VfufLh3JlF2KdTK3xg==}\n\n  vary@1.1.2:\n    resolution: {integrity: sha512-BNGbWLfd0eUPabhkXUVm0j8uuvREyTh5ovRa/dyow/BqAbZJyC+5fU+IzQOzmAKzYqYRAISoRhdQr3eIZ/PXqg==}\n    engines: {node: '>= 0.8'}\n\n  wrappy@1.0.2:\n    resolution: {integrity: sha512-l4Sp/DRseor9wL6EvV2+TuQn63dMkPjZ/sp9XkghTEbV9KlPS"
      }
    },
    {
      "file_path": "job-manager/src/api/v1/controller/job.controller.ts",
      "relative_path": "job-manager/src/api/v1/controller/job.controller.ts",
      "language": "typescript",
      "imports": [
        "@src/types",
        "@src/config/db",
        "express",
        "@src/middleware/error-response",
        "axios"
      ],
      "exports": [],
      "classes": [],
      "functions": [],
      "variables": [
        "createJob",
        "getJobs",
        "getJobById"
      ],
      "description": "**Purpose:**\nThis file contains an API endpoint controller for job management. It handles HTTP requests for creating, fetching, and retrieving jobs.\n\n**Components:**\n\n*   **createJob function:** This function handles the creation of a new job. It accepts a request object with a `command`, `timeout`, `priority`, `params`, and `isKillable` properties. It creates a new job in the database using the `client.job.create` method and returns a JSON response with the created job data.\n*   **getJobs function:** This function fetches a list of jobs for the current user. It uses the `client.job.findMany` method to retrieve the jobs and returns a JSON response with the fetched jobs.\n*   **",
      "lines_of_code": 94,
      "metadata": {
        "size_bytes": 2057,
        "last_modified": "2025-10-07T19:50:38.743Z"
      },
      "analysis_enhanced": {
        "complexity_score": 3,
        "detected_issues": [
          {
            "type": "maintainability",
            "severity": "low",
            "description": "Console.log statements should be removed from production code",
            "category": "debug-code"
          }
        ],
        "semantic_tags": [
          "typescript",
          "api",
          "express",
          "http-client",
          "background-jobs"
        ],
        "needs_ai_summary": true,
        "priority": "medium",
        "summary_type": "ai-generated",
        "code_snippet": "import { CustomRequest } from \"@src/types\";\nimport client from \"@src/config/db\";\nimport { NextFunction, Response } from \"express\";\nimport ErrorResponse from \"@src/middleware/error-response\";\nimport axios from \"axios\";\n\nexport const createJob = async (\n  req: CustomRequest,\n  res: Response,\n  next: NextFunction,\n) => {\n  try {\n    const { command, timeout, priority, params, isKillable } = req.value;\n    const job = await client.job.create({\n      data: {\n        command: command as string,\n        userId: req.userId,\n        timeout,\n        priority,\n        params,\n        isKillable,\n      },\n    });\n\n    if (process.env.NODE_ENV === \"production\") {\n      axios\n        .get(`${process.env.JOB_WORKER_URL}/wake-up`)\n        .then((res) => {\n          console.log(\"wake-up\", res.data);\n        })\n        .catch((err) => {\n          console.log(\"error\", err);\n        });\n    }\n\n    res.status(201).json({\n      success: true,\n      message: \"Job created successfully\",\n      data: job,\n    });\n  } catch (error) {\n    next(new ErrorResponse(`Internal server error : ${error}`, 500));\n  }\n};\n\nexport const getJobs = async (\n  req: CustomRequest,\n  res: Response,\n  next: NextFunction,\n) => {\n  try {\n    const jobs = await client.job.findMany({\n      where: {\n        userId: req.userId,\n      },\n      orderBy: {\n        createdAt: \"desc\",\n      },\n    });\n\n    res.status(200).json({\n      success: true,\n      message: \"Jobs fetched successfully\",\n      data: jobs,\n    });\n  } catch (error) {\n    next(new ErrorResponse(`Internal server error : ${error}`, 500));\n  }\n};\n\nexport const getJobById = async (\n  req: CustomRequest,\n  res: Response,\n  next: NextFunction,\n) => {\n  try {\n    const { id } = req.params;\n    const job = await client.job.findUnique({\n      where: {\n        id,\n        userId: req.userId,\n      },\n    });\n\n    res.status(200).json({\n      success: true,\n      message: \"Job fetched successfully\",\n      data: job,\n    });\n  } catch (error) {\n    next(new ErrorRe",
        "full_content": "import { CustomRequest } from \"@src/types\";\nimport client from \"@src/config/db\";\nimport { NextFunction, Response } from \"express\";\nimport ErrorResponse from \"@src/middleware/error-response\";\nimport axios from \"axios\";\n\nexport const createJob = async (\n  req: CustomRequest,\n  res: Response,\n  next: NextFunction,\n) => {\n  try {\n    const { command, timeout, priority, params, isKillable } = req.value;\n    const job = await client.job.create({\n      data: {\n        command: command as string,\n        userId: req.userId,\n        timeout,\n        priority,\n        params,\n        isKillable,\n      },\n    });\n\n    if (process.env.NODE_ENV === \"production\") {\n      axios\n        .get(`${process.env.JOB_WORKER_URL}/wake-up`)\n        .then((res) => {\n          console.log(\"wake-up\", res.data);\n        })\n        .catch((err) => {\n          console.log(\"error\", err);\n        });\n    }\n\n    res.status(201).json({\n      success: true,\n      message: \"Job created successfully\",\n      data: job,\n    });\n  } catch (error) {\n    next(new ErrorResponse(`Internal server error : ${error}`, 500));\n  }\n};\n\nexport const getJobs = async (\n  req: CustomRequest,\n  res: Response,\n  next: NextFunction,\n) => {\n  try {\n    const jobs = await client.job.findMany({\n      where: {\n        userId: req.userId,\n      },\n      orderBy: {\n        createdAt: \"desc\",\n      },\n    });\n\n    res.status(200).json({\n      success: true,\n      message: \"Jobs fetched successfully\",\n      data: jobs,\n    });\n  } catch (error) {\n    next(new ErrorResponse(`Internal server error : ${error}`, 500));\n  }\n};\n\nexport const getJobById = async (\n  req: CustomRequest,\n  res: Response,\n  next: NextFunction,\n) => {\n  try {\n    const { id } = req.params;\n    const job = await client.job.findUnique({\n      where: {\n        id,\n        userId: req.userId,\n      },\n    });\n\n    res.status(200).json({\n      success: true,\n      message: \"Job fetched successfully\",\n      data: job,\n    });\n  } catch (error) {\n    next(new ErrorResponse(`Internal server error : ${error}`, 500));\n  }\n};\n"
      }
    },
    {
      "file_path": "job-manager/src/api/v1/controller/user.controller.ts",
      "relative_path": "job-manager/src/api/v1/controller/user.controller.ts",
      "language": "typescript",
      "imports": [
        "@src/config/db",
        "express",
        "@src/types",
        "@src/middleware/error-response",
        "bcrypt",
        "@src/utils/constants",
        "jsonwebtoken"
      ],
      "exports": [],
      "classes": [],
      "functions": [],
      "variables": [
        "createUser",
        "userLogin",
        "getUser"
      ],
      "description": "**Technical Description**\n\n### Purpose\nThis file (`user.controller.ts`) is an API endpoint controller responsible for handling user-related HTTP requests. It exports three functions: `createUser`, `userLogin`, and `getUser`, which interact with the database using Prisma to perform CRUD operations.\n\n### Components\n- **Functions:**\n  - `createUser`: Creates a new user in the database.\n  - `userLogin`: Authenticates a user and returns a JSON Web Token (JWT) upon successful login.\n  - `getUser`: Retrieves a list of all users in the database.\n\n### Dependencies\n- **External Modules:**\n  - `@src/config/db`: Prisma database configuration.\n  - `express`: Express.js framework for building the",
      "lines_of_code": 88,
      "metadata": {
        "size_bytes": 2341,
        "last_modified": "2025-10-07T19:50:38.743Z"
      },
      "analysis_enhanced": {
        "complexity_score": 4,
        "detected_issues": [],
        "semantic_tags": [
          "typescript",
          "api",
          "express",
          "encryption"
        ],
        "needs_ai_summary": true,
        "priority": "medium",
        "summary_type": "ai-generated",
        "code_snippet": "import prisma from \"@src/config/db\";\nimport { NextFunction, Response } from \"express\";\nimport { CustomRequest } from \"@src/types\";\nimport ErrorResponse from \"@src/middleware/error-response\";\nimport bcrypt from \"bcrypt\";\nimport { constants as C } from \"@src/utils/constants\";\nimport jwt from \"jsonwebtoken\";\nexport const createUser = async (\n  req: CustomRequest,\n  res: Response,\n  next: NextFunction,\n) => {\n  try {\n    const { name, email, password } = req.value;\n    const hashedPassword = await bcrypt.hash(password, C.SALT);\n    const user = await prisma.user.create({\n      data: {\n        name,\n        email,\n        password: hashedPassword,\n      },\n    });\n    res.status(201).json({\n      success: true,\n      message: \"User created successfully\",\n      data: user,\n    });\n  } catch (error) {\n    next(new ErrorResponse(`Internal server error : ${error}`, 500));\n  }\n};\n\nexport const userLogin = async (\n  req: CustomRequest,\n  res: Response,\n  next: NextFunction,\n) => {\n  try {\n    const { email, password } = req.value;\n    const user = await prisma.user.findFirst({\n      where: {\n        email: email,\n      },\n    });\n    if (!user) {\n      return next(new ErrorResponse(\"User not found\", 404));\n    }\n    const isPasswordValid = await bcrypt.compare(password, user.password);\n    if (!isPasswordValid) {\n      return next(new ErrorResponse(\"Invalid password\", 401));\n    }\n    const token = jwt.sign({ id: user.id }, process.env.JWT_SECRET!, {\n      expiresIn: \"30d\",\n    });\n    res.cookie(\"token\", token, {\n      httpOnly: true,\n      secure: process.env.NODE_ENV === \"production\",\n      sameSite: process.env.NODE_ENV === \"production\" ? \"none\" : \"lax\",\n      path: \"/\",\n      maxAge: 30 * 24 * 60 * 60 * 1000, // 30 days\n    });\n    res.status(200).json({\n      success: true,\n      message: \"User logged in successfully\",\n      data: token,\n    });\n  } catch (error) {\n    next(new ErrorResponse(`Internal server error : ${error}`, 500));\n  }\n};\n\nexport const getUser = async ",
        "full_content": "import prisma from \"@src/config/db\";\nimport { NextFunction, Response } from \"express\";\nimport { CustomRequest } from \"@src/types\";\nimport ErrorResponse from \"@src/middleware/error-response\";\nimport bcrypt from \"bcrypt\";\nimport { constants as C } from \"@src/utils/constants\";\nimport jwt from \"jsonwebtoken\";\nexport const createUser = async (\n  req: CustomRequest,\n  res: Response,\n  next: NextFunction,\n) => {\n  try {\n    const { name, email, password } = req.value;\n    const hashedPassword = await bcrypt.hash(password, C.SALT);\n    const user = await prisma.user.create({\n      data: {\n        name,\n        email,\n        password: hashedPassword,\n      },\n    });\n    res.status(201).json({\n      success: true,\n      message: \"User created successfully\",\n      data: user,\n    });\n  } catch (error) {\n    next(new ErrorResponse(`Internal server error : ${error}`, 500));\n  }\n};\n\nexport const userLogin = async (\n  req: CustomRequest,\n  res: Response,\n  next: NextFunction,\n) => {\n  try {\n    const { email, password } = req.value;\n    const user = await prisma.user.findFirst({\n      where: {\n        email: email,\n      },\n    });\n    if (!user) {\n      return next(new ErrorResponse(\"User not found\", 404));\n    }\n    const isPasswordValid = await bcrypt.compare(password, user.password);\n    if (!isPasswordValid) {\n      return next(new ErrorResponse(\"Invalid password\", 401));\n    }\n    const token = jwt.sign({ id: user.id }, process.env.JWT_SECRET!, {\n      expiresIn: \"30d\",\n    });\n    res.cookie(\"token\", token, {\n      httpOnly: true,\n      secure: process.env.NODE_ENV === \"production\",\n      sameSite: process.env.NODE_ENV === \"production\" ? \"none\" : \"lax\",\n      path: \"/\",\n      maxAge: 30 * 24 * 60 * 60 * 1000, // 30 days\n    });\n    res.status(200).json({\n      success: true,\n      message: \"User logged in successfully\",\n      data: token,\n    });\n  } catch (error) {\n    next(new ErrorResponse(`Internal server error : ${error}`, 500));\n  }\n};\n\nexport const getUser = async (\n  req: CustomRequest,\n  res: Response,\n  next: NextFunction,\n) => {\n  try {\n    const user = await prisma.user.findMany();\n    res.status(200).json({\n      success: true,\n      message: \"Users fetched successfully\",\n      data: user,\n    });\n  } catch (error) {\n    next(new ErrorResponse(`Internal server error : ${error}`, 500));\n  }\n};\n"
      }
    },
    {
      "file_path": "job-manager/src/api/v1/routes/index.ts",
      "relative_path": "job-manager/src/api/v1/routes/index.ts",
      "language": "typescript",
      "imports": [
        "express",
        "./user/router",
        "./job/router",
        "@src/middleware/verify-user"
      ],
      "exports": [],
      "classes": [],
      "functions": [],
      "variables": [
        "router"
      ],
      "description": "**Technical Description**\n\n### Purpose\nThe provided code file, `index.ts`, serves as the main entry point for API endpoint routing in the `job-manager` application. Its primary function is to handle HTTP requests and route them to specific endpoints.\n\n### Components\n\n* **Router**: The code utilizes the `express` library to create a router instance, which is used to manage API endpoint routing.\n* **User Router**: The `userRouter` is imported from `./user/router` and is used to handle requests related to user management.\n* **Job Router**: The `jobRouter` is imported from `./job/router` and is used to handle requests related to job management.\n* **Verify User Middleware**: The `verifyUser` middleware is",
      "lines_of_code": 11,
      "metadata": {
        "size_bytes": 282,
        "last_modified": "2025-10-07T19:50:38.743Z"
      },
      "analysis_enhanced": {
        "complexity_score": 2,
        "detected_issues": [],
        "semantic_tags": [
          "typescript",
          "api",
          "express",
          "routing",
          "background-jobs"
        ],
        "needs_ai_summary": true,
        "priority": "medium",
        "summary_type": "ai-generated",
        "code_snippet": "import { Router } from \"express\";\nimport userRouter from \"./user/router\";\nimport jobRouter from \"./job/router\";\nimport verifyUser from \"@src/middleware/verify-user\";\nconst router = Router();\n\nrouter.use(\"/users\", userRouter);\nrouter.use(\"/jobs\", jobRouter);\n\nexport default router;\n",
        "full_content": "import { Router } from \"express\";\nimport userRouter from \"./user/router\";\nimport jobRouter from \"./job/router\";\nimport verifyUser from \"@src/middleware/verify-user\";\nconst router = Router();\n\nrouter.use(\"/users\", userRouter);\nrouter.use(\"/jobs\", jobRouter);\n\nexport default router;\n"
      }
    },
    {
      "file_path": "job-manager/src/api/v1/routes/job/router.ts",
      "relative_path": "job-manager/src/api/v1/routes/job/router.ts",
      "language": "typescript",
      "imports": [
        "express",
        "@src/api/v1/controller/job.controller",
        "@src/validation/job-valiation",
        "@src/middleware/verify-user"
      ],
      "exports": [],
      "classes": [],
      "functions": [],
      "variables": [
        "router"
      ],
      "description": "**Technical Description**\n\n### Purpose\nThis file defines an API endpoint router for handling HTTP requests related to job management. It imports necessary dependencies, sets up routes, and exports the router instance.\n\n### Components\n\n* **Router**: The Express.js router instance, responsible for handling HTTP requests.\n* **Job Controller**: The `Jobs` class from `@src/api/v1/controller/job.controller`, which contains methods for creating, retrieving, and updating jobs.\n* **Job Validation**: The `createJobValidation` function from `@src/validation/job-validation`, responsible for validating job creation requests.\n* **User Verification**: The `verifyUser` middleware function from `@src/middleware/verify-user`, which checks if the user is authenticated.\n\n### Dependencies",
      "lines_of_code": 12,
      "metadata": {
        "size_bytes": 429,
        "last_modified": "2025-10-07T19:50:38.743Z"
      },
      "analysis_enhanced": {
        "complexity_score": 2,
        "detected_issues": [],
        "semantic_tags": [
          "typescript",
          "api",
          "express",
          "routing",
          "background-jobs"
        ],
        "needs_ai_summary": true,
        "priority": "medium",
        "summary_type": "ai-generated",
        "code_snippet": "import { Router } from \"express\";\nimport * as Jobs from \"@src/api/v1/controller/job.controller\";\nimport { createJobValidation } from \"@src/validation/job-valiation\";\nimport verifyUser from \"@src/middleware/verify-user\";\n\nconst router = Router();\n\nrouter.post(\"/\", verifyUser, createJobValidation, Jobs.createJob);\nrouter.get(\"/\", verifyUser, Jobs.getJobs);\nrouter.get(\"/:id\", verifyUser, Jobs.getJobById);\nexport default router;\n",
        "full_content": "import { Router } from \"express\";\nimport * as Jobs from \"@src/api/v1/controller/job.controller\";\nimport { createJobValidation } from \"@src/validation/job-valiation\";\nimport verifyUser from \"@src/middleware/verify-user\";\n\nconst router = Router();\n\nrouter.post(\"/\", verifyUser, createJobValidation, Jobs.createJob);\nrouter.get(\"/\", verifyUser, Jobs.getJobs);\nrouter.get(\"/:id\", verifyUser, Jobs.getJobById);\nexport default router;\n"
      }
    },
    {
      "file_path": "job-manager/src/api/v1/routes/user/router.ts",
      "relative_path": "job-manager/src/api/v1/routes/user/router.ts",
      "language": "typescript",
      "imports": [
        "express",
        "@src/api/v1/controller/user.controller",
        "@src/validation/user-validation"
      ],
      "exports": [],
      "classes": [],
      "functions": [],
      "variables": [
        "router"
      ],
      "description": "**Technical Description**\n\n### Purpose\nThis TypeScript API endpoint handles HTTP requests for user-related operations. It provides two endpoints for creating a new user and logging in an existing user.\n\n### Components\n\n* **Router:** The Express.js router is used to handle HTTP requests.\n* **User Controller:** The `User` class from `@src/api/v1/controller/user.controller` is used to handle user-related business logic.\n* **Validation:** The `userLoginValidation` and `userValidation` functions from `@src/validation/user-validation` are used to validate user input data.\n\n### Dependencies\n\n* **Express.js:** The Express.js framework is used to create the API endpoint.\n* **@src/api/v1/controller/user.controller:** This module provides the",
      "lines_of_code": 14,
      "metadata": {
        "size_bytes": 352,
        "last_modified": "2025-10-07T19:50:38.743Z"
      },
      "analysis_enhanced": {
        "complexity_score": 2,
        "detected_issues": [],
        "semantic_tags": [
          "typescript",
          "api",
          "express",
          "routing",
          "authentication"
        ],
        "needs_ai_summary": true,
        "priority": "medium",
        "summary_type": "ai-generated",
        "code_snippet": "import { Router } from \"express\";\nimport * as User from \"@src/api/v1/controller/user.controller\";\nimport {\n  userLoginValidation,\n  userValidation,\n} from \"@src/validation/user-validation\";\n\nconst router = Router();\n\nrouter.post(\"/\", userValidation, User.createUser);\nrouter.post(\"/login\", userLoginValidation, User.userLogin);\n\nexport default router;\n",
        "full_content": "import { Router } from \"express\";\nimport * as User from \"@src/api/v1/controller/user.controller\";\nimport {\n  userLoginValidation,\n  userValidation,\n} from \"@src/validation/user-validation\";\n\nconst router = Router();\n\nrouter.post(\"/\", userValidation, User.createUser);\nrouter.post(\"/login\", userLoginValidation, User.userLogin);\n\nexport default router;\n"
      }
    },
    {
      "file_path": "job-manager/src/config/db.ts",
      "relative_path": "job-manager/src/config/db.ts",
      "language": "typescript",
      "imports": [
        "@prisma/client"
      ],
      "exports": [],
      "classes": [],
      "functions": [],
      "variables": [
        "prisma"
      ],
      "description": "**Technical Description**\n\n### Purpose\nThis TypeScript database module, located at `job-manager/src/config/db.ts`, serves as a global instance of the Prisma client, providing a connection to the database. Its primary function is to establish and manage database interactions throughout the application.\n\n### Components\n- **Prisma Client**: The core component of this module, responsible for interacting with the database. It is imported from the `@prisma/client` module.\n\n### Dependencies\n- **@prisma/client**: The external module that provides the Prisma client, which is used to interact with the database.\n\n### Issues\n- **None detected**: The code appears to be well-structured and follows best practices.\n\n### Impact\n- **Global Prisma Instance**:",
      "lines_of_code": 11,
      "metadata": {
        "size_bytes": 260,
        "last_modified": "2025-10-07T19:50:38.743Z"
      },
      "analysis_enhanced": {
        "complexity_score": 1,
        "detected_issues": [],
        "semantic_tags": [
          "typescript",
          "database",
          "prisma"
        ],
        "needs_ai_summary": true,
        "priority": "medium",
        "summary_type": "ai-generated",
        "code_snippet": "import { PrismaClient } from \"@prisma/client\";\n\ndeclare global {\n    var prisma: PrismaClient | undefined;\n}\nexport const prisma = global.prisma || new PrismaClient();\n\nif (process.env.NODE_ENV !== \"production\") global.prisma = prisma;\n\nexport default prisma;\n",
        "full_content": "import { PrismaClient } from \"@prisma/client\";\n\ndeclare global {\n    var prisma: PrismaClient | undefined;\n}\nexport const prisma = global.prisma || new PrismaClient();\n\nif (process.env.NODE_ENV !== \"production\") global.prisma = prisma;\n\nexport default prisma;\n"
      }
    },
    {
      "file_path": "job-manager/src/demo.ts",
      "relative_path": "job-manager/src/demo.ts",
      "language": "typescript",
      "imports": [
        "child_process",
        "express",
        "./types"
      ],
      "exports": [],
      "classes": [],
      "functions": [],
      "variables": [
        "startSpawn"
      ],
      "description": "**Technical Description**\n\n### Purpose\nThe provided TypeScript code file, `demo.ts`, is a general-purpose code file that serves as a demonstration of how to spawn a child process using the `child_process` module from Node.js. The code is designed to handle incoming requests from an Express.js server, execute a script specified in the request body, and log the output and errors to the console.\n\n### Components\n\n* **`startSpawn` function**: This is the main function exported by the code file. It takes three parameters: `req` (a custom request object), `res` (a response object), and `next` (a next function). The function spawns a child process using the `spawn` function from the `child_process`",
      "lines_of_code": 37,
      "metadata": {
        "size_bytes": 1091,
        "last_modified": "2025-10-07T19:50:38.743Z"
      },
      "analysis_enhanced": {
        "complexity_score": 2,
        "detected_issues": [
          {
            "type": "maintainability",
            "severity": "low",
            "description": "Console.log statements should be removed from production code",
            "category": "debug-code"
          }
        ],
        "semantic_tags": [
          "typescript",
          "express"
        ],
        "needs_ai_summary": true,
        "priority": "medium",
        "summary_type": "ai-generated",
        "code_snippet": "import { spawn } from \"child_process\";\nimport { NextFunction, Response } from \"express\";\nimport { CustomRequest } from \"./types\";\n\nexport const startSpawn = async (\n  req: CustomRequest,\n  res: Response,\n  next: NextFunction,\n) => {\n  try {\n    const process = spawn(`${req.body.script}`, { shell: true });\n    process.stdout.on(\"data\", (data) => {\n      const dateTime = new Date().toUTCString();\n      const output = data.toString().trim();\n      console.log(`${dateTime} ===>  [stdout]: ${output}`);\n      // Here you can send it to WebSocket or save to DB\n    });\n\n    process.stderr.on(\"data\", (data) => {\n      const error = data.toString().trim();\n      const dateTime = new Date().toUTCString();\n      console.log(`${dateTime} ===> [stderr]: ${error}`);\n      // Same — stream error line by line\n    });\n\n    process.on(\"close\", (code) => {\n      console.log(`Process exited with code: ${code}`);\n    });\n\n    process.on(\"error\", (err) => {\n      console.error(\"Failed to start process:\", err);\n    });\n  } catch (error) {\n    console.log(\"Internal server error :\", error);\n  }\n};\n",
        "full_content": "import { spawn } from \"child_process\";\nimport { NextFunction, Response } from \"express\";\nimport { CustomRequest } from \"./types\";\n\nexport const startSpawn = async (\n  req: CustomRequest,\n  res: Response,\n  next: NextFunction,\n) => {\n  try {\n    const process = spawn(`${req.body.script}`, { shell: true });\n    process.stdout.on(\"data\", (data) => {\n      const dateTime = new Date().toUTCString();\n      const output = data.toString().trim();\n      console.log(`${dateTime} ===>  [stdout]: ${output}`);\n      // Here you can send it to WebSocket or save to DB\n    });\n\n    process.stderr.on(\"data\", (data) => {\n      const error = data.toString().trim();\n      const dateTime = new Date().toUTCString();\n      console.log(`${dateTime} ===> [stderr]: ${error}`);\n      // Same — stream error line by line\n    });\n\n    process.on(\"close\", (code) => {\n      console.log(`Process exited with code: ${code}`);\n    });\n\n    process.on(\"error\", (err) => {\n      console.error(\"Failed to start process:\", err);\n    });\n  } catch (error) {\n    console.log(\"Internal server error :\", error);\n  }\n};\n"
      }
    },
    {
      "file_path": "job-manager/src/index.ts",
      "relative_path": "job-manager/src/index.ts",
      "language": "typescript",
      "imports": [
        "dotenv",
        "express",
        "http",
        "socket.io",
        "./api/v1/routes",
        "./config/db",
        "./demo",
        "./sockets/job-manager-socket",
        "cors",
        "./middleware/error",
        "./libs/redis"
      ],
      "exports": [],
      "classes": [],
      "functions": [],
      "variables": [
        "app",
        "server",
        "io",
        "PORT"
      ],
      "description": "**Technical Description**\n\n### Purpose\nThis file, `index.ts`, serves as the main entry point for the job manager application. It sets up an Express.js server, establishes a connection to a Prisma database, and enables Socket.IO for real-time communication. The file also includes error handling and dependency checks to ensure the application's health.\n\n### Components\n\n* **Express.js Server**: The Express.js framework is used to create a web server that handles HTTP requests.\n* **Prisma Database**: The Prisma database is connected to the application using the `prisma` client.\n* **Socket.IO**: Socket.IO is used for real-time communication between the server and clients.\n* **Error Handling**: The `errorHandler` middleware is used to catch",
      "lines_of_code": 65,
      "metadata": {
        "size_bytes": 1806,
        "last_modified": "2025-10-07T19:50:38.743Z"
      },
      "analysis_enhanced": {
        "complexity_score": 6,
        "detected_issues": [
          {
            "type": "security",
            "severity": "high",
            "description": "Potential SQL injection vulnerability - use parameterized queries",
            "category": "sql-injection-risk"
          },
          {
            "type": "maintainability",
            "severity": "low",
            "description": "Console.log statements should be removed from production code",
            "category": "debug-code"
          }
        ],
        "semantic_tags": [
          "typescript",
          "express",
          "redis",
          "sql",
          "routing",
          "caching",
          "background-jobs"
        ],
        "needs_ai_summary": true,
        "priority": "medium",
        "summary_type": "ai-generated",
        "code_snippet": "import { config } from \"dotenv\";\nimport express from \"express\";\nimport { createServer } from \"http\";\nimport { Server } from \"socket.io\";\nimport router from \"./api/v1/routes\";\nimport prisma from \"./config/db\";\nimport { startSpawn } from \"./demo\";\nimport registerJobSocket from \"./sockets/job-manager-socket\";\nimport cors from \"cors\";\nimport errorHandler from \"./middleware/error\";\nimport redisClient from \"./libs/redis\";\nconfig();\n\nconst app = express();\nconst server = createServer(app);\nconst io = new Server(server);\n\nconst PORT = process.env.PORT || 8080;\n\napp.use(express.json());\napp.use(\n  cors({\n    origin: [process.env.FRONTEND_URL!, \"http://localhost:3000\"],\n    credentials: true,\n  }),\n);\n// app.post(\"/demo-spawn\", startSpawn);\n\napp.get(\"/health\", async (req, res) => {\n  try {\n    const dbStatus = await prisma.$queryRaw`SELECT 1`;\n    const isDbHealthy = dbStatus === \"pong\" || dbStatus;\n    const isRedisHealthy = await redisClient.ping();\n    const uptime = process.uptime();\n\n    const allSystemsOperational = isDbHealthy && isRedisHealthy;\n\n    res.status(allSystemsOperational ? 200 : 500).json({\n      success: allSystemsOperational,\n      message: allSystemsOperational ? \"STATUS: OK\" : \"STATUS: DEGRADED\",\n      uptime: `${Math.floor(uptime)}s`,\n      dependencies: {\n        database: isDbHealthy ? \"up\" : \"down\",\n        queue: isRedisHealthy ? \"up\" : \"down\",\n      },\n      timestamp: new Date().toISOString(),\n    });\n  } catch (err) {\n    res.status(500).json({\n      success: false,\n      message: \"STATUS: CRITICAL FAILURE\",\n      error: err,\n      timestamp: new Date().toISOString(),\n    });\n  }\n});\n\napp.use(\"/api/v1\", router);\napp.use(errorHandler);\nregisterJobSocket(io);\n\nserver.listen(PORT, () => {\n  console.log(`Server is running on : http://localhost:${PORT}`);\n});\n",
        "full_content": "import { config } from \"dotenv\";\nimport express from \"express\";\nimport { createServer } from \"http\";\nimport { Server } from \"socket.io\";\nimport router from \"./api/v1/routes\";\nimport prisma from \"./config/db\";\nimport { startSpawn } from \"./demo\";\nimport registerJobSocket from \"./sockets/job-manager-socket\";\nimport cors from \"cors\";\nimport errorHandler from \"./middleware/error\";\nimport redisClient from \"./libs/redis\";\nconfig();\n\nconst app = express();\nconst server = createServer(app);\nconst io = new Server(server);\n\nconst PORT = process.env.PORT || 8080;\n\napp.use(express.json());\napp.use(\n  cors({\n    origin: [process.env.FRONTEND_URL!, \"http://localhost:3000\"],\n    credentials: true,\n  }),\n);\n// app.post(\"/demo-spawn\", startSpawn);\n\napp.get(\"/health\", async (req, res) => {\n  try {\n    const dbStatus = await prisma.$queryRaw`SELECT 1`;\n    const isDbHealthy = dbStatus === \"pong\" || dbStatus;\n    const isRedisHealthy = await redisClient.ping();\n    const uptime = process.uptime();\n\n    const allSystemsOperational = isDbHealthy && isRedisHealthy;\n\n    res.status(allSystemsOperational ? 200 : 500).json({\n      success: allSystemsOperational,\n      message: allSystemsOperational ? \"STATUS: OK\" : \"STATUS: DEGRADED\",\n      uptime: `${Math.floor(uptime)}s`,\n      dependencies: {\n        database: isDbHealthy ? \"up\" : \"down\",\n        queue: isRedisHealthy ? \"up\" : \"down\",\n      },\n      timestamp: new Date().toISOString(),\n    });\n  } catch (err) {\n    res.status(500).json({\n      success: false,\n      message: \"STATUS: CRITICAL FAILURE\",\n      error: err,\n      timestamp: new Date().toISOString(),\n    });\n  }\n});\n\napp.use(\"/api/v1\", router);\napp.use(errorHandler);\nregisterJobSocket(io);\n\nserver.listen(PORT, () => {\n  console.log(`Server is running on : http://localhost:${PORT}`);\n});\n"
      }
    },
    {
      "file_path": "job-manager/src/libs/priority-queue.ts",
      "relative_path": "job-manager/src/libs/priority-queue.ts",
      "language": "typescript",
      "imports": [
        "@prisma/client",
        "./redis",
        "@src/types",
        "@src/utils/constants"
      ],
      "exports": [],
      "classes": [],
      "functions": [],
      "variables": [
        "PRIORITY_LEVELS",
        "PRIORITY_KEYS",
        "enqueueJob",
        "dequeueJob"
      ],
      "description": "**FILE INFORMATION**\n--------------------\n\n* **File Path:** job-manager/src/libs/priority-queue.ts\n* **Language:** typescript\n* **Type:** code file\n* **Functions:** 0\n* **Classes:** 0\n* **Lines of Code:** 0\n* **Imports:** @prisma/client, ./redis, @src/types, @src/utils/constants\n\n**FILE CONTEXT**\n----------------\n\n* General purpose code file\n\n**PURPOSE:**\n------------\n\nThis code file provides a set of functions for managing a priority queue using Redis. It allows enqueuing and dequeuing jobs with specific priorities.\n\n**COMPONENTS:**\n--------------\n\n* **PRIORITY_LEVELS:** An array of priority levels, currently set",
      "lines_of_code": 64,
      "metadata": {
        "size_bytes": 2075,
        "last_modified": "2025-10-07T19:50:38.743Z"
      },
      "analysis_enhanced": {
        "complexity_score": 2,
        "detected_issues": [
          {
            "type": "performance",
            "severity": "medium",
            "description": "Sequential async operations in loop - consider Promise.all for parallel execution",
            "category": "async-performance"
          },
          {
            "type": "best-practice",
            "severity": "medium",
            "description": "Missing error handling for async operations",
            "category": "missing-error-handling"
          },
          {
            "type": "maintainability",
            "severity": "low",
            "description": "Console.log statements should be removed from production code",
            "category": "debug-code"
          }
        ],
        "semantic_tags": [
          "typescript",
          "prisma",
          "redis",
          "caching",
          "background-jobs"
        ],
        "needs_ai_summary": true,
        "priority": "medium",
        "summary_type": "ai-generated",
        "code_snippet": "import { Job } from \"@prisma/client\";\nimport redisClient from \"./redis\";\nimport { SubscribePayload } from \"@src/types\";\nimport { constants } from \"@src/utils/constants\";\n\nexport const PRIORITY_LEVELS = [1, 2, 3];\n\nexport const PRIORITY_KEYS = Object.fromEntries(\n  PRIORITY_LEVELS.map((level) => [level, `priority:${level}`]),\n);\n\nexport const enqueueJob = async ({\n  jobId,\n  priority,\n  queueKey = constants.JOB_QUEUE_KEY,\n}: SubscribePayload) => {\n  const key = PRIORITY_KEYS[priority as 1 | 2 | 3] || PRIORITY_KEYS[3];\n  await redisClient.lpush(`${queueKey}:${key}`, jobId);\n  console.log(`📥 Enqueued job ${jobId} to ${key}`);\n};\n\nexport const dequeueJob = async (\n  queueKey: string = constants.JOB_QUEUE_KEY,\n) => {\n  for (const priority of PRIORITY_LEVELS) {\n    const jobId = await redisClient.rpop(\n      `${queueKey}:${PRIORITY_KEYS[priority]}`,\n    );\n    if (jobId) {\n      console.log(`📤 Dequeued job ${jobId} from priority ${priority}`);\n      return jobId;\n    }\n  }\n  return null; // all queues are empty\n};\n// import { Job } from \"@prisma/client\";\n// import redisClient from \"./redis\";\n// import { constants } from \"@src/utils/constants\";\n\n// export const PRIORITY_LEVELS = [1, 2, 3];\n\n// export const PRIORITY_KEYS = Object.fromEntries(\n//   PRIORITY_LEVELS.map((level) => [level, `priority:${level}`])\n// );\n\n// export const enqueueJob = async (job: Job, queueKey: string = constants.JOB_QUEUE_KEY) => {\n//   const key = PRIORITY_KEYS[job.priority as 1 | 2 | 3] || PRIORITY_KEYS[3];\n//   await redisClient.lpush(`${queueKey}:${key}`, job.id);\n//   console.log(`📥 Enqueued job ${job.id} to ${key}`);\n// };\n\n// export const dequeueJob = async (queueKey: string = constants.JOB_QUEUE_KEY) => {\n//   for (const priority of PRIORITY_LEVELS) {\n//     const jobId = await redisClient.rpop(`${queueKey}:${PRIORITY_KEYS[priority]}`);\n//     console.log(\"jobId\", jobId);\n\n//     if (jobId) {\n//       console.log(`📤 Dequeued job ${jobId} from priority ${priority}`);\n//       return jobI",
        "full_content": "import { Job } from \"@prisma/client\";\nimport redisClient from \"./redis\";\nimport { SubscribePayload } from \"@src/types\";\nimport { constants } from \"@src/utils/constants\";\n\nexport const PRIORITY_LEVELS = [1, 2, 3];\n\nexport const PRIORITY_KEYS = Object.fromEntries(\n  PRIORITY_LEVELS.map((level) => [level, `priority:${level}`]),\n);\n\nexport const enqueueJob = async ({\n  jobId,\n  priority,\n  queueKey = constants.JOB_QUEUE_KEY,\n}: SubscribePayload) => {\n  const key = PRIORITY_KEYS[priority as 1 | 2 | 3] || PRIORITY_KEYS[3];\n  await redisClient.lpush(`${queueKey}:${key}`, jobId);\n  console.log(`📥 Enqueued job ${jobId} to ${key}`);\n};\n\nexport const dequeueJob = async (\n  queueKey: string = constants.JOB_QUEUE_KEY,\n) => {\n  for (const priority of PRIORITY_LEVELS) {\n    const jobId = await redisClient.rpop(\n      `${queueKey}:${PRIORITY_KEYS[priority]}`,\n    );\n    if (jobId) {\n      console.log(`📤 Dequeued job ${jobId} from priority ${priority}`);\n      return jobId;\n    }\n  }\n  return null; // all queues are empty\n};\n// import { Job } from \"@prisma/client\";\n// import redisClient from \"./redis\";\n// import { constants } from \"@src/utils/constants\";\n\n// export const PRIORITY_LEVELS = [1, 2, 3];\n\n// export const PRIORITY_KEYS = Object.fromEntries(\n//   PRIORITY_LEVELS.map((level) => [level, `priority:${level}`])\n// );\n\n// export const enqueueJob = async (job: Job, queueKey: string = constants.JOB_QUEUE_KEY) => {\n//   const key = PRIORITY_KEYS[job.priority as 1 | 2 | 3] || PRIORITY_KEYS[3];\n//   await redisClient.lpush(`${queueKey}:${key}`, job.id);\n//   console.log(`📥 Enqueued job ${job.id} to ${key}`);\n// };\n\n// export const dequeueJob = async (queueKey: string = constants.JOB_QUEUE_KEY) => {\n//   for (const priority of PRIORITY_LEVELS) {\n//     const jobId = await redisClient.rpop(`${queueKey}:${PRIORITY_KEYS[priority]}`);\n//     console.log(\"jobId\", jobId);\n\n//     if (jobId) {\n//       console.log(`📤 Dequeued job ${jobId} from priority ${priority}`);\n//       return jobId;\n//     }\n//   }\n//   return null; // all queues are empty\n// };\n"
      }
    },
    {
      "file_path": "job-manager/src/libs/redis.ts",
      "relative_path": "job-manager/src/libs/redis.ts",
      "language": "typescript",
      "imports": [
        "ioredis"
      ],
      "exports": [],
      "classes": [],
      "functions": [],
      "variables": [
        "redisClient"
      ],
      "description": "**Technical Summary**\n\n### Purpose\nThis TypeScript code file, located at `job-manager/src/libs/redis.ts`, is responsible for creating a Redis client instance using the `ioredis` library. The primary function of this file is to establish a connection to a Redis database.\n\n### Components\n- **Redis Client**: The code creates a single instance of the Redis client using the `ioredis` library, which is connected to a Redis database hosted at the address specified by the `REDIS_HOST` environment variable.\n\n### Dependencies\n- **ioredis**: This library is used to interact with the Redis database. It provides a promise-based API for Redis operations.\n\n### Issues\nNone detected.\n\n### Impact\nThis code file is crucial for interacting",
      "lines_of_code": 6,
      "metadata": {
        "size_bytes": 115,
        "last_modified": "2025-10-07T19:50:38.743Z"
      },
      "analysis_enhanced": {
        "complexity_score": 1,
        "detected_issues": [],
        "semantic_tags": [
          "typescript",
          "redis",
          "caching"
        ],
        "needs_ai_summary": true,
        "priority": "medium",
        "summary_type": "ai-generated",
        "code_snippet": "import redis from \"ioredis\";\n\nconst redisClient = new redis(process.env.REDIS_HOST!);\n\nexport default redisClient;\n",
        "full_content": "import redis from \"ioredis\";\n\nconst redisClient = new redis(process.env.REDIS_HOST!);\n\nexport default redisClient;\n"
      }
    },
    {
      "file_path": "job-manager/src/libs/socket.ts",
      "relative_path": "job-manager/src/libs/socket.ts",
      "language": "typescript",
      "imports": [
        "socket.io"
      ],
      "exports": [],
      "classes": [],
      "functions": [],
      "variables": [
        "clientSocket",
        "workerSocket"
      ],
      "description": "**Technical Summary**\n\n### Purpose\nThis TypeScript code file, located at `job-manager/src/libs/socket.ts`, is responsible for managing client and worker sockets. It appears to be a part of a larger system that utilizes WebSockets for communication.\n\n### Components\n\n- **Global Socket Objects**: The file exports two global objects, `clientSocket` and `workerSocket`, which are objects that store Socket instances as properties. These objects are initialized as empty objects (`{}`) and are intended to hold Socket instances for clients and workers, respectively.\n\n### Dependencies\n\n- **socket.io**: The file imports the `Socket` class from the `socket.io` module, indicating that it relies on this library for WebSocket functionality.\n\n### Issues\n\n- **None",
      "lines_of_code": 5,
      "metadata": {
        "size_bytes": 149,
        "last_modified": "2025-10-07T19:50:38.743Z"
      },
      "analysis_enhanced": {
        "complexity_score": 1,
        "detected_issues": [],
        "semantic_tags": [
          "typescript"
        ],
        "needs_ai_summary": true,
        "priority": "medium",
        "summary_type": "ai-generated",
        "code_snippet": "import { Socket } from \"socket.io\";\n\nexport const clientSocket: Record<string, Socket> = {};\nexport const workerSocket: Record<string, Socket> = {};\n",
        "full_content": "import { Socket } from \"socket.io\";\n\nexport const clientSocket: Record<string, Socket> = {};\nexport const workerSocket: Record<string, Socket> = {};\n"
      }
    },
    {
      "file_path": "job-manager/src/middleware/error-response.ts",
      "relative_path": "job-manager/src/middleware/error-response.ts",
      "language": "typescript",
      "imports": [],
      "exports": [
        "ErrorResponse"
      ],
      "classes": [
        {
          "name": "ErrorResponse",
          "methods": [],
          "properties": [
            "statusCode"
          ],
          "isExported": true
        }
      ],
      "functions": [],
      "variables": [],
      "description": "**Technical Description**\n\n### Purpose\nThe `error-response.ts` file is a middleware component in the `job-manager` application, responsible for handling and representing error responses.\n\n### Components\n\n* **Class:** `ErrorResponse`\n\t+ A custom error class that extends the built-in `Error` class in TypeScript.\n\t+ It has two properties:\n\t\t- `statusCode`: a number representing the HTTP status code associated with the error.\n\t\t- `message`: a string representing the error message.\n\n### Dependencies\n\n* **None**: This file does not import any external modules or APIs.\n\n### Issues\n* **None detected**: The code is simple and straightforward, and no potential issues or code flaws are apparent.\n\n### Impact\n* **Request/",
      "lines_of_code": 9,
      "metadata": {
        "size_bytes": 222,
        "last_modified": "2025-10-07T19:50:38.743Z"
      },
      "analysis_enhanced": {
        "complexity_score": 3,
        "detected_issues": [],
        "semantic_tags": [
          "typescript",
          "middleware"
        ],
        "needs_ai_summary": true,
        "priority": "medium",
        "summary_type": "ai-generated",
        "code_snippet": "class ErrorResponse extends Error {\n    public statusCode: number;\n    constructor(message: string, statusCode: number) {\n        super(message);\n        this.statusCode = statusCode;\n    }\n}\n\nexport default ErrorResponse;",
        "full_content": "class ErrorResponse extends Error {\n    public statusCode: number;\n    constructor(message: string, statusCode: number) {\n        super(message);\n        this.statusCode = statusCode;\n    }\n}\n\nexport default ErrorResponse;"
      }
    },
    {
      "file_path": "job-manager/src/middleware/error.ts",
      "relative_path": "job-manager/src/middleware/error.ts",
      "language": "typescript",
      "imports": [
        "express",
        "@src/middleware/error-response"
      ],
      "exports": [],
      "classes": [],
      "functions": [],
      "variables": [
        "errorHandler"
      ],
      "description": "**Technical Description**\n\n### Purpose\nThe `error.ts` file is a middleware function in a TypeScript application, responsible for handling and transforming error responses from the application. Its primary purpose is to catch and process errors, providing a standardized error response to the client.\n\n### Components\n\n* **`errorHandler` function**: The main middleware function that catches and processes errors. It takes four parameters: `err` (the error object), `req` (the request object), `res` (the response object), and `next` (the next middleware function in the chain).\n\n### Dependencies\n\n* **`express`**: The Express.js framework is used to create the middleware function.\n* **`@src/middleware/error-response`**: A custom module",
      "lines_of_code": 50,
      "metadata": {
        "size_bytes": 1341,
        "last_modified": "2025-10-07T19:50:38.744Z"
      },
      "analysis_enhanced": {
        "complexity_score": 1,
        "detected_issues": [
          {
            "type": "maintainability",
            "severity": "low",
            "description": "Console.log statements should be removed from production code",
            "category": "debug-code"
          }
        ],
        "semantic_tags": [
          "typescript",
          "middleware",
          "express"
        ],
        "needs_ai_summary": true,
        "priority": "medium",
        "summary_type": "ai-generated",
        "code_snippet": "import { NextFunction, Request, Response } from \"express\";\nimport ErrorResponse from \"@src/middleware/error-response\";\n\nconst errorHandler = (\n  err: any,\n  req: Request,\n  res: Response,\n  next: NextFunction,\n) => {\n  try {\n    let error = { ...err };\n    error.message = err.message;\n\n    console.log(\"Error log from middleware -> \", error);\n\n    // Bad Object Id\n    if (err.name === \"CastError\") {\n      const message = \"Resource not found\";\n      error = new ErrorResponse(message, 404);\n    }\n    // Validation\n    if (err.name === \"ValidationError\") {\n      const message = Object.values(error.errors).map(\n        (val: any) => val?.message ?? \"Validation Error\",\n      );\n      error = new ErrorResponse(message.toString(), 400);\n    }\n    // Duplicate entries\n    if (err.code === 11000) {\n      if (err.message.includes(\"email_1 dup key:\")) {\n        const message = `User already Exist`;\n        error = new ErrorResponse(message, 400);\n      } else {\n        const message = `Duplicate Field values.`;\n        error = new ErrorResponse(message, 400);\n      }\n    }\n\n    res.status(error.statusCode || 500).json({\n      success: false,\n      message: error.message || \"Internal server error\",\n    });\n  } catch (error) {\n    console.error(`Internal Server Error; ${error}`);\n    next(error);\n  }\n};\n\nexport default errorHandler;\n",
        "full_content": "import { NextFunction, Request, Response } from \"express\";\nimport ErrorResponse from \"@src/middleware/error-response\";\n\nconst errorHandler = (\n  err: any,\n  req: Request,\n  res: Response,\n  next: NextFunction,\n) => {\n  try {\n    let error = { ...err };\n    error.message = err.message;\n\n    console.log(\"Error log from middleware -> \", error);\n\n    // Bad Object Id\n    if (err.name === \"CastError\") {\n      const message = \"Resource not found\";\n      error = new ErrorResponse(message, 404);\n    }\n    // Validation\n    if (err.name === \"ValidationError\") {\n      const message = Object.values(error.errors).map(\n        (val: any) => val?.message ?? \"Validation Error\",\n      );\n      error = new ErrorResponse(message.toString(), 400);\n    }\n    // Duplicate entries\n    if (err.code === 11000) {\n      if (err.message.includes(\"email_1 dup key:\")) {\n        const message = `User already Exist`;\n        error = new ErrorResponse(message, 400);\n      } else {\n        const message = `Duplicate Field values.`;\n        error = new ErrorResponse(message, 400);\n      }\n    }\n\n    res.status(error.statusCode || 500).json({\n      success: false,\n      message: error.message || \"Internal server error\",\n    });\n  } catch (error) {\n    console.error(`Internal Server Error; ${error}`);\n    next(error);\n  }\n};\n\nexport default errorHandler;\n"
      }
    },
    {
      "file_path": "job-manager/src/middleware/verify-user.ts",
      "relative_path": "job-manager/src/middleware/verify-user.ts",
      "language": "typescript",
      "imports": [
        "express",
        "@src/config/db",
        "jsonwebtoken",
        "@src/types",
        "./error-response"
      ],
      "exports": [],
      "classes": [],
      "functions": [],
      "variables": [
        "verifyUser"
      ],
      "description": "**Technical Description**\n\n### Purpose\nThe `verifyUser` middleware is designed to authenticate and authorize users by verifying a JSON Web Token (JWT) in the request headers. It ensures that the user is a valid and existing user in the database before allowing access to protected routes.\n\n### Components\n\n* **verifyUser**: The main middleware function that handles the authentication and authorization process.\n* **CustomRequest**: A custom request object type that extends the standard Express request object with additional properties (in this case, `userId`).\n\n### Dependencies\n\n* **express**: The Express.js framework for building web applications.\n* **@src/config/db**: The Prisma database configuration module.\n* **jsonwebtoken**: The JSON Web Token (JWT) library for generating and verifying",
      "lines_of_code": 35,
      "metadata": {
        "size_bytes": 900,
        "last_modified": "2025-10-07T19:50:38.744Z"
      },
      "analysis_enhanced": {
        "complexity_score": 3,
        "detected_issues": [],
        "semantic_tags": [
          "typescript",
          "middleware",
          "express",
          "authentication"
        ],
        "needs_ai_summary": true,
        "priority": "medium",
        "summary_type": "ai-generated",
        "code_snippet": "import { NextFunction, Request, Response } from \"express\";\nimport prisma from \"@src/config/db\";\nimport jwt, { JwtPayload } from \"jsonwebtoken\";\nimport { CustomRequest } from \"@src/types\";\nimport ErrorResponse from \"./error-response\";\n\nconst verifyUser = async (\n  req: CustomRequest,\n  res: Response,\n  next: NextFunction,\n) => {\n  try {\n    const token = req.headers.authorization?.split(\" \")[1];\n    if (!token) {\n      return next(new ErrorResponse(\"Token not found\", 401));\n    }\n    const decoded = jwt.verify(token, process.env.JWT_SECRET!) as JwtPayload;\n\n    const user = await prisma.user.findUnique({\n      where: { id: decoded.id },\n    });\n\n    if (!user) {\n      return next(new ErrorResponse(\"Unauthorized\", 401));\n    }\n\n    req.userId = user.id;\n    next();\n  } catch (error) {\n    return next(new ErrorResponse(\"Unauthorized Invalid token\", 401));\n  }\n};\n\nexport default verifyUser;\n",
        "full_content": "import { NextFunction, Request, Response } from \"express\";\nimport prisma from \"@src/config/db\";\nimport jwt, { JwtPayload } from \"jsonwebtoken\";\nimport { CustomRequest } from \"@src/types\";\nimport ErrorResponse from \"./error-response\";\n\nconst verifyUser = async (\n  req: CustomRequest,\n  res: Response,\n  next: NextFunction,\n) => {\n  try {\n    const token = req.headers.authorization?.split(\" \")[1];\n    if (!token) {\n      return next(new ErrorResponse(\"Token not found\", 401));\n    }\n    const decoded = jwt.verify(token, process.env.JWT_SECRET!) as JwtPayload;\n\n    const user = await prisma.user.findUnique({\n      where: { id: decoded.id },\n    });\n\n    if (!user) {\n      return next(new ErrorResponse(\"Unauthorized\", 401));\n    }\n\n    req.userId = user.id;\n    next();\n  } catch (error) {\n    return next(new ErrorResponse(\"Unauthorized Invalid token\", 401));\n  }\n};\n\nexport default verifyUser;\n"
      }
    },
    {
      "file_path": "job-manager/src/sockets/job-manager-socket.ts",
      "relative_path": "job-manager/src/sockets/job-manager-socket.ts",
      "language": "typescript",
      "imports": [
        "@src/libs/priority-queue",
        "@src/libs/socket",
        "@src/types",
        "@src/utils/constants",
        "socket.io"
      ],
      "exports": [],
      "classes": [],
      "functions": [],
      "variables": [
        "registerJobSocket"
      ],
      "description": "**Technical Description**\n\n### Purpose\n\nThis TypeScript code file, `job-manager-socket.ts`, is a part of the job manager system. Its primary purpose is to handle socket connections for clients and workers, enabling them to interact with the job manager system. The file uses the Socket.IO library to establish real-time communication between clients, workers, and the job manager.\n\n### Components\n\n* **registerJobSocket function**: This is the main function exported by the file. It takes a Socket.IO server instance as an argument and sets up event listeners for various socket events.\n* **Socket.IO event listeners**: The file sets up event listeners for the following socket events:\n\t+ `connection`: Handles new client connections.\n\t+ `job:subscribe`: Handles",
      "lines_of_code": 98,
      "metadata": {
        "size_bytes": 3118,
        "last_modified": "2025-10-07T19:50:38.744Z"
      },
      "analysis_enhanced": {
        "complexity_score": 3,
        "detected_issues": [
          {
            "type": "maintainability",
            "severity": "low",
            "description": "Console.log statements should be removed from production code",
            "category": "debug-code"
          }
        ],
        "semantic_tags": [
          "typescript",
          "background-jobs"
        ],
        "needs_ai_summary": true,
        "priority": "medium",
        "summary_type": "ai-generated",
        "code_snippet": "import { enqueueJob } from \"@src/libs/priority-queue\";\nimport { clientSocket, workerSocket } from \"@src/libs/socket\";\nimport {\n  IStreamType,\n  JobCanceledResponse,\n  JobCancelPayload,\n  SubscribePayload,\n} from \"@src/types\";\nimport { constants as C } from \"@src/utils/constants\";\nimport { Server } from \"socket.io\";\n\nconst registerJobSocket = (io: Server) => {\n  io.on(\"connection\", (socket) => {\n    console.log(\"🟢 User connected:\", socket.id);\n\n    // user request connection to push job to queue\n    socket.on(\"job:subscribe\", ({ jobId, priority }: SubscribePayload) => {\n      console.log(`Client subscribed to job ${jobId}`);\n      if (!jobId || !priority) return;\n      if (clientSocket[jobId]) return;\n      clientSocket[jobId] = socket;\n      enqueueJob({ jobId, priority });\n    });\n\n    socket.on(\"job:unsubscribe\", (jobId: string) => {\n      delete clientSocket[jobId];\n      console.log(`Client unsubscribed from job ${jobId}`);\n    });\n\n    // job stream receiving form worker and transfer to user\n    socket.on(\n      \"job:stream\",\n      ({ jobId, output, type, timestamp }: IStreamType) => {\n        console.log(\"received the job stream : \", jobId);\n\n        const userSocket = clientSocket[jobId];\n\n        if (userSocket && userSocket.connected) {\n          userSocket.emit(\"job:update\", { jobId, output, type, timestamp });\n          console.log(\"emited the response to the user\", output.response);\n        } else {\n          console.log(\"User is not connected\");\n        }\n      },\n    );\n\n    // job done : event sent from worker and transfer to user\n    socket.on(\n      \"job:done\",\n      ({ jobId, exitCode }: { jobId: string; exitCode: number }) => {\n        console.log(\"job:done\", jobId, exitCode);\n        const userSocket = clientSocket[jobId];\n        if (userSocket && userSocket.connected) {\n          userSocket.emit(\"job:done\", { jobId, exitCode });\n        }\n      },\n    );\n\n    // worker request connection\n    socket.on(\"register:worker\", ({ workerId }: { worker",
        "full_content": "import { enqueueJob } from \"@src/libs/priority-queue\";\nimport { clientSocket, workerSocket } from \"@src/libs/socket\";\nimport {\n  IStreamType,\n  JobCanceledResponse,\n  JobCancelPayload,\n  SubscribePayload,\n} from \"@src/types\";\nimport { constants as C } from \"@src/utils/constants\";\nimport { Server } from \"socket.io\";\n\nconst registerJobSocket = (io: Server) => {\n  io.on(\"connection\", (socket) => {\n    console.log(\"🟢 User connected:\", socket.id);\n\n    // user request connection to push job to queue\n    socket.on(\"job:subscribe\", ({ jobId, priority }: SubscribePayload) => {\n      console.log(`Client subscribed to job ${jobId}`);\n      if (!jobId || !priority) return;\n      if (clientSocket[jobId]) return;\n      clientSocket[jobId] = socket;\n      enqueueJob({ jobId, priority });\n    });\n\n    socket.on(\"job:unsubscribe\", (jobId: string) => {\n      delete clientSocket[jobId];\n      console.log(`Client unsubscribed from job ${jobId}`);\n    });\n\n    // job stream receiving form worker and transfer to user\n    socket.on(\n      \"job:stream\",\n      ({ jobId, output, type, timestamp }: IStreamType) => {\n        console.log(\"received the job stream : \", jobId);\n\n        const userSocket = clientSocket[jobId];\n\n        if (userSocket && userSocket.connected) {\n          userSocket.emit(\"job:update\", { jobId, output, type, timestamp });\n          console.log(\"emited the response to the user\", output.response);\n        } else {\n          console.log(\"User is not connected\");\n        }\n      },\n    );\n\n    // job done : event sent from worker and transfer to user\n    socket.on(\n      \"job:done\",\n      ({ jobId, exitCode }: { jobId: string; exitCode: number }) => {\n        console.log(\"job:done\", jobId, exitCode);\n        const userSocket = clientSocket[jobId];\n        if (userSocket && userSocket.connected) {\n          userSocket.emit(\"job:done\", { jobId, exitCode });\n        }\n      },\n    );\n\n    // worker request connection\n    socket.on(\"register:worker\", ({ workerId }: { workerId: string }) => {\n      workerSocket[workerId] = socket;\n      console.log(\"🟢 Worker connected :\", workerId);\n    });\n\n    // job cancel : event sent from user\n    socket.on(\"job:cancel\", ({ jobId }: JobCancelPayload) => {\n      console.log(\"job:cancel\", jobId);\n      console.log(workerSocket[C.WORKER_ID]);\n\n      workerSocket[C.WORKER_ID].emit(\"job:cancel\", { jobId });\n    });\n\n    // job canceled : event sent from worker and transfer to user\n    socket.on(\"job:canceled\", ({ jobId, success }: JobCanceledResponse) => {\n      clientSocket[jobId].emit(\"job:canceled\", { jobId, success });\n    });\n\n    // disconnect : event user or worker disconnect\n    socket.on(\"disconnect\", () => {\n      Object.entries(clientSocket).forEach(([jobId, s]) => {\n        if (s.id == socket.id) {\n          delete clientSocket[jobId];\n        }\n      });\n\n      Object.entries(workerSocket).forEach(([workerId, s]) => {\n        if (s.id == socket.id) {\n          delete workerSocket[workerId];\n        }\n      });\n\n      console.log(\"🔴 User disconnected :\", socket.id);\n    });\n  });\n};\n\nexport default registerJobSocket;\n"
      }
    },
    {
      "file_path": "job-manager/src/types/index.ts",
      "relative_path": "job-manager/src/types/index.ts",
      "language": "typescript",
      "imports": [
        "express"
      ],
      "exports": [],
      "classes": [],
      "functions": [],
      "variables": [],
      "description": "**Technical Description of the Code File**\n\n### Purpose\nThe purpose of this code file is to define custom types and interfaces for handling job management-related data in a TypeScript application.\n\n### Components\n\n* **CustomRequest Interface**: Extends the built-in `Request` interface from Express.js to include custom properties `userId` and `value`.\n* **JOB_STREAM_LINE_TYPE Enum**: A type alias that represents the possible types of job stream lines, which can be either \"stdout\" or \"stderr\".\n* **IStreamType Interface**: Represents a job stream type with properties `jobId`, `output`, `type`, and `timestamp`.\n* **SubscribePayload Type**: Represents a payload for subscribing to a job with properties `jobId`, `priority`,",
      "lines_of_code": 33,
      "metadata": {
        "size_bytes": 594,
        "last_modified": "2025-10-07T19:50:38.744Z"
      },
      "analysis_enhanced": {
        "complexity_score": 1,
        "detected_issues": [],
        "semantic_tags": [
          "typescript",
          "express",
          "background-jobs"
        ],
        "needs_ai_summary": true,
        "priority": "medium",
        "summary_type": "ai-generated",
        "code_snippet": "import { Request } from \"express\";\n\nexport interface CustomRequest extends Request {\n  userId?: any;\n  value?: any;\n}\nexport type JOB_STREAM_LINE_TYPE = \"stdout\" | \"stderr\";\n\nexport interface IStreamType {\n  jobId: string;\n  output: {\n    response: string;\n    timestamp: string;\n    success: boolean;\n  };\n  type: JOB_STREAM_LINE_TYPE;\n  timestamp: Date;\n}\n\nexport type SubscribePayload = {\n  jobId: string;\n  priority: number;\n  queueKey?: string;\n};\n\nexport type JobCancelPayload = {\n  jobId: string;\n};\n\nexport interface JobCanceledResponse extends JobCancelPayload {\n  success: boolean;\n}\n",
        "full_content": "import { Request } from \"express\";\n\nexport interface CustomRequest extends Request {\n  userId?: any;\n  value?: any;\n}\nexport type JOB_STREAM_LINE_TYPE = \"stdout\" | \"stderr\";\n\nexport interface IStreamType {\n  jobId: string;\n  output: {\n    response: string;\n    timestamp: string;\n    success: boolean;\n  };\n  type: JOB_STREAM_LINE_TYPE;\n  timestamp: Date;\n}\n\nexport type SubscribePayload = {\n  jobId: string;\n  priority: number;\n  queueKey?: string;\n};\n\nexport type JobCancelPayload = {\n  jobId: string;\n};\n\nexport interface JobCanceledResponse extends JobCancelPayload {\n  success: boolean;\n}\n"
      }
    },
    {
      "file_path": "job-manager/src/utils/constants.ts",
      "relative_path": "job-manager/src/utils/constants.ts",
      "language": "typescript",
      "imports": [],
      "exports": [],
      "classes": [],
      "functions": [],
      "variables": [
        "constants"
      ],
      "description": "**Technical Description**\n\n### Purpose\nThis TypeScript utility module, located at `job-manager/src/utils/constants.ts`, serves as a centralized repository for storing application-wide constants. Its primary function is to provide a single source of truth for key values used throughout the application.\n\n### Components\n- **constants**: An object containing a collection of application-wide constants.\n\n### Dependencies\n- **None**: This module does not rely on any external modules or APIs.\n\n### Issues\n- **None detected**: The code snippet appears to be well-structured and free of errors.\n\n### Impact\n- **Application-wide constants**: This module's constants are likely used in various parts of the application, making it a crucial component for maintaining consistency and reducing errors due to hardcoded values.\n\n###",
      "lines_of_code": 8,
      "metadata": {
        "size_bytes": 174,
        "last_modified": "2025-10-07T19:50:38.744Z"
      },
      "analysis_enhanced": {
        "complexity_score": 0,
        "detected_issues": [],
        "semantic_tags": [
          "typescript",
          "utility",
          "background-jobs"
        ],
        "needs_ai_summary": true,
        "priority": "medium",
        "summary_type": "ai-generated",
        "code_snippet": "export const constants = {\n  SALT: 10,\n  JOB_QUEUE_KEY: \"queue:job\",\n  JOB_QUEUE_KEY_RETRY: \"queue:job:retry\",\n  WORKER_ID: \"job-worker:id\",\n  COOKIE_NAME: \"@qlio-token\",\n};\n",
        "full_content": "export const constants = {\n  SALT: 10,\n  JOB_QUEUE_KEY: \"queue:job\",\n  JOB_QUEUE_KEY_RETRY: \"queue:job:retry\",\n  WORKER_ID: \"job-worker:id\",\n  COOKIE_NAME: \"@qlio-token\",\n};\n"
      }
    },
    {
      "file_path": "job-manager/src/validation/job-valiation.ts",
      "relative_path": "job-manager/src/validation/job-valiation.ts",
      "language": "typescript",
      "imports": [
        "@src/types",
        "express",
        "joi",
        "./schema-validation"
      ],
      "exports": [],
      "classes": [],
      "functions": [],
      "variables": [
        "createJobValidation"
      ],
      "description": "**Technical Description**\n\n### Purpose\nThis TypeScript code file, `job-manager/src/validation/job-validation.ts`, is responsible for validating incoming job requests. It ensures that the requests adhere to a predefined schema, which includes properties such as `command`, `timeout`, `priority`, `params`, and `isKillable`.\n\n### Components\n\n* **`createJobValidation` function**: This is the main export of the file, responsible for validating job requests. It takes three parameters: `req` (the incoming request), `_res` (the response object, not used in this function), and `next` (the next function in the middleware chain).\n\n### Dependencies\n\n* **`@src/types`**: This module provides the `CustomRequest` type",
      "lines_of_code": 21,
      "metadata": {
        "size_bytes": 593,
        "last_modified": "2025-10-07T19:50:38.744Z"
      },
      "analysis_enhanced": {
        "complexity_score": 2,
        "detected_issues": [],
        "semantic_tags": [
          "typescript",
          "express",
          "validation"
        ],
        "needs_ai_summary": true,
        "priority": "medium",
        "summary_type": "ai-generated",
        "code_snippet": "import { CustomRequest } from \"@src/types\";\nimport { NextFunction, Response } from \"express\";\nimport Joi from \"joi\";\nimport { validateSchema } from \"./schema-validation\";\n\nexport const createJobValidation = (\n  req: CustomRequest,\n  _res: Response,\n  next: NextFunction,\n) => {\n  const schema = Joi.object({\n    command: Joi.string().required(),\n    timeout: Joi.number().required(),\n    priority: Joi.number().required(),\n    params: Joi.array().items(Joi.string().optional().allow(\"\")).optional(),\n    isKillable: Joi.boolean().optional(),\n  });\n\n  validateSchema({ schema, req, next });\n};\n",
        "full_content": "import { CustomRequest } from \"@src/types\";\nimport { NextFunction, Response } from \"express\";\nimport Joi from \"joi\";\nimport { validateSchema } from \"./schema-validation\";\n\nexport const createJobValidation = (\n  req: CustomRequest,\n  _res: Response,\n  next: NextFunction,\n) => {\n  const schema = Joi.object({\n    command: Joi.string().required(),\n    timeout: Joi.number().required(),\n    priority: Joi.number().required(),\n    params: Joi.array().items(Joi.string().optional().allow(\"\")).optional(),\n    isKillable: Joi.boolean().optional(),\n  });\n\n  validateSchema({ schema, req, next });\n};\n"
      }
    },
    {
      "file_path": "job-manager/src/validation/schema-validation.ts",
      "relative_path": "job-manager/src/validation/schema-validation.ts",
      "language": "typescript",
      "imports": [
        "@src/middleware/error-response",
        "@src/types",
        "express",
        "joi"
      ],
      "exports": [],
      "classes": [],
      "functions": [],
      "variables": [
        "validateSchema"
      ],
      "description": "**Technical Description**\n\n### Purpose\nThe purpose of this file is to define a data validation function using the Joi library. It validates incoming requests against a predefined schema, ensuring that the request body conforms to the expected structure and data types.\n\n### Components\n\n* **`validateSchema` function**: This is the main function exported by the file. It takes three parameters:\n\t+ `schema`: A Joi schema object that defines the expected structure and data types of the request body.\n\t+ `req`: A `CustomRequest` object that represents the incoming request.\n\t+ `next`: A `NextFunction` object that represents the next middleware function in the chain.\n* **`ErrorResponse` class**: This class is imported from `@src/middleware",
      "lines_of_code": 29,
      "metadata": {
        "size_bytes": 643,
        "last_modified": "2025-10-07T19:50:38.744Z"
      },
      "analysis_enhanced": {
        "complexity_score": 2,
        "detected_issues": [],
        "semantic_tags": [
          "typescript",
          "express",
          "validation"
        ],
        "needs_ai_summary": true,
        "priority": "medium",
        "summary_type": "ai-generated",
        "code_snippet": "import ErrorResponse from \"@src/middleware/error-response\";\nimport { CustomRequest } from \"@src/types\";\nimport { NextFunction, Response } from \"express\";\nimport { Schema } from \"joi\";\n\nexport const validateSchema = ({\n  schema,\n  req,\n  next,\n}: {\n  schema: Schema;\n  req: CustomRequest;\n  next: NextFunction;\n}) => {\n  const { error, value } = schema.validate(req.body, { abortEarly: false });\n\n  if (error) {\n    console.error(\"Validation error ->\", error.details);\n    return next(\n      new ErrorResponse(\n        error.details.map((detail) => detail.message).join(\", \"),\n        400,\n      ),\n    );\n  }\n  req.value = value;\n  next();\n};\n",
        "full_content": "import ErrorResponse from \"@src/middleware/error-response\";\nimport { CustomRequest } from \"@src/types\";\nimport { NextFunction, Response } from \"express\";\nimport { Schema } from \"joi\";\n\nexport const validateSchema = ({\n  schema,\n  req,\n  next,\n}: {\n  schema: Schema;\n  req: CustomRequest;\n  next: NextFunction;\n}) => {\n  const { error, value } = schema.validate(req.body, { abortEarly: false });\n\n  if (error) {\n    console.error(\"Validation error ->\", error.details);\n    return next(\n      new ErrorResponse(\n        error.details.map((detail) => detail.message).join(\", \"),\n        400,\n      ),\n    );\n  }\n  req.value = value;\n  next();\n};\n"
      }
    },
    {
      "file_path": "job-manager/src/validation/user-validation.ts",
      "relative_path": "job-manager/src/validation/user-validation.ts",
      "language": "typescript",
      "imports": [
        "@src/types",
        "joi",
        "./schema-validation",
        "express"
      ],
      "exports": [],
      "classes": [],
      "functions": [],
      "variables": [
        "basicUserSchema",
        "userValidation",
        "userLoginValidation"
      ],
      "description": "**Purpose:** \nThis TypeScript code file, located at `job-manager/src/validation/user-validation.ts`, is responsible for user validation in an application. It imports necessary modules and exports two functions: `userValidation` and `userLoginValidation`, which validate user data according to predefined schemas.\n\n**Components:**\n- **Imported Modules:**\n  - `@src/types`: imports the `CustomRequest` type.\n  - `joi`: imports the Joi validation library.\n  - `./schema-validation`: imports the `validateSchema` function.\n  - `express`: imports the `NextFunction` and `Response` types.\n- **Functions:**\n  - `userValidation`: validates user data with a schema that includes both `name`",
      "lines_of_code": 30,
      "metadata": {
        "size_bytes": 731,
        "last_modified": "2025-10-07T19:50:38.744Z"
      },
      "analysis_enhanced": {
        "complexity_score": 2,
        "detected_issues": [],
        "semantic_tags": [
          "typescript",
          "express",
          "validation"
        ],
        "needs_ai_summary": true,
        "priority": "medium",
        "summary_type": "ai-generated",
        "code_snippet": "import { CustomRequest } from \"@src/types\";\nimport Joi from \"joi\";\nimport { validateSchema } from \"./schema-validation\";\nimport { NextFunction, Response } from \"express\";\nconst basicUserSchema = Joi.object({\n  email: Joi.string().required(),\n  password: Joi.string().required(),\n});\n\nexport const userValidation = (\n  req: CustomRequest,\n  res: Response,\n  next: NextFunction,\n) => {\n  const schema = Joi.object({\n    name: Joi.string().required(),\n  }).concat(basicUserSchema);\n\n  validateSchema({ schema, req, next });\n};\n\nexport const userLoginValidation = (\n  req: CustomRequest,\n  res: Response,\n  next: NextFunction,\n) => {\n  const schema = Joi.object({}).concat(basicUserSchema);\n  validateSchema({ schema, req, next });\n};\n",
        "full_content": "import { CustomRequest } from \"@src/types\";\nimport Joi from \"joi\";\nimport { validateSchema } from \"./schema-validation\";\nimport { NextFunction, Response } from \"express\";\nconst basicUserSchema = Joi.object({\n  email: Joi.string().required(),\n  password: Joi.string().required(),\n});\n\nexport const userValidation = (\n  req: CustomRequest,\n  res: Response,\n  next: NextFunction,\n) => {\n  const schema = Joi.object({\n    name: Joi.string().required(),\n  }).concat(basicUserSchema);\n\n  validateSchema({ schema, req, next });\n};\n\nexport const userLoginValidation = (\n  req: CustomRequest,\n  res: Response,\n  next: NextFunction,\n) => {\n  const schema = Joi.object({}).concat(basicUserSchema);\n  validateSchema({ schema, req, next });\n};\n"
      }
    },
    {
      "file_path": "job-manager/tsconfig.json",
      "relative_path": "job-manager/tsconfig.json",
      "language": "json",
      "imports": [],
      "exports": [],
      "classes": [],
      "functions": [],
      "variables": [],
      "description": "JSON configuration or data file",
      "lines_of_code": 116,
      "metadata": {
        "size_bytes": 12624,
        "last_modified": "2025-10-07T19:50:38.744Z"
      },
      "analysis_enhanced": {
        "complexity_score": 0,
        "detected_issues": [],
        "semantic_tags": [
          "json"
        ],
        "needs_ai_summary": false,
        "priority": "low",
        "summary_type": "rule-based",
        "code_snippet": "{\n  \"compilerOptions\": {\n    /* Visit https://aka.ms/tsconfig to read more about this file */\n    \"paths\": {\n      \"@src/*\": [\"./src/*\"]\n    },\n    /* Projects */\n    // \"incremental\": true,                              /* Save .tsbuildinfo files to allow for incremental compilation of projects. */\n    // \"composite\": true,                                /* Enable constraints that allow a TypeScript project to be used with project references. */\n    // \"tsBuildInfoFile\": \"./.tsbuildinfo\",              /* Specify the path to .tsbuildinfo incremental compilation file. */\n    // \"disableSourceOfProjectReferenceRedirect\": true,  /* Disable preferring source files instead of declaration files when referencing composite projects. */\n    // \"disableSolutionSearching\": true,                 /* Opt a project out of multi-project reference checking when editing. */\n    // \"disableReferencedProjectLoad\": true,             /* Reduce the number of projects loaded automatically by TypeScript. */\n\n    /* Language and Environment */\n    \"target\": \"es2016\" /* Set the JavaScript language version for emitted JavaScript and include compatible library declarations. */,\n    // \"lib\": [],                                        /* Specify a set of bundled library declaration files that describe the target runtime environment. */\n    // \"jsx\": \"preserve\",                                /* Specify what JSX code is generated. */\n    // \"libReplacement\": true,                           /* Enable lib replacement. */\n    // \"experimentalDecorators\": true,                   /* Enable experimental support for legacy experimental decorators. */\n    // \"emitDecoratorMetadata\": true,                    /* Emit design-type metadata for decorated declarations in source files. */\n    // \"jsxFactory\": \"\",                                 /* Specify the JSX factory function used when targeting React JSX emit, e.g. 'React.createElement' or 'h'. */\n    // \"jsxFragmentFactory\": \"\",                         /* ",
        "full_content": "{\n  \"compilerOptions\": {\n    /* Visit https://aka.ms/tsconfig to read more about this file */\n    \"paths\": {\n      \"@src/*\": [\"./src/*\"]\n    },\n    /* Projects */\n    // \"incremental\": true,                              /* Save .tsbuildinfo files to allow for incremental compilation of projects. */\n    // \"composite\": true,                                /* Enable constraints that allow a TypeScript project to be used with project references. */\n    // \"tsBuildInfoFile\": \"./.tsbuildinfo\",              /* Specify the path to .tsbuildinfo incremental compilation file. */\n    // \"disableSourceOfProjectReferenceRedirect\": true,  /* Disable preferring source files instead of declaration files when referencing composite projects. */\n    // \"disableSolutionSearching\": true,                 /* Opt a project out of multi-project reference checking when editing. */\n    // \"disableReferencedProjectLoad\": true,             /* Reduce the number of projects loaded automatically by TypeScript. */\n\n    /* Language and Environment */\n    \"target\": \"es2016\" /* Set the JavaScript language version for emitted JavaScript and include compatible library declarations. */,\n    // \"lib\": [],                                        /* Specify a set of bundled library declaration files that describe the target runtime environment. */\n    // \"jsx\": \"preserve\",                                /* Specify what JSX code is generated. */\n    // \"libReplacement\": true,                           /* Enable lib replacement. */\n    // \"experimentalDecorators\": true,                   /* Enable experimental support for legacy experimental decorators. */\n    // \"emitDecoratorMetadata\": true,                    /* Emit design-type metadata for decorated declarations in source files. */\n    // \"jsxFactory\": \"\",                                 /* Specify the JSX factory function used when targeting React JSX emit, e.g. 'React.createElement' or 'h'. */\n    // \"jsxFragmentFactory\": \"\",                         /* Specify the JSX Fragment reference used for fragments when targeting React JSX emit e.g. 'React.Fragment' or 'Fragment'. */\n    // \"jsxImportSource\": \"\",                            /* Specify module specifier used to import the JSX factory functions when using 'jsx: react-jsx*'. */\n    // \"reactNamespace\": \"\",                             /* Specify the object invoked for 'createElement'. This only applies when targeting 'react' JSX emit. */\n    // \"noLib\": true,                                    /* Disable including any library files, including the default lib.d.ts. */\n    // \"useDefineForClassFields\": true,                  /* Emit ECMAScript-standard-compliant class fields. */\n    // \"moduleDetection\": \"auto\",                        /* Control what method is used to detect module-format JS files. */\n\n    /* Modules */\n    \"module\": \"commonjs\" /* Specify what module code is generated. */,\n    \"rootDir\": \"./src\" /* Specify the root folder within your source files. */,\n    // \"moduleResolution\": \"node10\",                     /* Specify how TypeScript looks up a file from a given module specifier. */\n    // \"baseUrl\": \"./\",                                  /* Specify the base directory to resolve non-relative module names. */\n    // \"paths\": {},                                      /* Specify a set of entries that re-map imports to additional lookup locations. */\n    // \"rootDirs\": [],                                   /* Allow multiple folders to be treated as one when resolving modules. */\n    // \"typeRoots\": [],                                  /* Specify multiple folders that act like './node_modules/@types'. */\n    // \"types\": [],                                      /* Specify type package names to be included without being referenced in a source file. */\n    // \"allowUmdGlobalAccess\": true,                     /* Allow accessing UMD globals from modules. */\n    // \"moduleSuffixes\": [],                             /* List of file name suffixes to search when resolving a module. */\n    // \"allowImportingTsExtensions\": true,               /* Allow imports to include TypeScript file extensions. Requires '--moduleResolution bundler' and either '--noEmit' or '--emitDeclarationOnly' to be set. */\n    // \"rewriteRelativeImportExtensions\": true,          /* Rewrite '.ts', '.tsx', '.mts', and '.cts' file extensions in relative import paths to their JavaScript equivalent in output files. */\n    // \"resolvePackageJsonExports\": true,                /* Use the package.json 'exports' field when resolving package imports. */\n    // \"resolvePackageJsonImports\": true,                /* Use the package.json 'imports' field when resolving imports. */\n    // \"customConditions\": [],                           /* Conditions to set in addition to the resolver-specific defaults when resolving imports. */\n    // \"noUncheckedSideEffectImports\": true,             /* Check side effect imports. */\n    // \"resolveJsonModule\": true,                        /* Enable importing .json files. */\n    // \"allowArbitraryExtensions\": true,                 /* Enable importing files with any extension, provided a declaration file is present. */\n    // \"noResolve\": true,                                /* Disallow 'import's, 'require's or '<reference>'s from expanding the number of files TypeScript should add to a project. */\n\n    /* JavaScript Support */\n    // \"allowJs\": true,                                  /* Allow JavaScript files to be a part of your program. Use the 'checkJS' option to get errors from these files. */\n    // \"checkJs\": true,                                  /* Enable error reporting in type-checked JavaScript files. */\n    // \"maxNodeModuleJsDepth\": 1,                        /* Specify the maximum folder depth used for checking JavaScript files from 'node_modules'. Only applicable with 'allowJs'. */\n\n    /* Emit */\n    // \"declaration\": true,                              /* Generate .d.ts files from TypeScript and JavaScript files in your project. */\n    // \"declarationMap\": true,                           /* Create sourcemaps for d.ts files. */\n    // \"emitDeclarationOnly\": true,                      /* Only output d.ts files and not JavaScript files. */\n    // \"sourceMap\": true,                                /* Create source map files for emitted JavaScript files. */\n    // \"inlineSourceMap\": true,                          /* Include sourcemap files inside the emitted JavaScript. */\n    // \"noEmit\": true,                                   /* Disable emitting files from a compilation. */\n    // \"outFile\": \"./\",                                  /* Specify a file that bundles all outputs into one JavaScript file. If 'declaration' is true, also designates a file that bundles all .d.ts output. */\n    \"outDir\": \"./dist\" /* Specify an output folder for all emitted files. */,\n    // \"removeComments\": true,                           /* Disable emitting comments. */\n    // \"importHelpers\": true,                            /* Allow importing helper functions from tslib once per project, instead of including them per-file. */\n    // \"downlevelIteration\": true,                       /* Emit more compliant, but verbose and less performant JavaScript for iteration. */\n    // \"sourceRoot\": \"\",                                 /* Specify the root path for debuggers to find the reference source code. */\n    // \"mapRoot\": \"\",                                    /* Specify the location where debugger should locate map files instead of generated locations. */\n    // \"inlineSources\": true,                            /* Include source code in the sourcemaps inside the emitted JavaScript. */\n    // \"emitBOM\": true,                                  /* Emit a UTF-8 Byte Order Mark (BOM) in the beginning of output files. */\n    // \"newLine\": \"crlf\",                                /* Set the newline character for emitting files. */\n    // \"stripInternal\": true,                            /* Disable emitting declarations that have '@internal' in their JSDoc comments. */\n    // \"noEmitHelpers\": true,                            /* Disable generating custom helper functions like '__extends' in compiled output. */\n    // \"noEmitOnError\": true,                            /* Disable emitting files if any type checking errors are reported. */\n    // \"preserveConstEnums\": true,                       /* Disable erasing 'const enum' declarations in generated code. */\n    // \"declarationDir\": \"./\",                           /* Specify the output directory for generated declaration files. */\n\n    /* Interop Constraints */\n    // \"isolatedModules\": true,                          /* Ensure that each file can be safely transpiled without relying on other imports. */\n    // \"verbatimModuleSyntax\": true,                     /* Do not transform or elide any imports or exports not marked as type-only, ensuring they are written in the output file's format based on the 'module' setting. */\n    // \"isolatedDeclarations\": true,                     /* Require sufficient annotation on exports so other tools can trivially generate declaration files. */\n    // \"erasableSyntaxOnly\": true,                       /* Do not allow runtime constructs that are not part of ECMAScript. */\n    // \"allowSyntheticDefaultImports\": true,             /* Allow 'import x from y' when a module doesn't have a default export. */\n    \"esModuleInterop\": true /* Emit additional JavaScript to ease support for importing CommonJS modules. This enables 'allowSyntheticDefaultImports' for type compatibility. */,\n    // \"preserveSymlinks\": true,                         /* Disable resolving symlinks to their realpath. This correlates to the same flag in node. */\n    \"forceConsistentCasingInFileNames\": true /* Ensure that casing is correct in imports. */,\n\n    /* Type Checking */\n    \"strict\": true /* Enable all strict type-checking options. */,\n    // \"noImplicitAny\": true,                            /* Enable error reporting for expressions and declarations with an implied 'any' type. */\n    // \"strictNullChecks\": true,                         /* When type checking, take into account 'null' and 'undefined'. */\n    // \"strictFunctionTypes\": true,                      /* When assigning functions, check to ensure parameters and the return values are subtype-compatible. */\n    // \"strictBindCallApply\": true,                      /* Check that the arguments for 'bind', 'call', and 'apply' methods match the original function. */\n    // \"strictPropertyInitialization\": true,             /* Check for class properties that are declared but not set in the constructor. */\n    // \"strictBuiltinIteratorReturn\": true,              /* Built-in iterators are instantiated with a 'TReturn' type of 'undefined' instead of 'any'. */\n    // \"noImplicitThis\": true,                           /* Enable error reporting when 'this' is given the type 'any'. */\n    // \"useUnknownInCatchVariables\": true,               /* Default catch clause variables as 'unknown' instead of 'any'. */\n    // \"alwaysStrict\": true,                             /* Ensure 'use strict' is always emitted. */\n    // \"noUnusedLocals\": true,                           /* Enable error reporting when local variables aren't read. */\n    // \"noUnusedParameters\": true,                       /* Raise an error when a function parameter isn't read. */\n    // \"exactOptionalPropertyTypes\": true,               /* Interpret optional property types as written, rather than adding 'undefined'. */\n    // \"noImplicitReturns\": true,                        /* Enable error reporting for codepaths that do not explicitly return in a function. */\n    // \"noFallthroughCasesInSwitch\": true,               /* Enable error reporting for fallthrough cases in switch statements. */\n    // \"noUncheckedIndexedAccess\": true,                 /* Add 'undefined' to a type when accessed using an index. */\n    // \"noImplicitOverride\": true,                       /* Ensure overriding members in derived classes are marked with an override modifier. */\n    // \"noPropertyAccessFromIndexSignature\": true,       /* Enforces using indexed accessors for keys declared using an indexed type. */\n    // \"allowUnusedLabels\": true,                        /* Disable error reporting for unused labels. */\n    // \"allowUnreachableCode\": true,                     /* Disable error reporting for unreachable code. */\n\n    /* Completeness */\n    // \"skipDefaultLibCheck\": true,                      /* Skip type checking .d.ts files that are included with TypeScript. */\n    \"skipLibCheck\": true /* Skip type checking all .d.ts files. */\n  }\n}\n"
      }
    },
    {
      "file_path": "job-worker/jest.config.ts",
      "relative_path": "job-worker/jest.config.ts",
      "language": "typescript",
      "imports": [],
      "exports": [],
      "classes": [],
      "functions": [],
      "variables": [
        "{ createDefaultPreset, pathsToModuleNameMapper }",
        "{ compilerOptions }",
        "tsJestTransformCfg"
      ],
      "description": "Configuration file defining 0 settings and options",
      "lines_of_code": 17,
      "metadata": {
        "size_bytes": 496,
        "last_modified": "2025-10-07T19:50:38.745Z"
      },
      "analysis_enhanced": {
        "complexity_score": 0,
        "detected_issues": [],
        "semantic_tags": [
          "typescript"
        ],
        "needs_ai_summary": false,
        "priority": "low",
        "summary_type": "rule-based",
        "code_snippet": "const { createDefaultPreset, pathsToModuleNameMapper } = require(\"ts-jest\");\nconst { compilerOptions } = require(\"./tsconfig.json\");\nconst tsJestTransformCfg = createDefaultPreset().transform;\n\n/** @type {import(\"jest\").Config} **/\nmodule.exports = {\n  preset: \"ts-jest\",\n  testEnvironment: \"node\",\n  moduleNameMapper: pathsToModuleNameMapper(compilerOptions.paths, {\n    prefix: \"<rootDir>/\",\n  }),\n  moduleFileExtensions: [\"ts\", \"js\", \"json\"],\n  transform: {\n    ...tsJestTransformCfg,\n  },\n};\n",
        "full_content": "const { createDefaultPreset, pathsToModuleNameMapper } = require(\"ts-jest\");\nconst { compilerOptions } = require(\"./tsconfig.json\");\nconst tsJestTransformCfg = createDefaultPreset().transform;\n\n/** @type {import(\"jest\").Config} **/\nmodule.exports = {\n  preset: \"ts-jest\",\n  testEnvironment: \"node\",\n  moduleNameMapper: pathsToModuleNameMapper(compilerOptions.paths, {\n    prefix: \"<rootDir>/\",\n  }),\n  moduleFileExtensions: [\"ts\", \"js\", \"json\"],\n  transform: {\n    ...tsJestTransformCfg,\n  },\n};\n"
      }
    },
    {
      "file_path": "job-worker/nodemon.json",
      "relative_path": "job-worker/nodemon.json",
      "language": "json",
      "imports": [],
      "exports": [],
      "classes": [],
      "functions": [],
      "variables": [],
      "description": "JSON configuration or data file",
      "lines_of_code": 10,
      "metadata": {
        "size_bytes": 183,
        "last_modified": "2025-10-07T19:50:38.745Z"
      },
      "analysis_enhanced": {
        "complexity_score": 0,
        "detected_issues": [],
        "semantic_tags": [
          "json"
        ],
        "needs_ai_summary": false,
        "priority": "low",
        "summary_type": "rule-based",
        "code_snippet": "{\n  \"watch\": [\"src\"],\n  \"ext\": \"ts,js,json\",\n  \"ignore\": [\"node_modules\", \"dist\"],\n  \"exec\": \"ts-node -r tsconfig-paths/register src/index.ts\",\n  \"env\": {\n    \"NODE_ENV\": \"dev\"\n  }\n}\n",
        "full_content": "{\n  \"watch\": [\"src\"],\n  \"ext\": \"ts,js,json\",\n  \"ignore\": [\"node_modules\", \"dist\"],\n  \"exec\": \"ts-node -r tsconfig-paths/register src/index.ts\",\n  \"env\": {\n    \"NODE_ENV\": \"dev\"\n  }\n}\n"
      }
    },
    {
      "file_path": "job-worker/package.json",
      "relative_path": "job-worker/package.json",
      "language": "json",
      "imports": [],
      "exports": [],
      "classes": [],
      "functions": [],
      "variables": [],
      "description": "JSON configuration or data file",
      "lines_of_code": 39,
      "metadata": {
        "size_bytes": 883,
        "last_modified": "2025-10-07T19:50:38.745Z"
      },
      "analysis_enhanced": {
        "complexity_score": 0,
        "detected_issues": [],
        "semantic_tags": [
          "json",
          "authentication",
          "caching",
          "background-jobs"
        ],
        "needs_ai_summary": false,
        "priority": "low",
        "summary_type": "rule-based",
        "code_snippet": "{\n  \"name\": \"job-worker\",\n  \"version\": \"1.0.0\",\n  \"description\": \"\",\n  \"main\": \"index.js\",\n  \"scripts\": {\n    \"test\": \"jest\",\n    \"start\": \"tsc -b && tsc-alias && node dist/index.js\",\n    \"dev\": \"nodemon\",\n    \"build\": \"tsc -b\"\n  },\n  \"keywords\": [],\n  \"author\": \"\",\n  \"license\": \"ISC\",\n  \"packageManager\": \"pnpm@10.12.3\",\n  \"dependencies\": {\n    \"@prisma/client\": \"^6.11.1\",\n    \"dotenv\": \"^17.1.0\",\n    \"express\": \"^5.1.0\",\n    \"ioredis\": \"^5.6.1\",\n    \"pidusage\": \"^4.0.1\",\n    \"prisma\": \"^6.11.1\",\n    \"socket.io-client\": \"^4.8.1\",\n    \"ts-node\": \"^10.9.2\",\n    \"tsc-alias\": \"^1.8.16\",\n    \"tsconfig-paths\": \"^4.2.0\",\n    \"typescript\": \"^5.8.3\"\n  },\n  \"devDependencies\": {\n    \"@types/express\": \"^5.0.3\",\n    \"@types/jest\": \"^30.0.0\",\n    \"@types/node\": \"^24.0.12\",\n    \"@types/pidusage\": \"^2.0.5\",\n    \"jest\": \"^30.0.4\",\n    \"nodemon\": \"^3.1.10\",\n    \"ts-jest\": \"^29.4.0\"\n  }\n}\n",
        "full_content": "{\n  \"name\": \"job-worker\",\n  \"version\": \"1.0.0\",\n  \"description\": \"\",\n  \"main\": \"index.js\",\n  \"scripts\": {\n    \"test\": \"jest\",\n    \"start\": \"tsc -b && tsc-alias && node dist/index.js\",\n    \"dev\": \"nodemon\",\n    \"build\": \"tsc -b\"\n  },\n  \"keywords\": [],\n  \"author\": \"\",\n  \"license\": \"ISC\",\n  \"packageManager\": \"pnpm@10.12.3\",\n  \"dependencies\": {\n    \"@prisma/client\": \"^6.11.1\",\n    \"dotenv\": \"^17.1.0\",\n    \"express\": \"^5.1.0\",\n    \"ioredis\": \"^5.6.1\",\n    \"pidusage\": \"^4.0.1\",\n    \"prisma\": \"^6.11.1\",\n    \"socket.io-client\": \"^4.8.1\",\n    \"ts-node\": \"^10.9.2\",\n    \"tsc-alias\": \"^1.8.16\",\n    \"tsconfig-paths\": \"^4.2.0\",\n    \"typescript\": \"^5.8.3\"\n  },\n  \"devDependencies\": {\n    \"@types/express\": \"^5.0.3\",\n    \"@types/jest\": \"^30.0.0\",\n    \"@types/node\": \"^24.0.12\",\n    \"@types/pidusage\": \"^2.0.5\",\n    \"jest\": \"^30.0.4\",\n    \"nodemon\": \"^3.1.10\",\n    \"ts-jest\": \"^29.4.0\"\n  }\n}\n"
      }
    },
    {
      "file_path": "job-worker/pnpm-lock.yaml",
      "relative_path": "job-worker/pnpm-lock.yaml",
      "language": "yaml",
      "imports": [],
      "exports": [],
      "classes": [],
      "functions": [],
      "variables": [],
      "description": "YAML configuration file",
      "lines_of_code": 4207,
      "metadata": {
        "size_bytes": 137487,
        "last_modified": "2025-10-07T19:50:38.745Z"
      },
      "analysis_enhanced": {
        "complexity_score": 0,
        "detected_issues": [],
        "semantic_tags": [
          "yaml",
          "routing",
          "validation",
          "caching",
          "background-jobs"
        ],
        "needs_ai_summary": false,
        "priority": "low",
        "summary_type": "rule-based",
        "code_snippet": "lockfileVersion: '9.0'\n\nsettings:\n  autoInstallPeers: true\n  excludeLinksFromLockfile: false\n\nimporters:\n\n  .:\n    dependencies:\n      '@prisma/client':\n        specifier: ^6.11.1\n        version: 6.11.1(prisma@6.11.1(typescript@5.8.3))(typescript@5.8.3)\n      dotenv:\n        specifier: ^17.1.0\n        version: 17.1.0\n      express:\n        specifier: ^5.1.0\n        version: 5.1.0\n      ioredis:\n        specifier: ^5.6.1\n        version: 5.6.1\n      pidusage:\n        specifier: ^4.0.1\n        version: 4.0.1\n      prisma:\n        specifier: ^6.11.1\n        version: 6.11.1(typescript@5.8.3)\n      socket.io-client:\n        specifier: ^4.8.1\n        version: 4.8.1\n      ts-node:\n        specifier: ^10.9.2\n        version: 10.9.2(@types/node@24.0.12)(typescript@5.8.3)\n      tsc-alias:\n        specifier: ^1.8.16\n        version: 1.8.16\n      tsconfig-paths:\n        specifier: ^4.2.0\n        version: 4.2.0\n      typescript:\n        specifier: ^5.8.3\n        version: 5.8.3\n    devDependencies:\n      '@types/express':\n        specifier: ^5.0.3\n        version: 5.0.3\n      '@types/jest':\n        specifier: ^30.0.0\n        version: 30.0.0\n      '@types/node':\n        specifier: ^24.0.12\n        version: 24.0.12\n      '@types/pidusage':\n        specifier: ^2.0.5\n        version: 2.0.5\n      jest:\n        specifier: ^30.0.4\n        version: 30.0.4(@types/node@24.0.12)(ts-node@10.9.2(@types/node@24.0.12)(typescript@5.8.3))\n      nodemon:\n        specifier: ^3.1.10\n        version: 3.1.10\n      ts-jest:\n        specifier: ^29.4.0\n        version: 29.4.0(@babel/core@7.28.0)(@jest/transform@30.0.4)(@jest/types@30.0.1)(babel-jest@30.0.4(@babel/core@7.28.0))(jest-util@30.0.2)(jest@30.0.4(@types/node@24.0.12)(ts-node@10.9.2(@types/node@24.0.12)(typescript@5.8.3)))(typescript@5.8.3)\n\npackages:\n\n  '@ampproject/remapping@2.3.0':\n    resolution: {integrity: sha512-30iZtAPgz+LTIYoeivqYo853f02jBYSd5uGnGpkFV0M3xOt9aN73erkgYAmZU43x4VfqcnLxW9Kpg3R5LC4YYw==}\n    engines: {node: '>=6.0.0'}\n\n  '@b",
        "full_content": "lockfileVersion: '9.0'\n\nsettings:\n  autoInstallPeers: true\n  excludeLinksFromLockfile: false\n\nimporters:\n\n  .:\n    dependencies:\n      '@prisma/client':\n        specifier: ^6.11.1\n        version: 6.11.1(prisma@6.11.1(typescript@5.8.3))(typescript@5.8.3)\n      dotenv:\n        specifier: ^17.1.0\n        version: 17.1.0\n      express:\n        specifier: ^5.1.0\n        version: 5.1.0\n      ioredis:\n        specifier: ^5.6.1\n        version: 5.6.1\n      pidusage:\n        specifier: ^4.0.1\n        version: 4.0.1\n      prisma:\n        specifier: ^6.11.1\n        version: 6.11.1(typescript@5.8.3)\n      socket.io-client:\n        specifier: ^4.8.1\n        version: 4.8.1\n      ts-node:\n        specifier: ^10.9.2\n        version: 10.9.2(@types/node@24.0.12)(typescript@5.8.3)\n      tsc-alias:\n        specifier: ^1.8.16\n        version: 1.8.16\n      tsconfig-paths:\n        specifier: ^4.2.0\n        version: 4.2.0\n      typescript:\n        specifier: ^5.8.3\n        version: 5.8.3\n    devDependencies:\n      '@types/express':\n        specifier: ^5.0.3\n        version: 5.0.3\n      '@types/jest':\n        specifier: ^30.0.0\n        version: 30.0.0\n      '@types/node':\n        specifier: ^24.0.12\n        version: 24.0.12\n      '@types/pidusage':\n        specifier: ^2.0.5\n        version: 2.0.5\n      jest:\n        specifier: ^30.0.4\n        version: 30.0.4(@types/node@24.0.12)(ts-node@10.9.2(@types/node@24.0.12)(typescript@5.8.3))\n      nodemon:\n        specifier: ^3.1.10\n        version: 3.1.10\n      ts-jest:\n        specifier: ^29.4.0\n        version: 29.4.0(@babel/core@7.28.0)(@jest/transform@30.0.4)(@jest/types@30.0.1)(babel-jest@30.0.4(@babel/core@7.28.0))(jest-util@30.0.2)(jest@30.0.4(@types/node@24.0.12)(ts-node@10.9.2(@types/node@24.0.12)(typescript@5.8.3)))(typescript@5.8.3)\n\npackages:\n\n  '@ampproject/remapping@2.3.0':\n    resolution: {integrity: sha512-30iZtAPgz+LTIYoeivqYo853f02jBYSd5uGnGpkFV0M3xOt9aN73erkgYAmZU43x4VfqcnLxW9Kpg3R5LC4YYw==}\n    engines: {node: '>=6.0.0'}\n\n  '@babel/code-frame@7.27.1':\n    resolution: {integrity: sha512-cjQ7ZlQ0Mv3b47hABuTevyTuYN4i+loJKGeV9flcCgIK37cCXRh+L1bd3iBHlynerhQ7BhCkn2BPbQUL+rGqFg==}\n    engines: {node: '>=6.9.0'}\n\n  '@babel/compat-data@7.28.0':\n    resolution: {integrity: sha512-60X7qkglvrap8mn1lh2ebxXdZYtUcpd7gsmy9kLaBJ4i/WdY8PqTSdxyA8qraikqKQK5C1KRBKXqznrVapyNaw==}\n    engines: {node: '>=6.9.0'}\n\n  '@babel/core@7.28.0':\n    resolution: {integrity: sha512-UlLAnTPrFdNGoFtbSXwcGFQBtQZJCNjaN6hQNP3UPvuNXT1i82N26KL3dZeIpNalWywr9IuQuncaAfUaS1g6sQ==}\n    engines: {node: '>=6.9.0'}\n\n  '@babel/generator@7.28.0':\n    resolution: {integrity: sha512-lJjzvrbEeWrhB4P3QBsH7tey117PjLZnDbLiQEKjQ/fNJTjuq4HSqgFA+UNSwZT8D7dxxbnuSBMsa1lrWzKlQg==}\n    engines: {node: '>=6.9.0'}\n\n  '@babel/helper-compilation-targets@7.27.2':\n    resolution: {integrity: sha512-2+1thGUUWWjLTYTHZWK1n8Yga0ijBz1XAhUXcKy81rd5g6yh7hGqMp45v7cadSbEHc9G3OTv45SyneRN3ps4DQ==}\n    engines: {node: '>=6.9.0'}\n\n  '@babel/helper-globals@7.28.0':\n    resolution: {integrity: sha512-+W6cISkXFa1jXsDEdYA8HeevQT/FULhxzR99pxphltZcVaugps53THCeiWA8SguxxpSp3gKPiuYfSWopkLQ4hw==}\n    engines: {node: '>=6.9.0'}\n\n  '@babel/helper-module-imports@7.27.1':\n    resolution: {integrity: sha512-0gSFWUPNXNopqtIPQvlD5WgXYI5GY2kP2cCvoT8kczjbfcfuIljTbcWrulD1CIPIX2gt1wghbDy08yE1p+/r3w==}\n    engines: {node: '>=6.9.0'}\n\n  '@babel/helper-module-transforms@7.27.3':\n    resolution: {integrity: sha512-dSOvYwvyLsWBeIRyOeHXp5vPj5l1I011r52FM1+r1jCERv+aFXYk4whgQccYEGYxK2H3ZAIA8nuPkQ0HaUo3qg==}\n    engines: {node: '>=6.9.0'}\n    peerDependencies:\n      '@babel/core': ^7.0.0\n\n  '@babel/helper-plugin-utils@7.27.1':\n    resolution: {integrity: sha512-1gn1Up5YXka3YYAHGKpbideQ5Yjf1tDa9qYcgysz+cNCXukyLl6DjPXhD3VRwSb8c0J9tA4b2+rHEZtc6R0tlw==}\n    engines: {node: '>=6.9.0'}\n\n  '@babel/helper-string-parser@7.27.1':\n    resolution: {integrity: sha512-qMlSxKbpRlAridDExk92nSobyDdpPijUq2DW6oDnUqd0iOGxmQjyqhMIihI9+zv4LPyZdRje2cavWPbCbWm3eA==}\n    engines: {node: '>=6.9.0'}\n\n  '@babel/helper-validator-identifier@7.27.1':\n    resolution: {integrity: sha512-D2hP9eA+Sqx1kBZgzxZh0y1trbuU+JoDkiEwqhQ36nodYqJwyEIhPSdMNd7lOm/4io72luTPWH20Yda0xOuUow==}\n    engines: {node: '>=6.9.0'}\n\n  '@babel/helper-validator-option@7.27.1':\n    resolution: {integrity: sha512-YvjJow9FxbhFFKDSuFnVCe2WxXk1zWc22fFePVNEaWJEu8IrZVlda6N0uHwzZrUM1il7NC9Mlp4MaJYbYd9JSg==}\n    engines: {node: '>=6.9.0'}\n\n  '@babel/helpers@7.27.6':\n    resolution: {integrity: sha512-muE8Tt8M22638HU31A3CgfSUciwz1fhATfoVai05aPXGor//CdWDCbnlY1yvBPo07njuVOCNGCSp/GTt12lIug==}\n    engines: {node: '>=6.9.0'}\n\n  '@babel/parser@7.28.0':\n    resolution: {integrity: sha512-jVZGvOxOuNSsuQuLRTh13nU0AogFlw32w/MT+LV6D3sP5WdbW61E77RnkbaO2dUvmPAYrBDJXGn5gGS6tH4j8g==}\n    engines: {node: '>=6.0.0'}\n    hasBin: true\n\n  '@babel/plugin-syntax-async-generators@7.8.4':\n    resolution: {integrity: sha512-tycmZxkGfZaxhMRbXlPXuVFpdWlXpir2W4AMhSJgRKzk/eDlIXOhb2LHWoLpDF7TEHylV5zNhykX6KAgHJmTNw==}\n    peerDependencies:\n      '@babel/core': ^7.0.0-0\n\n  '@babel/plugin-syntax-bigint@7.8.3':\n    resolution: {integrity: sha512-wnTnFlG+YxQm3vDxpGE57Pj0srRU4sHE/mDkt1qv2YJJSeUAec2ma4WLUnUPeKjyrfntVwe/N6dCXpU+zL3Npg==}\n    peerDependencies:\n      '@babel/core': ^7.0.0-0\n\n  '@babel/plugin-syntax-class-properties@7.12.13':\n    resolution: {integrity: sha512-fm4idjKla0YahUNgFNLCB0qySdsoPiZP3iQE3rky0mBUtMZ23yDJ9SJdg6dXTSDnulOVqiF3Hgr9nbXvXTQZYA==}\n    peerDependencies:\n      '@babel/core': ^7.0.0-0\n\n  '@babel/plugin-syntax-class-static-block@7.14.5':\n    resolution: {integrity: sha512-b+YyPmr6ldyNnM6sqYeMWE+bgJcJpO6yS4QD7ymxgH34GBPNDM/THBh8iunyvKIZztiwLH4CJZ0RxTk9emgpjw==}\n    engines: {node: '>=6.9.0'}\n    peerDependencies:\n      '@babel/core': ^7.0.0-0\n\n  '@babel/plugin-syntax-import-attributes@7.27.1':\n    resolution: {integrity: sha512-oFT0FrKHgF53f4vOsZGi2Hh3I35PfSmVs4IBFLFj4dnafP+hIWDLg3VyKmUHfLoLHlyxY4C7DGtmHuJgn+IGww==}\n    engines: {node: '>=6.9.0'}\n    peerDependencies:\n      '@babel/core': ^7.0.0-0\n\n  '@babel/plugin-syntax-import-meta@7.10.4':\n    resolution: {integrity: sha512-Yqfm+XDx0+Prh3VSeEQCPU81yC+JWZ2pDPFSS4ZdpfZhp4MkFMaDC1UqseovEKwSUpnIL7+vK+Clp7bfh0iD7g==}\n    peerDependencies:\n      '@babel/core': ^7.0.0-0\n\n  '@babel/plugin-syntax-json-strings@7.8.3':\n    resolution: {integrity: sha512-lY6kdGpWHvjoe2vk4WrAapEuBR69EMxZl+RoGRhrFGNYVK8mOPAW8VfbT/ZgrFbXlDNiiaxQnAtgVCZ6jv30EA==}\n    peerDependencies:\n      '@babel/core': ^7.0.0-0\n\n  '@babel/plugin-syntax-jsx@7.27.1':\n    resolution: {integrity: sha512-y8YTNIeKoyhGd9O0Jiyzyyqk8gdjnumGTQPsz0xOZOQ2RmkVJeZ1vmmfIvFEKqucBG6axJGBZDE/7iI5suUI/w==}\n    engines: {node: '>=6.9.0'}\n    peerDependencies:\n      '@babel/core': ^7.0.0-0\n\n  '@babel/plugin-syntax-logical-assignment-operators@7.10.4':\n    resolution: {integrity: sha512-d8waShlpFDinQ5MtvGU9xDAOzKH47+FFoney2baFIoMr952hKOLp1HR7VszoZvOsV/4+RRszNY7D17ba0te0ig==}\n    peerDependencies:\n      '@babel/core': ^7.0.0-0\n\n  '@babel/plugin-syntax-nullish-coalescing-operator@7.8.3':\n    resolution: {integrity: sha512-aSff4zPII1u2QD7y+F8oDsz19ew4IGEJg9SVW+bqwpwtfFleiQDMdzA/R+UlWDzfnHFCxxleFT0PMIrR36XLNQ==}\n    peerDependencies:\n      '@babel/core': ^7.0.0-0\n\n  '@babel/plugin-syntax-numeric-separator@7.10.4':\n    resolution: {integrity: sha512-9H6YdfkcK/uOnY/K7/aA2xpzaAgkQn37yzWUMRK7OaPOqOpGS1+n0H5hxT9AUw9EsSjPW8SVyMJwYRtWs3X3ug==}\n    peerDependencies:\n      '@babel/core': ^7.0.0-0\n\n  '@babel/plugin-syntax-object-rest-spread@7.8.3':\n    resolution: {integrity: sha512-XoqMijGZb9y3y2XskN+P1wUGiVwWZ5JmoDRwx5+3GmEplNyVM2s2Dg8ILFQm8rWM48orGy5YpI5Bl8U1y7ydlA==}\n    peerDependencies:\n      '@babel/core': ^7.0.0-0\n\n  '@babel/plugin-syntax-optional-catch-binding@7.8.3':\n    resolution: {integrity: sha512-6VPD0Pc1lpTqw0aKoeRTMiB+kWhAoT24PA+ksWSBrFtl5SIRVpZlwN3NNPQjehA2E/91FV3RjLWoVTglWcSV3Q==}\n    peerDependencies:\n      '@babel/core': ^7.0.0-0\n\n  '@babel/plugin-syntax-optional-chaining@7.8.3':\n    resolution: {integrity: sha512-KoK9ErH1MBlCPxV0VANkXW2/dw4vlbGDrFgz8bmUsBGYkFRcbRwMh6cIJubdPrkxRwuGdtCk0v/wPTKbQgBjkg==}\n    peerDependencies:\n      '@babel/core': ^7.0.0-0\n\n  '@babel/plugin-syntax-private-property-in-object@7.14.5':\n    resolution: {integrity: sha512-0wVnp9dxJ72ZUJDV27ZfbSj6iHLoytYZmh3rFcxNnvsJF3ktkzLDZPy/mA17HGsaQT3/DQsWYX1f1QGWkCoVUg==}\n    engines: {node: '>=6.9.0'}\n    peerDependencies:\n      '@babel/core': ^7.0.0-0\n\n  '@babel/plugin-syntax-top-level-await@7.14.5':\n    resolution: {integrity: sha512-hx++upLv5U1rgYfwe1xBQUhRmU41NEvpUvrp8jkrSCdvGSnM5/qdRMtylJ6PG5OFkBaHkbTAKTnd3/YyESRHFw==}\n    engines: {node: '>=6.9.0'}\n    peerDependencies:\n      '@babel/core': ^7.0.0-0\n\n  '@babel/plugin-syntax-typescript@7.27.1':\n    resolution: {integrity: sha512-xfYCBMxveHrRMnAWl1ZlPXOZjzkN82THFvLhQhFXFt81Z5HnN+EtUkZhv/zcKpmT3fzmWZB0ywiBrbC3vogbwQ==}\n    engines: {node: '>=6.9.0'}\n    peerDependencies:\n      '@babel/core': ^7.0.0-0\n\n  '@babel/template@7.27.2':\n    resolution: {integrity: sha512-LPDZ85aEJyYSd18/DkjNh4/y1ntkE5KwUHWTiqgRxruuZL2F1yuHligVHLvcHY2vMHXttKFpJn6LwfI7cw7ODw==}\n    engines: {node: '>=6.9.0'}\n\n  '@babel/traverse@7.28.0':\n    resolution: {integrity: sha512-mGe7UK5wWyh0bKRfupsUchrQGqvDbZDbKJw+kcRGSmdHVYrv+ltd0pnpDTVpiTqnaBru9iEvA8pz8W46v0Amwg==}\n    engines: {node: '>=6.9.0'}\n\n  '@babel/types@7.28.1':\n    resolution: {integrity: sha512-x0LvFTekgSX+83TI28Y9wYPUfzrnl2aT5+5QLnO6v7mSJYtEEevuDRN0F0uSHRk1G1IWZC43o00Y0xDDrpBGPQ==}\n    engines: {node: '>=6.9.0'}\n\n  '@bcoe/v8-coverage@0.2.3':\n    resolution: {integrity: sha512-0hYQ8SB4Db5zvZB4axdMHGwEaQjkZzFjQiN9LVYvIFB2nSUHW9tYpxWriPrWDASIxiaXax83REcLxuSdnGPZtw==}\n\n  '@cspotcode/source-map-support@0.8.1':\n    resolution: {integrity: sha512-IchNf6dN4tHoMFIn/7OE8LWZ19Y6q/67Bmf6vnGREv8RSbBVb9LPJxEcnwrcwX6ixSvaiGoomAUvu4YSxXrVgw==}\n    engines: {node: '>=12'}\n\n  '@emnapi/core@1.4.4':\n    resolution: {integrity: sha512-A9CnAbC6ARNMKcIcrQwq6HeHCjpcBZ5wSx4U01WXCqEKlrzB9F9315WDNHkrs2xbx7YjjSxbUYxuN6EQzpcY2g==}\n\n  '@emnapi/runtime@1.4.4':\n    resolution: {integrity: sha512-hHyapA4A3gPaDCNfiqyZUStTMqIkKRshqPIuDOXv1hcBnD4U3l8cP0T1HMCfGRxQ6V64TGCcoswChANyOAwbQg==}\n\n  '@emnapi/wasi-threads@1.0.3':\n    resolution: {integrity: sha512-8K5IFFsQqF9wQNJptGbS6FNKgUTsSRYnTqNCG1vPP8jFdjSv18n2mQfJpkt2Oibo9iBEzcDnDxNwKTzC7svlJw==}\n\n  '@ioredis/commands@1.2.0':\n    resolution: {integrity: sha512-Sx1pU8EM64o2BrqNpEO1CNLtKQwyhuXuqyfH7oGKCk+1a33d2r5saW8zNwm3j6BTExtjrv2BxTgzzkMwts6vGg==}\n\n  '@isaacs/cliui@8.0.2':\n    resolution: {integrity: sha512-O8jcjabXaleOG9DQ0+ARXWZBTfnP4WNAqzuiJK7ll44AmxGKv/J2M4TPjxjY3znBCfvBXFzucm1twdyFybFqEA==}\n    engines: {node: '>=12'}\n\n  '@istanbuljs/load-nyc-config@1.1.0':\n    resolution: {integrity: sha512-VjeHSlIzpv/NyD3N0YuHfXOPDIixcA1q2ZV98wsMqcYlPmv2n3Yb2lYP9XMElnaFVXg5A7YLTeLu6V84uQDjmQ==}\n    engines: {node: '>=8'}\n\n  '@istanbuljs/schema@0.1.3':\n    resolution: {integrity: sha512-ZXRY4jNvVgSVQ8DL3LTcakaAtXwTVUxE81hslsyD2AtoXW/wVob10HkOJ1X/pAlcI7D+2YoZKg5do8G/w6RYgA==}\n    engines: {node: '>=8'}\n\n  '@jest/console@30.0.4':\n    resolution: {integrity: sha512-tMLCDvBJBwPqMm4OAiuKm2uF5y5Qe26KgcMn+nrDSWpEW+eeFmqA0iO4zJfL16GP7gE3bUUQ3hIuUJ22AqVRnw==}\n    engines: {node: ^18.14.0 || ^20.0.0 || ^22.0.0 || >=24.0.0}\n\n  '@jest/core@30.0.4':\n    resolution: {integrity: sha512-MWScSO9GuU5/HoWjpXAOBs6F/iobvK1XlioelgOM9St7S0Z5WTI9kjCQLPeo4eQRRYusyLW25/J7J5lbFkrYXw==}\n    engines: {node: ^18.14.0 || ^20.0.0 || ^22.0.0 || >=24.0.0}\n    peerDependencies:\n      node-notifier: ^8.0.1 || ^9.0.0 || ^10.0.0\n    peerDependenciesMeta:\n      node-notifier:\n        optional: true\n\n  '@jest/diff-sequences@30.0.1':\n    resolution: {integrity: sha512-n5H8QLDJ47QqbCNn5SuFjCRDrOLEZ0h8vAHCK5RL9Ls7Xa8AQLa/YxAc9UjFqoEDM48muwtBGjtMY5cr0PLDCw==}\n    engines: {node: ^18.14.0 || ^20.0.0 || ^22.0.0 || >=24.0.0}\n\n  '@jest/environment@30.0.4':\n    resolution: {integrity: sha512-5NT+sr7ZOb8wW7C4r7wOKnRQ8zmRWQT2gW4j73IXAKp5/PX1Z8MCStBLQDYfIG3n1Sw0NRfYGdp0iIPVooBAFQ==}\n    engines: {node: ^18.14.0 || ^20.0.0 || ^22.0.0 || >=24.0.0}\n\n  '@jest/expect-utils@30.0.4':\n    resolution: {integrity: sha512-EgXecHDNfANeqOkcak0DxsoVI4qkDUsR7n/Lr2vtmTBjwLPBnnPOF71S11Q8IObWzxm2QgQoY6f9hzrRD3gHRA==}\n    engines: {node: ^18.14.0 || ^20.0.0 || ^22.0.0 || >=24.0.0}\n\n  '@jest/expect@30.0.4':\n    resolution: {integrity: sha512-Z/DL7t67LBHSX4UzDyeYKqOxE/n7lbrrgEwWM3dGiH5Dgn35nk+YtgzKudmfIrBI8DRRrKYY5BCo3317HZV1Fw==}\n    engines: {node: ^18.14.0 || ^20.0.0 || ^22.0.0 || >=24.0.0}\n\n  '@jest/fake-timers@30.0.4':\n    resolution: {integrity: sha512-qZ7nxOcL5+gwBO6LErvwVy5k06VsX/deqo2XnVUSTV0TNC9lrg8FC3dARbi+5lmrr5VyX5drragK+xLcOjvjYw==}\n    engines: {node: ^18.14.0 || ^20.0.0 || ^22.0.0 || >=24.0.0}\n\n  '@jest/get-type@30.0.1':\n    resolution: {integrity: sha512-AyYdemXCptSRFirI5EPazNxyPwAL0jXt3zceFjaj8NFiKP9pOi0bfXonf6qkf82z2t3QWPeLCWWw4stPBzctLw==}\n    engines: {node: ^18.14.0 || ^20.0.0 || ^22.0.0 || >=24.0.0}\n\n  '@jest/globals@30.0.4':\n    resolution: {integrity: sha512-avyZuxEHF2EUhFF6NEWVdxkRRV6iXXcIES66DLhuLlU7lXhtFG/ySq/a8SRZmEJSsLkNAFX6z6mm8KWyXe9OEA==}\n    engines: {node: ^18.14.0 || ^20.0.0 || ^22.0.0 || >=24.0.0}\n\n  '@jest/pattern@30.0.1':\n    resolution: {integrity: sha512-gWp7NfQW27LaBQz3TITS8L7ZCQ0TLvtmI//4OwlQRx4rnWxcPNIYjxZpDcN4+UlGxgm3jS5QPz8IPTCkb59wZA==}\n    engines: {node: ^18.14.0 || ^20.0.0 || ^22.0.0 || >=24.0.0}\n\n  '@jest/reporters@30.0.4':\n    resolution: {integrity: sha512-6ycNmP0JSJEEys1FbIzHtjl9BP0tOZ/KN6iMeAKrdvGmUsa1qfRdlQRUDKJ4P84hJ3xHw1yTqJt4fvPNHhyE+g==}\n    engines: {node: ^18.14.0 || ^20.0.0 || ^22.0.0 || >=24.0.0}\n    peerDependencies:\n      node-notifier: ^8.0.1 || ^9.0.0 || ^10.0.0\n    peerDependenciesMeta:\n      node-notifier:\n        optional: true\n\n  '@jest/schemas@30.0.1':\n    resolution: {integrity: sha512-+g/1TKjFuGrf1Hh0QPCv0gISwBxJ+MQSNXmG9zjHy7BmFhtoJ9fdNhWJp3qUKRi93AOZHXtdxZgJ1vAtz6z65w==}\n    engines: {node: ^18.14.0 || ^20.0.0 || ^22.0.0 || >=24.0.0}\n\n  '@jest/snapshot-utils@30.0.4':\n    resolution: {integrity: sha512-BEpX8M/Y5lG7MI3fmiO+xCnacOrVsnbqVrcDZIT8aSGkKV1w2WwvRQxSWw5SIS8ozg7+h8tSj5EO1Riqqxcdag==}\n    engines: {node: ^18.14.0 || ^20.0.0 || ^22.0.0 || >=24.0.0}\n\n  '@jest/source-map@30.0.1':\n    resolution: {integrity: sha512-MIRWMUUR3sdbP36oyNyhbThLHyJ2eEDClPCiHVbrYAe5g3CHRArIVpBw7cdSB5fr+ofSfIb2Tnsw8iEHL0PYQg==}\n    engines: {node: ^18.14.0 || ^20.0.0 || ^22.0.0 || >=24.0.0}\n\n  '@jest/test-result@30.0.4':\n    resolution: {integrity: sha512-Mfpv8kjyKTHqsuu9YugB6z1gcdB3TSSOaKlehtVaiNlClMkEHY+5ZqCY2CrEE3ntpBMlstX/ShDAf84HKWsyIw==}\n    engines: {node: ^18.14.0 || ^20.0.0 || ^22.0.0 || >=24.0.0}\n\n  '@jest/test-sequencer@30.0.4':\n    resolution: {integrity: sha512-bj6ePmqi4uxAE8EHE0Slmk5uBYd9Vd/PcVt06CsBxzH4bbA8nGsI1YbXl/NH+eii4XRtyrRx+Cikub0x8H4vDg==}\n    engines: {node: ^18.14.0 || ^20.0.0 || ^22.0.0 || >=24.0.0}\n\n  '@jest/transform@30.0.4':\n    resolution: {integrity: sha512-atvy4hRph/UxdCIBp+UB2jhEA/jJiUeGZ7QPgBi9jUUKNgi3WEoMXGNG7zbbELG2+88PMabUNCDchmqgJy3ELg==}\n    engines: {node: ^18.14.0 || ^20.0.0 || ^22.0.0 || >=24.0.0}\n\n  '@jest/types@30.0.1':\n    resolution: {integrity: sha512-HGwoYRVF0QSKJu1ZQX0o5ZrUrrhj0aOOFA8hXrumD7SIzjouevhawbTjmXdwOmURdGluU9DM/XvGm3NyFoiQjw==}\n    engines: {node: ^18.14.0 || ^20.0.0 || ^22.0.0 || >=24.0.0}\n\n  '@jridgewell/gen-mapping@0.3.12':\n    resolution: {integrity: sha512-OuLGC46TjB5BbN1dH8JULVVZY4WTdkF7tV9Ys6wLL1rubZnCMstOhNHueU5bLCrnRuDhKPDM4g6sw4Bel5Gzqg==}\n\n  '@jridgewell/resolve-uri@3.1.2':\n    resolution: {integrity: sha512-bRISgCIjP20/tbWSPWMEi54QVPRZExkuD9lJL+UIxUKtwVJA8wW1Trb1jMs1RFXo1CBTNZ/5hpC9QvmKWdopKw==}\n    engines: {node: '>=6.0.0'}\n\n  '@jridgewell/sourcemap-codec@1.5.4':\n    resolution: {integrity: sha512-VT2+G1VQs/9oz078bLrYbecdZKs912zQlkelYpuf+SXF+QvZDYJlbx/LSx+meSAwdDFnF8FVXW92AVjjkVmgFw==}\n\n  '@jridgewell/trace-mapping@0.3.29':\n    resolution: {integrity: sha512-uw6guiW/gcAGPDhLmd77/6lW8QLeiV5RUTsAX46Db6oLhGaVj4lhnPwb184s1bkc8kdVg/+h988dro8GRDpmYQ==}\n\n  '@jridgewell/trace-mapping@0.3.9':\n    resolution: {integrity: sha512-3Belt6tdc8bPgAtbcmdtNJlirVoTmEb5e2gC94PnkwEW9jI6CAHUeoG85tjWP5WquqfavoMtMwiG4P926ZKKuQ==}\n\n  '@napi-rs/wasm-runtime@0.2.12':\n    resolution: {integrity: sha512-ZVWUcfwY4E/yPitQJl481FjFo3K22D6qF0DuFH6Y/nbnE11GY5uguDxZMGXPQ8WQ0128MXQD7TnfHyK4oWoIJQ==}\n\n  '@nodelib/fs.scandir@2.1.5':\n    resolution: {integrity: sha512-vq24Bq3ym5HEQm2NKCr3yXDwjc7vTsEThRDnkp2DK9p1uqLR+DHurm/NOTo0KG7HYHU7eppKZj3MyqYuMBf62g==}\n    engines: {node: '>= 8'}\n\n  '@nodelib/fs.stat@2.0.5':\n    resolution: {integrity: sha512-RkhPPp2zrqDAQA/2jNhnztcPAlv64XdhIp7a7454A5ovI7Bukxgt7MX7udwAu3zg1DcpPU0rz3VV1SeaqvY4+A==}\n    engines: {node: '>= 8'}\n\n  '@nodelib/fs.walk@1.2.8':\n    resolution: {integrity: sha512-oGB+UxlgWcgQkgwo8GcEGwemoTFt3FIO9ababBmaGwXIoBKZ+GTy0pP185beGg7Llih/NSHSV2XAs1lnznocSg==}\n    engines: {node: '>= 8'}\n\n  '@pkgjs/parseargs@0.11.0':\n    resolution: {integrity: sha512-+1VkjdD0QBLPodGrJUeqarH8VAIvQODIbwh9XpP5Syisf7YoQgsJKPNFoqqLQlu+VQ/tVSshMR6loPMn8U+dPg==}\n    engines: {node: '>=14'}\n\n  '@pkgr/core@0.2.7':\n    resolution: {integrity: sha512-YLT9Zo3oNPJoBjBc4q8G2mjU4tqIbf5CEOORbUUr48dCD9q3umJ3IPlVqOqDakPfd2HuwccBaqlGhN4Gmr5OWg==}\n    engines: {node: ^12.20.0 || ^14.18.0 || >=16.0.0}\n\n  '@prisma/client@6.11.1':\n    resolution: {integrity: sha512-5CLFh8QP6KxRm83pJ84jaVCeSVPQr8k0L2SEtOJHwdkS57/VQDcI/wQpGmdyOZi+D9gdNabdo8tj1Uk+w+upsQ==}\n    engines: {node: '>=18.18'}\n    peerDependencies:\n      prisma: '*'\n      typescript: '>=5.1.0'\n    peerDependenciesMeta:\n      prisma:\n        optional: true\n      typescript:\n        optional: true\n\n  '@prisma/config@6.11.1':\n    resolution: {integrity: sha512-z6rCTQN741wxDq82cpdzx2uVykpnQIXalLhrWQSR0jlBVOxCIkz3HZnd8ern3uYTcWKfB3IpVAF7K2FU8t/8AQ==}\n\n  '@prisma/debug@6.11.1':\n    resolution: {integrity: sha512-lWRb/YSWu8l4Yum1UXfGLtqFzZkVS2ygkWYpgkbgMHn9XJlMITIgeMvJyX5GepChzhmxuSuiq/MY/kGFweOpGw==}\n\n  '@prisma/engines-version@6.11.1-1.f40f79ec31188888a2e33acda0ecc8fd10a853a9':\n    resolution: {integrity: sha512-swFJTOOg4tHyOM1zB/pHb3MeH0i6t7jFKn5l+ZsB23d9AQACuIRo9MouvuKGvnDogzkcjbWnXi/NvOZ0+n5Jfw==}\n\n  '@prisma/engines@6.11.1':\n    resolution: {integrity: sha512-6eKEcV6V8W2eZAUwX2xTktxqPM4vnx3sxz3SDtpZwjHKpC6lhOtc4vtAtFUuf5+eEqBk+dbJ9Dcaj6uQU+FNNg==}\n\n  '@prisma/fetch-engine@6.11.1':\n    resolution: {integrity: sha512-NBYzmkXTkj9+LxNPRSndaAeALOL1Gr3tjvgRYNqruIPlZ6/ixLeuE/5boYOewant58tnaYFZ5Ne0jFBPfGXHpQ==}\n\n  '@prisma/get-platform@6.11.1':\n    resolution: {integrity: sha512-b2Z8oV2gwvdCkFemBTFd0x4lsL4O2jLSx8lB7D+XqoFALOQZPa7eAPE1NU0Mj1V8gPHRxIsHnyUNtw2i92psUw==}\n\n  '@sinclair/typebox@0.34.38':\n    resolution: {integrity: sha512-HpkxMmc2XmZKhvaKIZZThlHmx1L0I/V1hWK1NubtlFnr6ZqdiOpV72TKudZUNQjZNsyDBay72qFEhEvb+bcwcA==}\n\n  '@sinonjs/commons@3.0.1':\n    resolution: {integrity: sha512-K3mCHKQ9sVh8o1C9cxkwxaOmXoAMlDxC1mYyHrjqOWEcBjYr76t96zL2zlj5dUGZ3HSw240X1qgH3Mjf1yJWpQ==}\n\n  '@sinonjs/fake-timers@13.0.5':\n    resolution: {integrity: sha512-36/hTbH2uaWuGVERyC6da9YwGWnzUZXuPro/F2LfsdOsLnCojz/iSH8MxUt/FD2S5XBSVPhmArFUXcpCQ2Hkiw==}\n\n  '@socket.io/component-emitter@3.1.2':\n    resolution: {integrity: sha512-9BCxFwvbGg/RsZK9tjXd8s4UcwR0MWeFQ1XEKIQVVvAGJyINdrqKMcTRyLoK8Rse1GjzLV9cwjWV1olXRWEXVA==}\n\n  '@tsconfig/node10@1.0.11':\n    resolution: {integrity: sha512-DcRjDCujK/kCk/cUe8Xz8ZSpm8mS3mNNpta+jGCA6USEDfktlNvm1+IuZ9eTcDbNk41BHwpHHeW+N1lKCz4zOw==}\n\n  '@tsconfig/node12@1.0.11':\n    resolution: {integrity: sha512-cqefuRsh12pWyGsIoBKJA9luFu3mRxCA+ORZvA4ktLSzIuCUtWVxGIuXigEwO5/ywWFMZ2QEGKWvkZG1zDMTag==}\n\n  '@tsconfig/node14@1.0.3':\n    resolution: {integrity: sha512-ysT8mhdixWK6Hw3i1V2AeRqZ5WfXg1G43mqoYlM2nc6388Fq5jcXyr5mRsqViLx/GJYdoL0bfXD8nmF+Zn/Iow==}\n\n  '@tsconfig/node16@1.0.4':\n    resolution: {integrity: sha512-vxhUy4J8lyeyinH7Azl1pdd43GJhZH/tP2weN8TntQblOY+A0XbT8DJk1/oCPuOOyg/Ja757rG0CgHcWC8OfMA==}\n\n  '@tybys/wasm-util@0.10.0':\n    resolution: {integrity: sha512-VyyPYFlOMNylG45GoAe0xDoLwWuowvf92F9kySqzYh8vmYm7D2u4iUJKa1tOUpS70Ku13ASrOkS4ScXFsTaCNQ==}\n\n  '@types/babel__core@7.20.5':\n    resolution: {integrity: sha512-qoQprZvz5wQFJwMDqeseRXWv3rqMvhgpbXFfVyWhbx9X47POIA6i/+dXefEmZKoAgOaTdaIgNSMqMIU61yRyzA==}\n\n  '@types/babel__generator@7.27.0':\n    resolution: {integrity: sha512-ufFd2Xi92OAVPYsy+P4n7/U7e68fex0+Ee8gSG9KX7eo084CWiQ4sdxktvdl0bOPupXtVJPY19zk6EwWqUQ8lg==}\n\n  '@types/babel__template@7.4.4':\n    resolution: {integrity: sha512-h/NUaSyG5EyxBIp8YRxo4RMe2/qQgvyowRwVMzhYhBCONbW8PUsg4lkFMrhgZhUe5z3L3MiLDuvyJ/CaPa2A8A==}\n\n  '@types/babel__traverse@7.20.7':\n    resolution: {integrity: sha512-dkO5fhS7+/oos4ciWxyEyjWe48zmG6wbCheo/G2ZnHx4fs3EU6YC6UM8rk56gAjNJ9P3MTH2jo5jb92/K6wbng==}\n\n  '@types/body-parser@1.19.6':\n    resolution: {integrity: sha512-HLFeCYgz89uk22N5Qg3dvGvsv46B8GLvKKo1zKG4NybA8U2DiEO3w9lqGg29t/tfLRJpJ6iQxnVw4OnB7MoM9g==}\n\n  '@types/connect@3.4.38':\n    resolution: {integrity: sha512-K6uROf1LD88uDQqJCktA4yzL1YYAK6NgfsI0v/mTgyPKWsX1CnJ0XPSDhViejru1GcRkLWb8RlzFYJRqGUbaug==}\n\n  '@types/express-serve-static-core@5.0.7':\n    resolution: {integrity: sha512-R+33OsgWw7rOhD1emjU7dzCDHucJrgJXMA5PYCzJxVil0dsyx5iBEPHqpPfiKNJQb7lZ1vxwoLR4Z87bBUpeGQ==}\n\n  '@types/express@5.0.3':\n    resolution: {integrity: sha512-wGA0NX93b19/dZC1J18tKWVIYWyyF2ZjT9vin/NRu0qzzvfVzWjs04iq2rQ3H65vCTQYlRqs3YHfY7zjdV+9Kw==}\n\n  '@types/http-errors@2.0.5':\n    resolution: {integrity: sha512-r8Tayk8HJnX0FztbZN7oVqGccWgw98T/0neJphO91KkmOzug1KkofZURD4UaD5uH8AqcFLfdPErnBod0u71/qg==}\n\n  '@types/istanbul-lib-coverage@2.0.6':\n    resolution: {integrity: sha512-2QF/t/auWm0lsy8XtKVPG19v3sSOQlJe/YHZgfjb/KBBHOGSV+J2q/S671rcq9uTBrLAXmZpqJiaQbMT+zNU1w==}\n\n  '@types/istanbul-lib-report@3.0.3':\n    resolution: {integrity: sha512-NQn7AHQnk/RSLOxrBbGyJM/aVQ+pjj5HCgasFxc0K/KhoATfQ/47AyUl15I2yBUpihjmas+a+VJBOqecrFH+uA==}\n\n  '@types/istanbul-reports@3.0.4':\n    resolution: {integrity: sha512-pk2B1NWalF9toCRu6gjBzR69syFjP4Od8WRAX+0mmf9lAjCRicLOWc+ZrxZHx/0XRjotgkF9t6iaMJ+aXcOdZQ==}\n\n  '@types/jest@30.0.0':\n    resolution: {integrity: sha512-XTYugzhuwqWjws0CVz8QpM36+T+Dz5mTEBKhNs/esGLnCIlGdRy+Dq78NRjd7ls7r8BC8ZRMOrKlkO1hU0JOwA==}\n\n  '@types/mime@1.3.5':\n    resolution: {integrity: sha512-/pyBZWSLD2n0dcHE3hq8s8ZvcETHtEuF+3E7XVt0Ig2nvsVQXdghHVcEkIWjy9A0wKfTn97a/PSDYohKIlnP/w==}\n\n  '@types/node@24.0.12':\n    resolution: {integrity: sha512-LtOrbvDf5ndC9Xi+4QZjVL0woFymF/xSTKZKPgrrl7H7XoeDvnD+E2IclKVDyaK9UM756W/3BXqSU+JEHopA9g==}\n\n  '@types/pidusage@2.0.5':\n    resolution: {integrity: sha512-MIiyZI4/MK9UGUXWt0jJcCZhVw7YdhBuTOuqP/BjuLDLZ2PmmViMIQgZiWxtaMicQfAz/kMrZ5T7PKxFSkTeUA==}\n\n  '@types/qs@6.14.0':\n    resolution: {integrity: sha512-eOunJqu0K1923aExK6y8p6fsihYEn/BYuQ4g0CxAAgFc4b/ZLN4CrsRZ55srTdqoiLzU2B2evC+apEIxprEzkQ==}\n\n  '@types/range-parser@1.2.7':\n    resolution: {integrity: sha512-hKormJbkJqzQGhziax5PItDUTMAM9uE2XXQmM37dyd4hVM+5aVl7oVxMVUiVQn2oCQFN/LKCZdvSM0pFRqbSmQ==}\n\n  '@types/send@0.17.5':\n    resolution: {integrity: sha512-z6F2D3cOStZvuk2SaP6YrwkNO65iTZcwA2ZkSABegdkAh/lf+Aa/YQndZVfmEXT5vgAp6zv06VQ3ejSVjAny4w==}\n\n  '@types/serve-static@1.15.8':\n    resolution: {integrity: sha512-roei0UY3LhpOJvjbIP6ZZFngyLKl5dskOtDhxY5THRSpO+ZI+nzJ+m5yUMzGrp89YRa7lvknKkMYjqQFGwA7Sg==}\n\n  '@types/stack-utils@2.0.3':\n    resolution: {integrity: sha512-9aEbYZ3TbYMznPdcdr3SmIrLXwC/AKZXQeCf9Pgao5CKb8CyHuEX5jzWPTkvregvhRJHcpRO6BFoGW9ycaOkYw==}\n\n  '@types/yargs-parser@21.0.3':\n    resolution: {integrity: sha512-I4q9QU9MQv4oEOz4tAHJtNz1cwuLxn2F3xcc2iV5WdqLPpUnj30aUuxt1mAxYTG+oe8CZMV/+6rU4S4gRDzqtQ==}\n\n  '@types/yargs@17.0.33':\n    resolution: {integrity: sha512-WpxBCKWPLr4xSsHgz511rFJAM+wS28w2zEO1QDNY5zM/S8ok70NNfztH0xwhqKyaK0OHCbN98LDAZuy1ctxDkA==}\n\n  '@ungap/structured-clone@1.3.0':\n    resolution: {integrity: sha512-WmoN8qaIAo7WTYWbAZuG8PYEhn5fkz7dZrqTBZ7dtt//lL2Gwms1IcnQ5yHqjDfX8Ft5j4YzDM23f87zBfDe9g==}\n\n  '@unrs/resolver-binding-android-arm-eabi@1.11.1':\n    resolution: {integrity: sha512-ppLRUgHVaGRWUx0R0Ut06Mjo9gBaBkg3v/8AxusGLhsIotbBLuRk51rAzqLC8gq6NyyAojEXglNjzf6R948DNw==}\n    cpu: [arm]\n    os: [android]\n\n  '@unrs/resolver-binding-android-arm64@1.11.1':\n    resolution: {integrity: sha512-lCxkVtb4wp1v+EoN+HjIG9cIIzPkX5OtM03pQYkG+U5O/wL53LC4QbIeazgiKqluGeVEeBlZahHalCaBvU1a2g==}\n    cpu: [arm64]\n    os: [android]\n\n  '@unrs/resolver-binding-darwin-arm64@1.11.1':\n    resolution: {integrity: sha512-gPVA1UjRu1Y/IsB/dQEsp2V1pm44Of6+LWvbLc9SDk1c2KhhDRDBUkQCYVWe6f26uJb3fOK8saWMgtX8IrMk3g==}\n    cpu: [arm64]\n    os: [darwin]\n\n  '@unrs/resolver-binding-darwin-x64@1.11.1':\n    resolution: {integrity: sha512-cFzP7rWKd3lZaCsDze07QX1SC24lO8mPty9vdP+YVa3MGdVgPmFc59317b2ioXtgCMKGiCLxJ4HQs62oz6GfRQ==}\n    cpu: [x64]\n    os: [darwin]\n\n  '@unrs/resolver-binding-freebsd-x64@1.11.1':\n    resolution: {integrity: sha512-fqtGgak3zX4DCB6PFpsH5+Kmt/8CIi4Bry4rb1ho6Av2QHTREM+47y282Uqiu3ZRF5IQioJQ5qWRV6jduA+iGw==}\n    cpu: [x64]\n    os: [freebsd]\n\n  '@unrs/resolver-binding-linux-arm-gnueabihf@1.11.1':\n    resolution: {integrity: sha512-u92mvlcYtp9MRKmP+ZvMmtPN34+/3lMHlyMj7wXJDeXxuM0Vgzz0+PPJNsro1m3IZPYChIkn944wW8TYgGKFHw==}\n    cpu: [arm]\n    os: [linux]\n\n  '@unrs/resolver-binding-linux-arm-musleabihf@1.11.1':\n    resolution: {integrity: sha512-cINaoY2z7LVCrfHkIcmvj7osTOtm6VVT16b5oQdS4beibX2SYBwgYLmqhBjA1t51CarSaBuX5YNsWLjsqfW5Cw==}\n    cpu: [arm]\n    os: [linux]\n\n  '@unrs/resolver-binding-linux-arm64-gnu@1.11.1':\n    resolution: {integrity: sha512-34gw7PjDGB9JgePJEmhEqBhWvCiiWCuXsL9hYphDF7crW7UgI05gyBAi6MF58uGcMOiOqSJ2ybEeCvHcq0BCmQ==}\n    cpu: [arm64]\n    os: [linux]\n\n  '@unrs/resolver-binding-linux-arm64-musl@1.11.1':\n    resolution: {integrity: sha512-RyMIx6Uf53hhOtJDIamSbTskA99sPHS96wxVE/bJtePJJtpdKGXO1wY90oRdXuYOGOTuqjT8ACccMc4K6QmT3w==}\n    cpu: [arm64]\n    os: [linux]\n\n  '@unrs/resolver-binding-linux-ppc64-gnu@1.11.1':\n    resolution: {integrity: sha512-D8Vae74A4/a+mZH0FbOkFJL9DSK2R6TFPC9M+jCWYia/q2einCubX10pecpDiTmkJVUH+y8K3BZClycD8nCShA==}\n    cpu: [ppc64]\n    os: [linux]\n\n  '@unrs/resolver-binding-linux-riscv64-gnu@1.11.1':\n    resolution: {integrity: sha512-frxL4OrzOWVVsOc96+V3aqTIQl1O2TjgExV4EKgRY09AJ9leZpEg8Ak9phadbuX0BA4k8U5qtvMSQQGGmaJqcQ==}\n    cpu: [riscv64]\n    os: [linux]\n\n  '@unrs/resolver-binding-linux-riscv64-musl@1.11.1':\n    resolution: {integrity: sha512-mJ5vuDaIZ+l/acv01sHoXfpnyrNKOk/3aDoEdLO/Xtn9HuZlDD6jKxHlkN8ZhWyLJsRBxfv9GYM2utQ1SChKew==}\n    cpu: [riscv64]\n    os: [linux]\n\n  '@unrs/resolver-binding-linux-s390x-gnu@1.11.1':\n    resolution: {integrity: sha512-kELo8ebBVtb9sA7rMe1Cph4QHreByhaZ2QEADd9NzIQsYNQpt9UkM9iqr2lhGr5afh885d/cB5QeTXSbZHTYPg==}\n    cpu: [s390x]\n    os: [linux]\n\n  '@unrs/resolver-binding-linux-x64-gnu@1.11.1':\n    resolution: {integrity: sha512-C3ZAHugKgovV5YvAMsxhq0gtXuwESUKc5MhEtjBpLoHPLYM+iuwSj3lflFwK3DPm68660rZ7G8BMcwSro7hD5w==}\n    cpu: [x64]\n    os: [linux]\n\n  '@unrs/resolver-binding-linux-x64-musl@1.11.1':\n    resolution: {integrity: sha512-rV0YSoyhK2nZ4vEswT/QwqzqQXw5I6CjoaYMOX0TqBlWhojUf8P94mvI7nuJTeaCkkds3QE4+zS8Ko+GdXuZtA==}\n    cpu: [x64]\n    os: [linux]\n\n  '@unrs/resolver-binding-wasm32-wasi@1.11.1':\n    resolution: {integrity: sha512-5u4RkfxJm+Ng7IWgkzi3qrFOvLvQYnPBmjmZQ8+szTK/b31fQCnleNl1GgEt7nIsZRIf5PLhPwT0WM+q45x/UQ==}\n    engines: {node: '>=14.0.0'}\n    cpu: [wasm32]\n\n  '@unrs/resolver-binding-win32-arm64-msvc@1.11.1':\n    resolution: {integrity: sha512-nRcz5Il4ln0kMhfL8S3hLkxI85BXs3o8EYoattsJNdsX4YUU89iOkVn7g0VHSRxFuVMdM4Q1jEpIId1Ihim/Uw==}\n    cpu: [arm64]\n    os: [win32]\n\n  '@unrs/resolver-binding-win32-ia32-msvc@1.11.1':\n    resolution: {integrity: sha512-DCEI6t5i1NmAZp6pFonpD5m7i6aFrpofcp4LA2i8IIq60Jyo28hamKBxNrZcyOwVOZkgsRp9O2sXWBWP8MnvIQ==}\n    cpu: [ia32]\n    os: [win32]\n\n  '@unrs/resolver-binding-win32-x64-msvc@1.11.1':\n    resolution: {integrity: sha512-lrW200hZdbfRtztbygyaq/6jP6AKE8qQN2KvPcJ+x7wiD038YtnYtZ82IMNJ69GJibV7bwL3y9FgK+5w/pYt6g==}\n    cpu: [x64]\n    os: [win32]\n\n  accepts@2.0.0:\n    resolution: {integrity: sha512-5cvg6CtKwfgdmVqY1WIiXKc3Q1bkRqGLi+2W/6ao+6Y7gu/RCwRuAhGEzh5B4KlszSuTLgZYuqFqo5bImjNKng==}\n    engines: {node: '>= 0.6'}\n\n  acorn-walk@8.3.4:\n    resolution: {integrity: sha512-ueEepnujpqee2o5aIYnvHU6C0A42MNdsIDeqy5BydrkuC5R1ZuUFnm27EeFJGoEHJQgn3uleRvmTXaJgfXbt4g==}\n    engines: {node: '>=0.4.0'}\n\n  acorn@8.15.0:\n    resolution: {integrity: sha512-NZyJarBfL7nWwIq+FDL6Zp/yHEhePMNnnJ0y3qfieCrmNvYct8uvtiV41UvlSe6apAfk0fY1FbWx+NwfmpvtTg==}\n    engines: {node: '>=0.4.0'}\n    hasBin: true\n\n  ansi-escapes@4.3.2:\n    resolution: {integrity: sha512-gKXj5ALrKWQLsYG9jlTRmR/xKluxHV+Z9QEwNIgCfM1/uwPMCuzVVnh5mwTd+OuBZcwSIMbqssNWRm1lE51QaQ==}\n    engines: {node: '>=8'}\n\n  ansi-regex@5.0.1:\n    resolution: {integrity: sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==}\n    engines: {node: '>=8'}\n\n  ansi-regex@6.1.0:\n    resolution: {integrity: sha512-7HSX4QQb4CspciLpVFwyRe79O3xsIZDDLER21kERQ71oaPodF8jL725AgJMFAYbooIqolJoRLuM81SpeUkpkvA==}\n    engines: {node: '>=12'}\n\n  ansi-styles@4.3.0:\n    resolution: {integrity: sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==}\n    engines: {node: '>=8'}\n\n  ansi-styles@5.2.0:\n    resolution: {integrity: sha512-Cxwpt2SfTzTtXcfOlzGEee8O+c+MmUgGrNiBcXnuWxuFJHe6a5Hz7qwhwe5OgaSYI0IJvkLqWX1ASG+cJOkEiA==}\n    engines: {node: '>=10'}\n\n  ansi-styles@6.2.1:\n    resolution: {integrity: sha512-bN798gFfQX+viw3R7yrGWRqnrN2oRkEkUjjl4JNn4E8GxxbjtG3FbrEIIY3l8/hrwUwIeCZvi4QuOTP4MErVug==}\n    engines: {node: '>=12'}\n\n  anymatch@3.1.3:\n    resolution: {integrity: sha512-KMReFUr0B4t+D+OBkjR3KYqvocp2XaSzO55UcB6mgQMd3KbcE+mWTyvVV7D/zsdEbNnV6acZUutkiHQXvTr1Rw==}\n    engines: {node: '>= 8'}\n\n  arg@4.1.3:\n    resolution: {integrity: sha512-58S9QDqG0Xx27YwPSt9fJxivjYl432YCwfDMfZ+71RAqUrZef7LrKQZ3LHLOwCS4FLNBplP533Zx895SeOCHvA==}\n\n  argparse@1.0.10:\n    resolution: {integrity: sha512-o5Roy6tNG4SL/FOkCAN6RzjiakZS25RLYFrcMttJqbdd8BWrnA+fGz57iN5Pb06pvBGvl5gQ0B48dJlslXvoTg==}\n\n  array-union@2.1.0:\n    resolution: {integrity: sha512-HGyxoOTYUyCM6stUe6EJgnd4EoewAI7zMdfqO+kGjnlZmBDz/cR5pf8r/cR4Wq60sL/p0IkcjUEEPwS3GFrIyw==}\n    engines: {node: '>=8'}\n\n  async@3.2.6:\n    resolution: {integrity: sha512-htCUDlxyyCLMgaM3xXg0C0LW2xqfuQ6p05pCEIsXuyQ+a1koYKTuBMzRNwmybfLgvJDMd0r1LTn4+E0Ti6C2AA==}\n\n  babel-jest@30.0.4:\n    resolution: {integrity: sha512-UjG2j7sAOqsp2Xua1mS/e+ekddkSu3wpf4nZUSvXNHuVWdaOUXQ77+uyjJLDE9i0atm5x4kds8K9yb5lRsRtcA==}\n    engines: {node: ^18.14.0 || ^20.0.0 || ^22.0.0 || >=24.0.0}\n    peerDependencies:\n      '@babel/core': ^7.11.0\n\n  babel-plugin-istanbul@7.0.0:\n    resolution: {integrity: sha512-C5OzENSx/A+gt7t4VH1I2XsflxyPUmXRFPKBxt33xncdOmq7oROVM3bZv9Ysjjkv8OJYDMa+tKuKMvqU/H3xdw==}\n    engines: {node: '>=12'}\n\n  babel-plugin-jest-hoist@30.0.1:\n    resolution: {integrity: sha512-zTPME3pI50NsFW8ZBaVIOeAxzEY7XHlmWeXXu9srI+9kNfzCUTy8MFan46xOGZY8NZThMqq+e3qZUKsvXbasnQ==}\n    engines: {node: ^18.14.0 || ^20.0.0 || ^22.0.0 || >=24.0.0}\n\n  babel-preset-current-node-syntax@1.1.0:\n    resolution: {integrity: sha512-ldYss8SbBlWva1bs28q78Ju5Zq1F+8BrqBZZ0VFhLBvhh6lCpC2o3gDJi/5DRLs9FgYZCnmPYIVFU4lRXCkyUw==}\n    peerDependencies:\n      '@babel/core': ^7.0.0\n\n  babel-preset-jest@30.0.1:\n    resolution: {integrity: sha512-+YHejD5iTWI46cZmcc/YtX4gaKBtdqCHCVfuVinizVpbmyjO3zYmeuyFdfA8duRqQZfgCAMlsfmkVbJ+e2MAJw==}\n    engines: {node: ^18.14.0 || ^20.0.0 || ^22.0.0 || >=24.0.0}\n    peerDependencies:\n      '@babel/core': ^7.11.0\n\n  balanced-match@1.0.2:\n    resolution: {integrity: sha512-3oSeUO0TMV67hN1AmbXsK4yaqU7tjiHlbxRDZOpH0KW9+CeX4bRAaX0Anxt0tx2MrpRpWwQaPwIlISEJhYU5Pw==}\n\n  binary-extensions@2.3.0:\n    resolution: {integrity: sha512-Ceh+7ox5qe7LJuLHoY0feh3pHuUDHAcRUeyL2VYghZwfpkNIy/+8Ocg0a3UuSoYzavmylwuLWQOf3hl0jjMMIw==}\n    engines: {node: '>=8'}\n\n  body-parser@2.2.0:\n    resolution: {integrity: sha512-02qvAaxv8tp7fBa/mw1ga98OGm+eCbqzJOKoRt70sLmfEEi+jyBYVTDGfCL/k06/4EMk/z01gCe7HoCH/f2LTg==}\n    engines: {node: '>=18'}\n\n  brace-expansion@1.1.12:\n    resolution: {integrity: sha512-9T9UjW3r0UW5c1Q7GTwllptXwhvYmEzFhzMfZ9H7FQWt+uZePjZPjBP/W1ZEyZ1twGWom5/56TF4lPcqjnDHcg==}\n\n  brace-expansion@2.0.2:\n    resolution: {integrity: sha512-Jt0vHyM+jmUBqojB7E1NIYadt0vI0Qxjxd2TErW94wDz+E2LAm5vKMXXwg6ZZBTHPuUlDgQHKXvjGBdfcF1ZDQ==}\n\n  braces@3.0.3:\n    resolution: {integrity: sha512-yQbXgO/OSZVD2IsiLlro+7Hf6Q18EJrKSEsdoMzKePKXct3gvD8oLcOQdIzGupr5Fj+EDe8gO/lxc1BzfMpxvA==}\n    engines: {node: '>=8'}\n\n  browserslist@4.25.1:\n    resolution: {integrity: sha512-KGj0KoOMXLpSNkkEI6Z6mShmQy0bc1I+T7K9N81k4WWMrfz+6fQ6es80B/YLAeRoKvjYE1YSHHOW1qe9xIVzHw==}\n    engines: {node: ^6 || ^7 || ^8 || ^9 || ^10 || ^11 || ^12 || >=13.7}\n    hasBin: true\n\n  bs-logger@0.2.6:\n    resolution: {integrity: sha512-pd8DCoxmbgc7hyPKOvxtqNcjYoOsABPQdcCUjGp3d42VR2CX1ORhk2A87oqqu5R1kk+76nsxZupkmyd+MVtCog==}\n    engines: {node: '>= 6'}\n\n  bser@2.1.1:\n    resolution: {integrity: sha512-gQxTNE/GAfIIrmHLUE3oJyp5FO6HRBfhjnw4/wMmA63ZGDJnWBmgY/lyQBpnDUkGmAhbSe39tx2d/iTOAfglwQ==}\n\n  buffer-from@1.1.2:\n    resolution: {integrity: sha512-E+XQCRwSbaaiChtv6k6Dwgc+bx+Bs6vuKJHHl5kox/BaKbhiXzqQOwK4cO22yElGp2OCmjwVhT3HmxgyPGnJfQ==}\n\n  bytes@3.1.2:\n    resolution: {integrity: sha512-/Nf7TyzTx6S3yRJObOAV7956r8cr2+Oj8AC5dt8wSP3BQAoeX58NoHyCU8P8zGkNXStjTSi6fzO6F0pBdcYbEg==}\n    engines: {node: '>= 0.8'}\n\n  call-bind-apply-helpers@1.0.2:\n    resolution: {integrity: sha512-Sp1ablJ0ivDkSzjcaJdxEunN5/XvksFJ2sMBFfq6x0ryhQV/2b/KwFe21cMpmHtPOSij8K99/wSfoEuTObmuMQ==}\n    engines: {node: '>= 0.4'}\n\n  call-bound@1.0.4:\n    resolution: {integrity: sha512-+ys997U96po4Kx/ABpBCqhA9EuxJaQWDQg7295H4hBphv3IZg0boBKuwYpt4YXp6MZ5AmZQnU/tyMTlRpaSejg==}\n    engines: {node: '>= 0.4'}\n\n  callsites@3.1.0:\n    resolution: {integrity: sha512-P8BjAsXvZS+VIDUI11hHCQEv74YT67YUi5JJFNWIqL235sBmjX4+qx9Muvls5ivyNENctx46xQLQ3aTuE7ssaQ==}\n    engines: {node: '>=6'}\n\n  camelcase@5.3.1:\n    resolution: {integrity: sha512-L28STB170nwWS63UjtlEOE3dldQApaJXZkOI1uMFfzf3rRuPegHaHesyee+YxQ+W6SvRDQV6UrdOdRiR153wJg==}\n    engines: {node: '>=6'}\n\n  camelcase@6.3.0:\n    resolution: {integrity: sha512-Gmy6FhYlCY7uOElZUSbxo2UCDH8owEk996gkbrpsgGtrJLM3J7jGxl9Ic7Qwwj4ivOE5AWZWRMecDdF7hqGjFA==}\n    engines: {node: '>=10'}\n\n  caniuse-lite@1.0.30001727:\n    resolution: {integrity: sha512-pB68nIHmbN6L/4C6MH1DokyR3bYqFwjaSs/sWDHGj4CTcFtQUQMuJftVwWkXq7mNWOybD3KhUv3oWHoGxgP14Q==}\n\n  chalk@4.1.2:\n    resolution: {integrity: sha512-oKnbhFyRIXpUuez8iBMmyEa4nbj4IOQyuhc/wy9kY7/WVPcwIO9VA668Pu8RkO7+0G76SLROeyw9CpQ061i4mA==}\n    engines: {node: '>=10'}\n\n  char-regex@1.0.2:\n    resolution: {integrity: sha512-kWWXztvZ5SBQV+eRgKFeh8q5sLuZY2+8WUIzlxWVTg+oGwY14qylx1KbKzHd8P6ZYkAg0xyIDU9JMHhyJMZ1jw==}\n    engines: {node: '>=10'}\n\n  chokidar@3.6.0:\n    resolution: {integrity: sha512-7VT13fmjotKpGipCW9JEQAusEPE+Ei8nl6/g4FBAmIm0GOOLMua9NDDo/DWp0ZAxCr3cPq5ZpBqmPAQgDda2Pw==}\n    engines: {node: '>= 8.10.0'}\n\n  ci-info@4.3.0:\n    resolution: {integrity: sha512-l+2bNRMiQgcfILUi33labAZYIWlH1kWDp+ecNo5iisRKrbm0xcRyCww71/YU0Fkw0mAFpz9bJayXPjey6vkmaQ==}\n    engines: {node: '>=8'}\n\n  cjs-module-lexer@2.1.0:\n    resolution: {integrity: sha512-UX0OwmYRYQQetfrLEZeewIFFI+wSTofC+pMBLNuH3RUuu/xzG1oz84UCEDOSoQlN3fZ4+AzmV50ZYvGqkMh9yA==}\n\n  cliui@8.0.1:\n    resolution: {integrity: sha512-BSeNnyus75C4//NQ9gQt1/csTXyo/8Sb+afLAkzAptFuMsod9HFokGNudZpi/oQV73hnVK+sR+5PVRMd+Dr7YQ==}\n    engines: {node: '>=12'}\n\n  cluster-key-slot@1.1.2:\n    resolution: {integrity: sha512-RMr0FhtfXemyinomL4hrWcYJxmX6deFdCxpJzhDttxgO1+bcCnkk+9drydLVDmAMG7NE6aN/fl4F7ucU/90gAA==}\n    engines: {node: '>=0.10.0'}\n\n  co@4.6.0:\n    resolution: {integrity: sha512-QVb0dM5HvG+uaxitm8wONl7jltx8dqhfU33DcqtOZcLSVIKSDDLDi7+0LbAKiyI8hD9u42m2YxXSkMGWThaecQ==}\n    engines: {iojs: '>= 1.0.0', node: '>= 0.12.0'}\n\n  collect-v8-coverage@1.0.2:\n    resolution: {integrity: sha512-lHl4d5/ONEbLlJvaJNtsF/Lz+WvB07u2ycqTYbdrq7UypDXailES4valYb2eWiJFxZlVmpGekfqoxQhzyFdT4Q==}\n\n  color-convert@2.0.1:\n    resolution: {integrity: sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==}\n    engines: {node: '>=7.0.0'}\n\n  color-name@1.1.4:\n    resolution: {integrity: sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==}\n\n  commander@9.5.0:\n    resolution: {integrity: sha512-KRs7WVDKg86PWiuAqhDrAQnTXZKraVcCc6vFdL14qrZ/DcWwuRo7VoiYXalXO7S5GKpqYiVEwCbgFDfxNHKJBQ==}\n    engines: {node: ^12.20.0 || >=14}\n\n  concat-map@0.0.1:\n    resolution: {integrity: sha512-/Srv4dswyQNBfohGpz9o6Yb3Gz3SrUDqBH5rTuhGR7ahtlbYKnVxw2bCFMRljaA7EXHaXZ8wsHdodFvbkhKmqg==}\n\n  content-disposition@1.0.0:\n    resolution: {integrity: sha512-Au9nRL8VNUut/XSzbQA38+M78dzP4D+eqg3gfJHMIHHYa3bg067xj1KxMUWj+VULbiZMowKngFFbKczUrNJ1mg==}\n    engines: {node: '>= 0.6'}\n\n  content-type@1.0.5:\n    resolution: {integrity: sha512-nTjqfcBFEipKdXCv4YDQWCfmcLZKm81ldF0pAopTvyrFGVbcR6P/VAAd5G7N+0tTr8QqiU0tFadD6FK4NtJwOA==}\n    engines: {node: '>= 0.6'}\n\n  convert-source-map@2.0.0:\n    resolution: {integrity: sha512-Kvp459HrV2FEJ1CAsi1Ku+MY3kasH19TFykTz2xWmMeq6bk2NU3XXvfJ+Q61m0xktWwt+1HSYf3JZsTms3aRJg==}\n\n  cookie-signature@1.2.2:\n    resolution: {integrity: sha512-D76uU73ulSXrD1UXF4KE2TMxVVwhsnCgfAyTg9k8P6KGZjlXKrOLe4dJQKI3Bxi5wjesZoFXJWElNWBjPZMbhg==}\n    engines: {node: '>=6.6.0'}\n\n  cookie@0.7.2:\n    resolution: {integrity: sha512-yki5XnKuf750l50uGTllt6kKILY4nQ1eNIQatoXEByZ5dWgnKqbnqmTrBE5B4N7lrMJKQ2ytWMiTO2o0v6Ew/w==}\n    engines: {node: '>= 0.6'}\n\n  create-require@1.1.1:\n    resolution: {integrity: sha512-dcKFX3jn0MpIaXjisoRvexIJVEKzaq7z2rZKxf+MSr9TkdmHmsU4m2lcLojrj/FHl8mk5VxMmYA+ftRkP/3oKQ==}\n\n  cross-spawn@7.0.6:\n    resolution: {integrity: sha512-uV2QOWP2nWzsy2aMp8aRibhi9dlzF5Hgh5SHaB9OiTGEyDTiJJyx0uy51QXdyWbtAHNua4XJzUKca3OzKUd3vA==}\n    engines: {node: '>= 8'}\n\n  debug@4.3.7:\n    resolution: {integrity: sha512-Er2nc/H7RrMXZBFCEim6TCmMk02Z8vLC2Rbi1KEBggpo0fS6l0S1nnapwmIi3yW/+GOJap1Krg4w0Hg80oCqgQ==}\n    engines: {node: '>=6.0'}\n    peerDependencies:\n      supports-color: '*'\n    peerDependenciesMeta:\n      supports-color:\n        optional: true\n\n  debug@4.4.1:\n    resolution: {integrity: sha512-KcKCqiftBJcZr++7ykoDIEwSa3XWowTfNPo92BYxjXiyYEVrUQh2aLyhxBCwww+heortUFxEJYcRzosstTEBYQ==}\n    engines: {node: '>=6.0'}\n    peerDependencies:\n      supports-color: '*'\n    peerDependenciesMeta:\n      supports-color:\n        optional: true\n\n  dedent@1.6.0:\n    resolution: {integrity: sha512-F1Z+5UCFpmQUzJa11agbyPVMbpgT/qA3/SKyJ1jyBgm7dUcUEa8v9JwDkerSQXfakBwFljIxhOJqGkjUwZ9FSA==}\n    peerDependencies:\n      babel-plugin-macros: ^3.1.0\n    peerDependenciesMeta:\n      babel-plugin-macros:\n        optional: true\n\n  deepmerge@4.3.1:\n    resolution: {integrity: sha512-3sUqbMEc77XqpdNO7FRyRog+eW3ph+GYCbj+rK+uYyRMuwsVy0rMiVtPn+QJlKFvWP/1PYpapqYn0Me2knFn+A==}\n    engines: {node: '>=0.10.0'}\n\n  denque@2.1.0:\n    resolution: {integrity: sha512-HVQE3AAb/pxF8fQAoiqpvg9i3evqug3hoiwakOyZAwJm+6vZehbkYXZ0l4JxS+I3QxM97v5aaRNhj8v5oBhekw==}\n    engines: {node: '>=0.10'}\n\n  depd@2.0.0:\n    resolution: {integrity: sha512-g7nH6P6dyDioJogAAGprGpCtVImJhpPk/roCzdb3fIh61/s/nPsfR6onyMwkCAR/OlC3yBC0lESvUoQEAssIrw==}\n    engines: {node: '>= 0.8'}\n\n  detect-newline@3.1.0:\n    resolution: {integrity: sha512-TLz+x/vEXm/Y7P7wn1EJFNLxYpUD4TgMosxY6fAVJUnJMbupHBOncxyWUG9OpTaH9EBD7uFI5LfEgmMOc54DsA==}\n    engines: {node: '>=8'}\n\n  diff@4.0.2:\n    resolution: {integrity: sha512-58lmxKSA4BNyLz+HHMUzlOEpg09FV+ev6ZMe3vJihgdxzgcwZ8VoEEPmALCZG9LmqfVoNMMKpttIYTVG6uDY7A==}\n    engines: {node: '>=0.3.1'}\n\n  dir-glob@3.0.1:\n    resolution: {integrity: sha512-WkrWp9GR4KXfKGYzOLmTuGVi1UWFfws377n9cc55/tb6DuqyF6pcQ5AbiHEshaDpY9v6oaSr2XCDidGmMwdzIA==}\n    engines: {node: '>=8'}\n\n  dotenv@17.1.0:\n    resolution: {integrity: sha512-tG9VUTJTuju6GcXgbdsOuRhupE8cb4mRgY5JLRCh4MtGoVo3/gfGUtOMwmProM6d0ba2mCFvv+WrpYJV6qgJXQ==}\n    engines: {node: '>=12'}\n\n  dunder-proto@1.0.1:\n    resolution: {integrity: sha512-KIN/nDJBQRcXw0MLVhZE9iQHmG68qAVIBg9CqmUYjmQIhgij9U5MFvrqkUL5FbtyyzZuOeOt0zdeRe4UY7ct+A==}\n    engines: {node: '>= 0.4'}\n\n  eastasianwidth@0.2.0:\n    resolution: {integrity: sha512-I88TYZWc9XiYHRQ4/3c5rjjfgkjhLyW2luGIheGERbNQ6OY7yTybanSpDXZa8y7VUP9YmDcYa+eyq4ca7iLqWA==}\n\n  ee-first@1.1.1:\n    resolution: {integrity: sha512-WMwm9LhRUo+WUaRN+vRuETqG89IgZphVSNkdFgeb6sS/E4OrDIN7t48CAewSHXc6C8lefD8KKfr5vY61brQlow==}\n\n  ejs@3.1.10:\n    resolution: {integrity: sha512-UeJmFfOrAQS8OJWPZ4qtgHyWExa088/MtK5UEyoJGFH67cDEXkZSviOiKRCZ4Xij0zxI3JECgYs3"
      }
    },
    {
      "file_path": "job-worker/src/config/db.ts",
      "relative_path": "job-worker/src/config/db.ts",
      "language": "typescript",
      "imports": [
        "@prisma/client"
      ],
      "exports": [],
      "classes": [],
      "functions": [],
      "variables": [
        "prisma"
      ],
      "description": "Configuration file defining 0 settings and options",
      "lines_of_code": 11,
      "metadata": {
        "size_bytes": 258,
        "last_modified": "2025-10-07T19:50:38.746Z"
      },
      "analysis_enhanced": {
        "complexity_score": 1,
        "detected_issues": [],
        "semantic_tags": [
          "typescript",
          "database",
          "prisma"
        ],
        "priority": "low",
        "summary_type": "rule-based",
        "code_snippet": "import { PrismaClient } from \"@prisma/client\";\n\ndeclare global {\n  var prisma: PrismaClient | undefined;\n}\nexport const prisma = global.prisma || new PrismaClient();\n\nif (process.env.NODE_ENV !== \"production\") global.prisma = prisma;\n\nexport default prisma;\n",
        "full_content": "import { PrismaClient } from \"@prisma/client\";\n\ndeclare global {\n  var prisma: PrismaClient | undefined;\n}\nexport const prisma = global.prisma || new PrismaClient();\n\nif (process.env.NODE_ENV !== \"production\") global.prisma = prisma;\n\nexport default prisma;\n"
      }
    },
    {
      "file_path": "job-worker/src/index.ts",
      "relative_path": "job-worker/src/index.ts",
      "language": "typescript",
      "imports": [
        "dotenv",
        "express",
        "./worker/job-queue-loop",
        "./worker/retry-loop",
        "./libs/process-action"
      ],
      "exports": [],
      "classes": [],
      "functions": [
        {
          "name": "bootstrap",
          "parameters": [],
          "returnType": "unknown",
          "isAsync": true,
          "isExported": false
        }
      ],
      "variables": [
        "app",
        "PORT"
      ],
      "description": "TypeScript module containing 1 functions",
      "lines_of_code": 49,
      "metadata": {
        "size_bytes": 1310,
        "last_modified": "2025-10-07T19:50:38.746Z"
      },
      "analysis_enhanced": {
        "complexity_score": 5,
        "detected_issues": [
          {
            "type": "maintainability",
            "severity": "low",
            "description": "Console.log statements should be removed from production code",
            "category": "debug-code"
          }
        ],
        "semantic_tags": [
          "typescript",
          "express",
          "routing",
          "background-jobs"
        ],
        "priority": "low",
        "summary_type": "rule-based",
        "code_snippet": "import { config } from \"dotenv\";\nconfig();\nimport express, { Request, Response } from \"express\";\nimport { startJobQueueLoop } from \"./worker/job-queue-loop\";\nimport { pushPendingJobToRetry, startRetryLoop } from \"./worker/retry-loop\";\nimport { cancelAllProcesses } from \"./libs/process-action\";\n\nconst app = express();\nconst PORT = process.env.PORT || 8081;\n\napp.get(\"/\", (req: Request, res: Response) => {\n  res.send(\"Job Worker is running 🚀\");\n});\n\napp.get(\"/wake-up\", (req: Request, res: Response) => {\n  startJobQueueLoop();\n  res.status(200).json({ success: true, message: \"Job Worker is running 🚀\" });\n});\n\napp.get(\"/cancel-all-jobs\", async (req: Request, res: Response) => {\n  const result = await cancelAllProcesses();\n  res.status(200).json({\n    success: true,\n    message: result ? \"All jobs canceled\" : \"Something went wrong while canceling jobs\",\n  });\n});\n\nprocess.on(\"uncaughtException\", (err) => {\n  console.log(\"Uncaught Exception :\", err.message);\n});\n\nprocess.on(\"unhandledRejection\", (err) => {\n  console.log(\"Uncaught Rejection :\", err);\n});\n\nasync function bootstrap() {\n  console.log(\"[Worker] Booting up...\");\n\n  startRetryLoop();\n  startJobQueueLoop();\n  pushPendingJobToRetry();\n}\n\nbootstrap();\n\napp.listen(PORT, () => {\n  console.log(`[Worker] Listening on port ${PORT}`);\n});\n",
        "full_content": "import { config } from \"dotenv\";\nconfig();\nimport express, { Request, Response } from \"express\";\nimport { startJobQueueLoop } from \"./worker/job-queue-loop\";\nimport { pushPendingJobToRetry, startRetryLoop } from \"./worker/retry-loop\";\nimport { cancelAllProcesses } from \"./libs/process-action\";\n\nconst app = express();\nconst PORT = process.env.PORT || 8081;\n\napp.get(\"/\", (req: Request, res: Response) => {\n  res.send(\"Job Worker is running 🚀\");\n});\n\napp.get(\"/wake-up\", (req: Request, res: Response) => {\n  startJobQueueLoop();\n  res.status(200).json({ success: true, message: \"Job Worker is running 🚀\" });\n});\n\napp.get(\"/cancel-all-jobs\", async (req: Request, res: Response) => {\n  const result = await cancelAllProcesses();\n  res.status(200).json({\n    success: true,\n    message: result ? \"All jobs canceled\" : \"Something went wrong while canceling jobs\",\n  });\n});\n\nprocess.on(\"uncaughtException\", (err) => {\n  console.log(\"Uncaught Exception :\", err.message);\n});\n\nprocess.on(\"unhandledRejection\", (err) => {\n  console.log(\"Uncaught Rejection :\", err);\n});\n\nasync function bootstrap() {\n  console.log(\"[Worker] Booting up...\");\n\n  startRetryLoop();\n  startJobQueueLoop();\n  pushPendingJobToRetry();\n}\n\nbootstrap();\n\napp.listen(PORT, () => {\n  console.log(`[Worker] Listening on port ${PORT}`);\n});\n"
      }
    },
    {
      "file_path": "job-worker/src/libs/priority-queue.ts",
      "relative_path": "job-worker/src/libs/priority-queue.ts",
      "language": "typescript",
      "imports": [
        "@prisma/client",
        "./redis",
        "@src/utils/constants"
      ],
      "exports": [],
      "classes": [],
      "functions": [],
      "variables": [
        "PRIORITY_LEVELS",
        "PRIORITY_KEYS",
        "enqueueJob",
        "dequeueJob"
      ],
      "description": "TypeScript file containing basic code structure and definitions",
      "lines_of_code": 30,
      "metadata": {
        "size_bytes": 999,
        "last_modified": "2025-10-07T19:50:38.746Z"
      },
      "analysis_enhanced": {
        "complexity_score": 2,
        "detected_issues": [
          {
            "type": "performance",
            "severity": "medium",
            "description": "Sequential async operations in loop - consider Promise.all for parallel execution",
            "category": "async-performance"
          },
          {
            "type": "best-practice",
            "severity": "medium",
            "description": "Missing error handling for async operations",
            "category": "missing-error-handling"
          },
          {
            "type": "maintainability",
            "severity": "low",
            "description": "Console.log statements should be removed from production code",
            "category": "debug-code"
          }
        ],
        "semantic_tags": [
          "typescript",
          "prisma",
          "redis",
          "caching",
          "background-jobs"
        ],
        "priority": "low",
        "summary_type": "rule-based",
        "code_snippet": "import { Job } from \"@prisma/client\";\nimport redisClient from \"./redis\";\nimport { constants } from \"@src/utils/constants\";\n\nexport const PRIORITY_LEVELS = [1, 2, 3];\n\nexport const PRIORITY_KEYS = Object.fromEntries(\n  PRIORITY_LEVELS.map((level) => [level, `priority:${level}`])\n);\n\n// {1: \"priority:1\", 2: \"priority:2\", 3: \"priority:3\"}\n\nexport const enqueueJob = async (job: Job, queueKey: string = constants.JOB_QUEUE_KEY) => {\n  const key = PRIORITY_KEYS[job.priority as 1 | 2 | 3] || PRIORITY_KEYS[3];\n  await redisClient.lpush(`${queueKey}:${key}`, job.id);\n  console.log(`📥 Enqueued job ${job.id} to ${key}`);\n};\n\nexport const dequeueJob = async (queueKey: string = constants.JOB_QUEUE_KEY) => {\n  for (const priority of PRIORITY_LEVELS) {\n    const jobId = await redisClient.rpop(`${queueKey}:${PRIORITY_KEYS[priority]}`);\n\n    if (jobId) {\n      console.log(`📤 Dequeued job ${jobId} from priority ${priority}`);\n      return jobId;\n    }\n  }\n  return null; // all queues are empty\n};\n",
        "full_content": "import { Job } from \"@prisma/client\";\nimport redisClient from \"./redis\";\nimport { constants } from \"@src/utils/constants\";\n\nexport const PRIORITY_LEVELS = [1, 2, 3];\n\nexport const PRIORITY_KEYS = Object.fromEntries(\n  PRIORITY_LEVELS.map((level) => [level, `priority:${level}`])\n);\n\n// {1: \"priority:1\", 2: \"priority:2\", 3: \"priority:3\"}\n\nexport const enqueueJob = async (job: Job, queueKey: string = constants.JOB_QUEUE_KEY) => {\n  const key = PRIORITY_KEYS[job.priority as 1 | 2 | 3] || PRIORITY_KEYS[3];\n  await redisClient.lpush(`${queueKey}:${key}`, job.id);\n  console.log(`📥 Enqueued job ${job.id} to ${key}`);\n};\n\nexport const dequeueJob = async (queueKey: string = constants.JOB_QUEUE_KEY) => {\n  for (const priority of PRIORITY_LEVELS) {\n    const jobId = await redisClient.rpop(`${queueKey}:${PRIORITY_KEYS[priority]}`);\n\n    if (jobId) {\n      console.log(`📤 Dequeued job ${jobId} from priority ${priority}`);\n      return jobId;\n    }\n  }\n  return null; // all queues are empty\n};\n"
      }
    },
    {
      "file_path": "job-worker/src/libs/process-action.ts",
      "relative_path": "job-worker/src/libs/process-action.ts",
      "language": "typescript",
      "imports": [
        "@src/config/db",
        "child_process",
        "./priority-queue"
      ],
      "exports": [],
      "classes": [],
      "functions": [],
      "variables": [
        "RunningProcess",
        "cancelProcess",
        "cancelAllProcesses"
      ],
      "description": "TypeScript file containing basic code structure and definitions",
      "lines_of_code": 58,
      "metadata": {
        "size_bytes": 1415,
        "last_modified": "2025-10-07T19:50:38.746Z"
      },
      "analysis_enhanced": {
        "complexity_score": 2,
        "detected_issues": [],
        "semantic_tags": [
          "typescript",
          "background-jobs"
        ],
        "priority": "low",
        "summary_type": "rule-based",
        "code_snippet": "import prisma from \"@src/config/db\";\nimport { ChildProcess } from \"child_process\";\nimport { enqueueJob } from \"./priority-queue\";\nexport const RunningProcess: Record<string, ChildProcess> = {};\n\nexport const cancelProcess = async (jobId: string) => {\n  const process = RunningProcess[jobId];\n  if (process) {\n    process.kill(\"SIGTERM\");\n    await prisma.job.update({\n      where: { id: jobId },\n      data: { status: \"CANCELED\" },\n    });\n    delete RunningProcess[jobId];\n  }\n};\n\nexport const cancelAllProcesses = async () => {\n  const promises: Promise<void>[] = [];\n\n  for (const jobId in RunningProcess) {\n    const job = await prisma.job.findUnique({\n      where: { id: jobId },\n    });\n\n    if (!job) continue;\n\n    if (job.isKillable) {\n      const promise = cancelProcess(job.id)\n        .then(() => enqueueJob(job))\n        .catch((err) => {\n          console.error(`Failed to cancel job ${job.id}`, err);\n        });\n\n      promises.push(promise);\n    } else {\n      const running = RunningProcess[jobId];\n      const promise = new Promise<void>((resolve) => {\n        running.on(\"exit\", () => {\n          resolve();\n        });\n\n        running.on(\"error\", (err: any) => {\n          console.error(`Non-killable job ${job.id} errored`, err);\n          enqueueJob(job);\n          resolve();\n        });\n      });\n\n      promises.push(promise);\n    }\n  }\n\n  await Promise.all(promises);\n\n  return true;\n};\n",
        "full_content": "import prisma from \"@src/config/db\";\nimport { ChildProcess } from \"child_process\";\nimport { enqueueJob } from \"./priority-queue\";\nexport const RunningProcess: Record<string, ChildProcess> = {};\n\nexport const cancelProcess = async (jobId: string) => {\n  const process = RunningProcess[jobId];\n  if (process) {\n    process.kill(\"SIGTERM\");\n    await prisma.job.update({\n      where: { id: jobId },\n      data: { status: \"CANCELED\" },\n    });\n    delete RunningProcess[jobId];\n  }\n};\n\nexport const cancelAllProcesses = async () => {\n  const promises: Promise<void>[] = [];\n\n  for (const jobId in RunningProcess) {\n    const job = await prisma.job.findUnique({\n      where: { id: jobId },\n    });\n\n    if (!job) continue;\n\n    if (job.isKillable) {\n      const promise = cancelProcess(job.id)\n        .then(() => enqueueJob(job))\n        .catch((err) => {\n          console.error(`Failed to cancel job ${job.id}`, err);\n        });\n\n      promises.push(promise);\n    } else {\n      const running = RunningProcess[jobId];\n      const promise = new Promise<void>((resolve) => {\n        running.on(\"exit\", () => {\n          resolve();\n        });\n\n        running.on(\"error\", (err: any) => {\n          console.error(`Non-killable job ${job.id} errored`, err);\n          enqueueJob(job);\n          resolve();\n        });\n      });\n\n      promises.push(promise);\n    }\n  }\n\n  await Promise.all(promises);\n\n  return true;\n};\n"
      }
    },
    {
      "file_path": "job-worker/src/libs/redis.ts",
      "relative_path": "job-worker/src/libs/redis.ts",
      "language": "typescript",
      "imports": [
        "ioredis"
      ],
      "exports": [],
      "classes": [],
      "functions": [],
      "variables": [
        "redisClient"
      ],
      "description": "TypeScript file containing basic code structure and definitions",
      "lines_of_code": 6,
      "metadata": {
        "size_bytes": 115,
        "last_modified": "2025-10-07T19:50:38.746Z"
      },
      "analysis_enhanced": {
        "complexity_score": 1,
        "detected_issues": [],
        "semantic_tags": [
          "typescript",
          "redis",
          "caching"
        ],
        "priority": "low",
        "summary_type": "rule-based",
        "code_snippet": "import redis from \"ioredis\";\n\nconst redisClient = new redis(process.env.REDIS_HOST!);\n\nexport default redisClient;\n",
        "full_content": "import redis from \"ioredis\";\n\nconst redisClient = new redis(process.env.REDIS_HOST!);\n\nexport default redisClient;\n"
      }
    },
    {
      "file_path": "job-worker/src/socket/job-worker.socket.ts",
      "relative_path": "job-worker/src/socket/job-worker.socket.ts",
      "language": "typescript",
      "imports": [
        "@src/libs/process-action",
        "@src/types",
        "@src/utils/constants",
        "socket.io-client"
      ],
      "exports": [],
      "classes": [],
      "functions": [],
      "variables": [
        "webSocket"
      ],
      "description": "TypeScript file containing basic code structure and definitions",
      "lines_of_code": 27,
      "metadata": {
        "size_bytes": 845,
        "last_modified": "2025-10-07T19:50:38.746Z"
      },
      "analysis_enhanced": {
        "complexity_score": 2,
        "detected_issues": [
          {
            "type": "best-practice",
            "severity": "medium",
            "description": "Missing error handling for async operations",
            "category": "missing-error-handling"
          },
          {
            "type": "maintainability",
            "severity": "low",
            "description": "Console.log statements should be removed from production code",
            "category": "debug-code"
          }
        ],
        "semantic_tags": [
          "typescript",
          "background-jobs"
        ],
        "priority": "low",
        "summary_type": "rule-based",
        "code_snippet": "import { cancelProcess } from \"@src/libs/process-action\";\nimport { JobCancelPayload } from \"@src/types\";\nimport { constants as C } from \"@src/utils/constants\";\n\nimport { io } from \"socket.io-client\";\n\nexport const webSocket = io(process.env.JOB_MANGER_SOCKET_URL!, {\n  autoConnect: true,\n  reconnectionAttempts: Infinity,\n  reconnectionDelay: 2000,\n});\n\nwebSocket.on(\"connect\", () => {\n  console.log(\"[worker] connected to job-manager\");\n  webSocket.emit(\"register:worker\", { workerId: C.WORKER_ID });\n});\n\nwebSocket.on(\"job:cancel\", async ({ jobId, workerId }: JobCancelPayload) => {\n  await cancelProcess(jobId);\n  console.log(\"job:canceled\", jobId);\n  webSocket.emit(\"job:canceled\", { jobId, workerId, success: true });\n});\n\nwebSocket.on(\"disconnect\", () => {\n  console.log(\"[worker] disconnected from job-manager, Trying to reconnect\");\n});\n",
        "full_content": "import { cancelProcess } from \"@src/libs/process-action\";\nimport { JobCancelPayload } from \"@src/types\";\nimport { constants as C } from \"@src/utils/constants\";\n\nimport { io } from \"socket.io-client\";\n\nexport const webSocket = io(process.env.JOB_MANGER_SOCKET_URL!, {\n  autoConnect: true,\n  reconnectionAttempts: Infinity,\n  reconnectionDelay: 2000,\n});\n\nwebSocket.on(\"connect\", () => {\n  console.log(\"[worker] connected to job-manager\");\n  webSocket.emit(\"register:worker\", { workerId: C.WORKER_ID });\n});\n\nwebSocket.on(\"job:cancel\", async ({ jobId, workerId }: JobCancelPayload) => {\n  await cancelProcess(jobId);\n  console.log(\"job:canceled\", jobId);\n  webSocket.emit(\"job:canceled\", { jobId, workerId, success: true });\n});\n\nwebSocket.on(\"disconnect\", () => {\n  console.log(\"[worker] disconnected from job-manager, Trying to reconnect\");\n});\n"
      }
    },
    {
      "file_path": "job-worker/src/types/index.ts",
      "relative_path": "job-worker/src/types/index.ts",
      "language": "typescript",
      "imports": [],
      "exports": [],
      "classes": [],
      "functions": [],
      "variables": [],
      "description": "Type definitions providing 0 interfaces and type declarations",
      "lines_of_code": 5,
      "metadata": {
        "size_bytes": 73,
        "last_modified": "2025-10-07T19:50:38.746Z"
      },
      "analysis_enhanced": {
        "complexity_score": 0,
        "detected_issues": [],
        "semantic_tags": [
          "typescript",
          "background-jobs"
        ],
        "priority": "low",
        "summary_type": "rule-based",
        "code_snippet": "export type JobCancelPayload = {\n  jobId: string;\n  workerId: string;\n};\n",
        "full_content": "export type JobCancelPayload = {\n  jobId: string;\n  workerId: string;\n};\n"
      }
    },
    {
      "file_path": "job-worker/src/utils/constants.ts",
      "relative_path": "job-worker/src/utils/constants.ts",
      "language": "typescript",
      "imports": [],
      "exports": [],
      "classes": [],
      "functions": [],
      "variables": [
        "constants"
      ],
      "description": "Utility module with 0 helper functions and 0 exports",
      "lines_of_code": 10,
      "metadata": {
        "size_bytes": 241,
        "last_modified": "2025-10-07T19:50:38.746Z"
      },
      "analysis_enhanced": {
        "complexity_score": 0,
        "detected_issues": [],
        "semantic_tags": [
          "typescript",
          "utility",
          "background-jobs"
        ],
        "priority": "low",
        "summary_type": "rule-based",
        "code_snippet": "export const constants = {\n  SALT: 10,\n  JOB_QUEUE_KEY: \"queue:job\",\n  JOB_QUEUE_KEY_RETRY: \"queue:job:retry\",\n  MAX_RETRIES: 3,\n  RACE_CONDITION_TIMEOUT: 1000 * 60 * 10, // 10 minutes\n  MAX_CONCURRENCY: 10,\n  WORKER_ID: \"job-worker:id\",\n};\n",
        "full_content": "export const constants = {\n  SALT: 10,\n  JOB_QUEUE_KEY: \"queue:job\",\n  JOB_QUEUE_KEY_RETRY: \"queue:job:retry\",\n  MAX_RETRIES: 3,\n  RACE_CONDITION_TIMEOUT: 1000 * 60 * 10, // 10 minutes\n  MAX_CONCURRENCY: 10,\n  WORKER_ID: \"job-worker:id\",\n};\n"
      }
    },
    {
      "file_path": "job-worker/src/utils/helper.ts",
      "relative_path": "job-worker/src/utils/helper.ts",
      "language": "typescript",
      "imports": [
        "@prisma/client",
        "@src/config/db",
        "@src/utils/constants",
        "child_process",
        "socket.io-client"
      ],
      "exports": [
        "getBackoffDelay"
      ],
      "classes": [],
      "functions": [
        {
          "name": "getBackoffDelay",
          "parameters": [
            "retry"
          ],
          "returnType": "number",
          "isAsync": false,
          "isExported": true
        }
      ],
      "variables": [
        "terminateOnRaceCondition",
        "killTimeout"
      ],
      "description": "Utility module with 1 helper functions and 1 exports",
      "lines_of_code": 53,
      "metadata": {
        "size_bytes": 1422,
        "last_modified": "2025-10-07T19:50:38.746Z"
      },
      "analysis_enhanced": {
        "complexity_score": 5,
        "detected_issues": [
          {
            "type": "maintainability",
            "severity": "low",
            "description": "Console.log statements should be removed from production code",
            "category": "debug-code"
          }
        ],
        "semantic_tags": [
          "typescript",
          "utility",
          "prisma",
          "background-jobs"
        ],
        "priority": "low",
        "summary_type": "rule-based",
        "code_snippet": "import { type Job } from \"@prisma/client\";\nimport prisma from \"@src/config/db\";\nimport { constants as C } from \"@src/utils/constants\";\nimport { ChildProcess } from \"child_process\";\nimport { Socket } from \"socket.io-client\";\n\nexport function getBackoffDelay(retry: number): number {\n  return [5000, 10000, 20000][retry] || 30000; // 5s, 10s, 20s\n}\n\nexport const terminateOnRaceCondition = async (\n  proc: ChildProcess,\n  jobId: string,\n  workerSocket: Socket\n) => {\n  setTimeout(async () => {\n    if (proc.killed) return;\n\n    const job = await prisma.job.findFirst({ where: { id: jobId } });\n    if (job && job.status === \"PENDING\") {\n      await prisma.job.update({\n        where: { id: jobId },\n        data: { status: \"FAILED\" },\n      });\n      workerSocket.emit(\"job:done\", {\n        jobId,\n        exitCode: 1,\n      });\n    }\n    console.log(`❌ Race condition detected. Killing process.`);\n    proc.kill(\"SIGTERM\");\n  }, C.RACE_CONDITION_TIMEOUT); // 5 minutes\n};\n\nexport const killTimeout = (proc: ChildProcess, jobId: string, job: Job, workerSocket: Socket) => {\n  setTimeout(async () => {\n    if (proc.killed) return;\n\n    console.log(\"❌ Timed out. Killing process.\");\n    await prisma.job.update({\n      where: { id: jobId },\n      data: {\n        status: \"FAILED\",\n      },\n    });\n    workerSocket.emit(\"job:done\", {\n      jobId,\n      exitCode: 1,\n    });\n    proc.kill(\"SIGTERM\");\n  }, job.timeout);\n};\n",
        "full_content": "import { type Job } from \"@prisma/client\";\nimport prisma from \"@src/config/db\";\nimport { constants as C } from \"@src/utils/constants\";\nimport { ChildProcess } from \"child_process\";\nimport { Socket } from \"socket.io-client\";\n\nexport function getBackoffDelay(retry: number): number {\n  return [5000, 10000, 20000][retry] || 30000; // 5s, 10s, 20s\n}\n\nexport const terminateOnRaceCondition = async (\n  proc: ChildProcess,\n  jobId: string,\n  workerSocket: Socket\n) => {\n  setTimeout(async () => {\n    if (proc.killed) return;\n\n    const job = await prisma.job.findFirst({ where: { id: jobId } });\n    if (job && job.status === \"PENDING\") {\n      await prisma.job.update({\n        where: { id: jobId },\n        data: { status: \"FAILED\" },\n      });\n      workerSocket.emit(\"job:done\", {\n        jobId,\n        exitCode: 1,\n      });\n    }\n    console.log(`❌ Race condition detected. Killing process.`);\n    proc.kill(\"SIGTERM\");\n  }, C.RACE_CONDITION_TIMEOUT); // 5 minutes\n};\n\nexport const killTimeout = (proc: ChildProcess, jobId: string, job: Job, workerSocket: Socket) => {\n  setTimeout(async () => {\n    if (proc.killed) return;\n\n    console.log(\"❌ Timed out. Killing process.\");\n    await prisma.job.update({\n      where: { id: jobId },\n      data: {\n        status: \"FAILED\",\n      },\n    });\n    workerSocket.emit(\"job:done\", {\n      jobId,\n      exitCode: 1,\n    });\n    proc.kill(\"SIGTERM\");\n  }, job.timeout);\n};\n"
      }
    },
    {
      "file_path": "job-worker/src/worker/job-queue-loop.ts",
      "relative_path": "job-worker/src/worker/job-queue-loop.ts",
      "language": "typescript",
      "imports": [
        "@src/libs/priority-queue",
        "@src/utils/constants",
        "@src/worker/process-job"
      ],
      "exports": [],
      "classes": [],
      "functions": [],
      "variables": [
        "MAX_CONCURRENCY",
        "runningJobs",
        "startJobQueueLoop"
      ],
      "description": "TypeScript file containing basic code structure and definitions",
      "lines_of_code": 32,
      "metadata": {
        "size_bytes": 801,
        "last_modified": "2025-10-07T19:50:38.746Z"
      },
      "analysis_enhanced": {
        "complexity_score": 2,
        "detected_issues": [
          {
            "type": "maintainability",
            "severity": "low",
            "description": "Console.log statements should be removed from production code",
            "category": "debug-code"
          }
        ],
        "semantic_tags": [
          "typescript",
          "background-jobs"
        ],
        "priority": "low",
        "summary_type": "rule-based",
        "code_snippet": "import { dequeueJob } from \"@src/libs/priority-queue\";\nimport { constants } from \"@src/utils/constants\";\nimport processJobs from \"@src/worker/process-job\";\n\nconst MAX_CONCURRENCY = constants.MAX_CONCURRENCY;\nlet runningJobs = 0;\n\nexport const startJobQueueLoop = async () => {\n  while (true) {\n    if (runningJobs >= MAX_CONCURRENCY) {\n      await new Promise((r) => setTimeout(r, 500));\n      continue;\n    }\n\n    const jobId = await dequeueJob();\n    if (!jobId) {\n      await new Promise((r) => setTimeout(r, 1000)); // idle wait\n      continue;\n    }\n\n    runningJobs++;\n    console.log(\"🛠️  Dequeued job:\", jobId);\n    processJobs(jobId)\n      .catch((err) => {\n        console.error(\"❌ Error processing job:\", err);\n      })\n      .finally(() => {\n        runningJobs--;\n      });\n  }\n};\n",
        "full_content": "import { dequeueJob } from \"@src/libs/priority-queue\";\nimport { constants } from \"@src/utils/constants\";\nimport processJobs from \"@src/worker/process-job\";\n\nconst MAX_CONCURRENCY = constants.MAX_CONCURRENCY;\nlet runningJobs = 0;\n\nexport const startJobQueueLoop = async () => {\n  while (true) {\n    if (runningJobs >= MAX_CONCURRENCY) {\n      await new Promise((r) => setTimeout(r, 500));\n      continue;\n    }\n\n    const jobId = await dequeueJob();\n    if (!jobId) {\n      await new Promise((r) => setTimeout(r, 1000)); // idle wait\n      continue;\n    }\n\n    runningJobs++;\n    console.log(\"🛠️  Dequeued job:\", jobId);\n    processJobs(jobId)\n      .catch((err) => {\n        console.error(\"❌ Error processing job:\", err);\n      })\n      .finally(() => {\n        runningJobs--;\n      });\n  }\n};\n"
      }
    },
    {
      "file_path": "job-worker/src/worker/process-job.test.ts",
      "relative_path": "job-worker/src/worker/process-job.test.ts",
      "language": "typescript",
      "imports": [
        "../config/db",
        "./process-job"
      ],
      "exports": [],
      "classes": [],
      "functions": [],
      "variables": [],
      "description": "Test suite with 0 test cases for validation and quality assurance",
      "lines_of_code": 55,
      "metadata": {
        "size_bytes": 1338,
        "last_modified": "2025-10-07T19:50:38.746Z"
      },
      "analysis_enhanced": {
        "complexity_score": 1,
        "detected_issues": [
          {
            "type": "maintainability",
            "severity": "low",
            "description": "Console.log statements should be removed from production code",
            "category": "debug-code"
          }
        ],
        "semantic_tags": [
          "typescript",
          "background-jobs"
        ],
        "needs_ai_summary": false,
        "priority": "low",
        "summary_type": "rule-based",
        "code_snippet": "import prisma from \"../config/db\";\nimport processJob from \"./process-job\";\n\ndescribe(\"Worker job locking\", () => {\n  let jobId: string;\n\n  beforeAll(async () => {\n    await prisma.job.deleteMany();\n    const user = await prisma.user.create({\n      data: {\n        name: \"Kaif\",\n        email: \"kaif@example.com\",\n        password: \"hashedpassword\", // assuming you're hashing this\n      },\n    });\n\n    const job = await prisma.job.create({\n      data: {\n        command: \"echo 'Hello from test'\",\n        status: \"PENDING\",\n        output: [],\n        retries: 0,\n        priority: 1,\n        params: [],\n        timeout: 10000,\n        userId: user.id,\n        updatedAt: new Date(),\n        createdAt: new Date(),\n        id: \"1001\",\n      },\n    });\n    jobId = job.id;\n  });\n\n  it(\"should be processed by only one worker\", async () => {\n    const processedBy: string[] = [];\n\n    const workerWrapper = async (workerName: string) => {\n      try {\n        const result = await processJob(jobId);\n        if (result) {\n          processedBy.push(workerName);\n        }\n      } catch (error) {\n        console.log(`${workerName} skipped job`);\n      }\n    };\n\n    await Promise.all([workerWrapper(\"worker-1\"), workerWrapper(\"worker-2\")]);\n\n    expect(processedBy.length).toBe(1);\n    console.log(\"Processed by:\", processedBy);\n  });\n});\n",
        "full_content": "import prisma from \"../config/db\";\nimport processJob from \"./process-job\";\n\ndescribe(\"Worker job locking\", () => {\n  let jobId: string;\n\n  beforeAll(async () => {\n    await prisma.job.deleteMany();\n    const user = await prisma.user.create({\n      data: {\n        name: \"Kaif\",\n        email: \"kaif@example.com\",\n        password: \"hashedpassword\", // assuming you're hashing this\n      },\n    });\n\n    const job = await prisma.job.create({\n      data: {\n        command: \"echo 'Hello from test'\",\n        status: \"PENDING\",\n        output: [],\n        retries: 0,\n        priority: 1,\n        params: [],\n        timeout: 10000,\n        userId: user.id,\n        updatedAt: new Date(),\n        createdAt: new Date(),\n        id: \"1001\",\n      },\n    });\n    jobId = job.id;\n  });\n\n  it(\"should be processed by only one worker\", async () => {\n    const processedBy: string[] = [];\n\n    const workerWrapper = async (workerName: string) => {\n      try {\n        const result = await processJob(jobId);\n        if (result) {\n          processedBy.push(workerName);\n        }\n      } catch (error) {\n        console.log(`${workerName} skipped job`);\n      }\n    };\n\n    await Promise.all([workerWrapper(\"worker-1\"), workerWrapper(\"worker-2\")]);\n\n    expect(processedBy.length).toBe(1);\n    console.log(\"Processed by:\", processedBy);\n  });\n});\n"
      }
    },
    {
      "file_path": "job-worker/src/worker/process-job.ts",
      "relative_path": "job-worker/src/worker/process-job.ts",
      "language": "typescript",
      "imports": [
        "@prisma/client",
        "../config/db",
        "@src/libs/priority-queue",
        "@src/libs/process-action",
        "@src/socket/job-worker.socket",
        "@src/utils/constants",
        "@src/utils/helper",
        "child_process",
        "fs",
        "path"
      ],
      "exports": [],
      "classes": [],
      "functions": [],
      "variables": [
        "usageInterval",
        "usageStats",
        "processJob"
      ],
      "description": "TypeScript file containing basic code structure and definitions",
      "lines_of_code": 173,
      "metadata": {
        "size_bytes": 5011,
        "last_modified": "2025-10-07T19:50:38.747Z"
      },
      "analysis_enhanced": {
        "complexity_score": 7,
        "detected_issues": [
          {
            "type": "maintainability",
            "severity": "low",
            "description": "Console.log statements should be removed from production code",
            "category": "debug-code"
          }
        ],
        "semantic_tags": [
          "typescript",
          "prisma",
          "background-jobs"
        ],
        "priority": "low",
        "summary_type": "rule-based",
        "code_snippet": "import { Prisma } from \"@prisma/client\";\nimport prisma from \"../config/db\";\nimport { enqueueJob } from \"@src/libs/priority-queue\";\nimport { RunningProcess } from \"@src/libs/process-action\";\nimport { webSocket as workerSocket } from \"@src/socket/job-worker.socket\";\nimport { constants as C } from \"@src/utils/constants\";\nimport { getBackoffDelay, killTimeout, terminateOnRaceCondition } from \"@src/utils/helper\";\nimport { spawn } from \"child_process\";\nimport fs from \"fs\";\nimport path from \"path\";\n\nlet usageInterval: NodeJS.Timeout;\nlet usageStats = {\n  cpu: 0,\n  memory: 0,\n};\n\nconst processJob = async (jobId: string): Promise<boolean | undefined> => {\n  const updatedJob = await prisma.job.updateMany({\n    where: {\n      id: jobId,\n      status: \"PENDING\", // Only update if status is PENDING\n    },\n    data: {\n      status: \"RUNNING\",\n      startedAt: new Date(),\n    },\n  });\n  console.log(\"updatedJob\", updatedJob.count);\n  // If no rows were updated, job was already taken by another worker\n  if (updatedJob.count === 0) {\n    console.log(\"❌ Skipping job, already taken by another worker\");\n    workerSocket.emit(\"job:done\", {\n      jobId,\n      exitCode: 0,\n    });\n    return false;\n  }\n  // if (updatedJob.count == 1) return true;\n\n  const job = await prisma.job.findUnique({ where: { id: jobId } });\n\n  if (!job) {\n    console.error(\"⚠️ Job not found after locking. Something’s wrong.\");\n    return false;\n  }\n  const output = job.output as Prisma.JsonArray;\n  const { command } = job;\n  const filePath = path.join(`/tmp`, `job-${jobId}.sh`);\n\n  fs.writeFileSync(filePath, command, { mode: 0o755 });\n  console.log(`🚀 Starting job ${jobId}: ${command}`);\n\n  const proc = spawn(\"bash\", [filePath, ...(job.params || [])]);\n  RunningProcess[jobId] = proc;\n  // Kill timeout and race condition on job timeout\n  killTimeout(proc, jobId, job, workerSocket);\n  terminateOnRaceCondition(proc, jobId, workerSocket);\n\n  // Stream stdout\n  proc.stdout.on(\"data\", async (data) => {\n    const timesta",
        "full_content": "import { Prisma } from \"@prisma/client\";\nimport prisma from \"../config/db\";\nimport { enqueueJob } from \"@src/libs/priority-queue\";\nimport { RunningProcess } from \"@src/libs/process-action\";\nimport { webSocket as workerSocket } from \"@src/socket/job-worker.socket\";\nimport { constants as C } from \"@src/utils/constants\";\nimport { getBackoffDelay, killTimeout, terminateOnRaceCondition } from \"@src/utils/helper\";\nimport { spawn } from \"child_process\";\nimport fs from \"fs\";\nimport path from \"path\";\n\nlet usageInterval: NodeJS.Timeout;\nlet usageStats = {\n  cpu: 0,\n  memory: 0,\n};\n\nconst processJob = async (jobId: string): Promise<boolean | undefined> => {\n  const updatedJob = await prisma.job.updateMany({\n    where: {\n      id: jobId,\n      status: \"PENDING\", // Only update if status is PENDING\n    },\n    data: {\n      status: \"RUNNING\",\n      startedAt: new Date(),\n    },\n  });\n  console.log(\"updatedJob\", updatedJob.count);\n  // If no rows were updated, job was already taken by another worker\n  if (updatedJob.count === 0) {\n    console.log(\"❌ Skipping job, already taken by another worker\");\n    workerSocket.emit(\"job:done\", {\n      jobId,\n      exitCode: 0,\n    });\n    return false;\n  }\n  // if (updatedJob.count == 1) return true;\n\n  const job = await prisma.job.findUnique({ where: { id: jobId } });\n\n  if (!job) {\n    console.error(\"⚠️ Job not found after locking. Something’s wrong.\");\n    return false;\n  }\n  const output = job.output as Prisma.JsonArray;\n  const { command } = job;\n  const filePath = path.join(`/tmp`, `job-${jobId}.sh`);\n\n  fs.writeFileSync(filePath, command, { mode: 0o755 });\n  console.log(`🚀 Starting job ${jobId}: ${command}`);\n\n  const proc = spawn(\"bash\", [filePath, ...(job.params || [])]);\n  RunningProcess[jobId] = proc;\n  // Kill timeout and race condition on job timeout\n  killTimeout(proc, jobId, job, workerSocket);\n  terminateOnRaceCondition(proc, jobId, workerSocket);\n\n  // Stream stdout\n  proc.stdout.on(\"data\", async (data) => {\n    const timestamp = new Date().toISOString();\n\n    console.log(`${timestamp} ==> [stdout][${jobId}]: ${data.toString()}`);\n    const log = { response: data.toString(), timestamp: timestamp, success: true };\n    output.push(log);\n    await prisma.job.update({\n      where: { id: jobId },\n      data: {\n        output: output,\n      },\n    });\n    workerSocket.emit(\"job:stream\", {\n      jobId,\n      output: log,\n      type: \"stdout\",\n      timestamp,\n    });\n  });\n\n  // Stream stderr\n  proc.stderr.on(\"data\", async (data) => {\n    const timestamp = new Date().toISOString();\n    const log = { response: data.toString(), timestamp: timestamp, success: false };\n    console.log(`${timestamp} ==> [stderr][${jobId}]: ${data.toString()}`);\n    output.push(log);\n    await prisma.job.update({\n      where: { id: jobId },\n      data: {\n        output: output,\n      },\n    });\n    workerSocket.emit(\"job:stream\", {\n      jobId,\n      output: log,\n      type: \"stderr\",\n      timestamp,\n    });\n  });\n\n  // Job done\n  proc.on(\"close\", async (exitCode) => {\n    fs.unlink(filePath, () => {});\n\n    if (exitCode !== 0) {\n      const job = await prisma.job.findUnique({ where: { id: jobId } });\n\n      if (job && job.retries < C.MAX_RETRIES) {\n        // Increment retries in DB\n        await prisma.job.update({\n          where: { id: jobId },\n          data: {\n            retries: { increment: 1 },\n            status: \"PENDING\",\n            cpuUsage: usageStats.cpu,\n            memoryUsage: usageStats.memory / 1024 / 1024, // converting memory Bytes to MB\n          },\n        });\n\n        console.log(`[Worker] Retrying job ${jobId} (attempt ${job.retries + 1})`);\n\n        // Delay and push to retry queue\n        setTimeout(() => {\n          enqueueJob(job, C.JOB_QUEUE_KEY_RETRY);\n        }, getBackoffDelay(job.retries)); // exponential\n      } else {\n        await prisma.job.update({\n          where: { id: jobId },\n          data: {\n            status: \"FAILED\",\n            cpuUsage: usageStats.cpu,\n            memoryUsage: usageStats.memory / 1024 / 1024,\n          }, // converting memory Bytes to MB\n        });\n      }\n    }\n\n    const endedAt = new Date();\n    const log = {\n      response: exitCode?.toString() || \"Unknown\",\n      timestamp: endedAt.toISOString(),\n      success: exitCode === 0,\n    };\n    console.log(`✅ Job ${jobId} finished with code ${exitCode}`);\n    output.push(log);\n    await prisma.job.update({\n      where: { id: jobId },\n      data: {\n        status: exitCode === 0 ? \"SUCCESS\" : \"FAILED\",\n        exitCode,\n        endedAt,\n        output: output,\n        cpuUsage: usageStats.cpu,\n        memoryUsage: usageStats.memory / 1024 / 1024, // converting memory Bytes to MB\n      },\n    });\n\n    workerSocket.emit(\"job:done\", {\n      jobId,\n      exitCode,\n    });\n  });\n\n  proc.on(\"error\", (err) => {\n    console.error(`❌ Job ${jobId} process failed:`, err);\n    fs.unlink(filePath, () => {});\n  });\n\n  if (updatedJob.count == 1) return true;\n};\n\nexport default processJob;\n"
      }
    },
    {
      "file_path": "job-worker/src/worker/retry-loop.ts",
      "relative_path": "job-worker/src/worker/retry-loop.ts",
      "language": "typescript",
      "imports": [
        "@src/config/db",
        "@src/libs/priority-queue",
        "@src/utils/constants",
        "./process-job"
      ],
      "exports": [],
      "classes": [],
      "functions": [],
      "variables": [
        "startRetryLoop",
        "pushPendingJobToRetry"
      ],
      "description": "TypeScript file containing basic code structure and definitions",
      "lines_of_code": 29,
      "metadata": {
        "size_bytes": 914,
        "last_modified": "2025-10-07T19:50:38.747Z"
      },
      "analysis_enhanced": {
        "complexity_score": 2,
        "detected_issues": [
          {
            "type": "maintainability",
            "severity": "low",
            "description": "Console.log statements should be removed from production code",
            "category": "debug-code"
          }
        ],
        "semantic_tags": [
          "typescript",
          "background-jobs"
        ],
        "priority": "low",
        "summary_type": "rule-based",
        "code_snippet": "import prisma from \"@src/config/db\";\nimport { dequeueJob, enqueueJob } from \"@src/libs/priority-queue\";\nimport { constants } from \"@src/utils/constants\";\nimport processJob from \"./process-job\";\n\nexport const startRetryLoop = () => {\n  setInterval(async () => {\n    const jobId = await dequeueJob(constants.JOB_QUEUE_KEY_RETRY);\n    if (!jobId) return;\n\n    await processJob(jobId);\n  }, 1000 * 60 * 20); // Poll retry queue every 20 min\n};\n\nexport const pushPendingJobToRetry = async () => {\n  setInterval(async () => {\n    const job = await prisma.job.findMany({\n      where: { status: { in: [\"PENDING\", \"RUNNING\"] } },\n      orderBy: { createdAt: \"asc\" },\n    });\n    if (job.length === 0) return;\n\n    job.forEach(async (job) => {\n      await enqueueJob(job, constants.JOB_QUEUE_KEY);\n    });\n    console.log(`[Retry] Pushed ${job.length} pending jobs to retry queue`);\n  }, 1000 * 60 * 20); // every 20 min\n};\n",
        "full_content": "import prisma from \"@src/config/db\";\nimport { dequeueJob, enqueueJob } from \"@src/libs/priority-queue\";\nimport { constants } from \"@src/utils/constants\";\nimport processJob from \"./process-job\";\n\nexport const startRetryLoop = () => {\n  setInterval(async () => {\n    const jobId = await dequeueJob(constants.JOB_QUEUE_KEY_RETRY);\n    if (!jobId) return;\n\n    await processJob(jobId);\n  }, 1000 * 60 * 20); // Poll retry queue every 20 min\n};\n\nexport const pushPendingJobToRetry = async () => {\n  setInterval(async () => {\n    const job = await prisma.job.findMany({\n      where: { status: { in: [\"PENDING\", \"RUNNING\"] } },\n      orderBy: { createdAt: \"asc\" },\n    });\n    if (job.length === 0) return;\n\n    job.forEach(async (job) => {\n      await enqueueJob(job, constants.JOB_QUEUE_KEY);\n    });\n    console.log(`[Retry] Pushed ${job.length} pending jobs to retry queue`);\n  }, 1000 * 60 * 20); // every 20 min\n};\n"
      }
    },
    {
      "file_path": "job-worker/tsconfig.json",
      "relative_path": "job-worker/tsconfig.json",
      "language": "json",
      "imports": [],
      "exports": [],
      "classes": [],
      "functions": [],
      "variables": [],
      "description": "JSON configuration or data file",
      "lines_of_code": 21,
      "metadata": {
        "size_bytes": 441,
        "last_modified": "2025-10-07T19:50:38.747Z"
      },
      "analysis_enhanced": {
        "complexity_score": 0,
        "detected_issues": [],
        "semantic_tags": [
          "json"
        ],
        "needs_ai_summary": false,
        "priority": "low",
        "summary_type": "rule-based",
        "code_snippet": "{\n  \"compilerOptions\": {\n    \"target\": \"ES2020\",\n    \"module\": \"CommonJS\",\n    \"rootDir\": \"./src\",\n    \"outDir\": \"./dist\",\n    \"moduleResolution\": \"node\",\n    \"baseUrl\": \".\",\n    \"paths\": {\n      \"@src/*\": [\"src/*\"]\n    },\n    \"esModuleInterop\": true,\n    \"resolveJsonModule\": true,\n    \"forceConsistentCasingInFileNames\": true,\n    \"strict\": true,\n    \"skipLibCheck\": true\n  },\n  \"include\": [\"src\"],\n  \"exclude\": [\"node_modules\", \"dist\"]\n}\n",
        "full_content": "{\n  \"compilerOptions\": {\n    \"target\": \"ES2020\",\n    \"module\": \"CommonJS\",\n    \"rootDir\": \"./src\",\n    \"outDir\": \"./dist\",\n    \"moduleResolution\": \"node\",\n    \"baseUrl\": \".\",\n    \"paths\": {\n      \"@src/*\": [\"src/*\"]\n    },\n    \"esModuleInterop\": true,\n    \"resolveJsonModule\": true,\n    \"forceConsistentCasingInFileNames\": true,\n    \"strict\": true,\n    \"skipLibCheck\": true\n  },\n  \"include\": [\"src\"],\n  \"exclude\": [\"node_modules\", \"dist\"]\n}\n"
      }
    }
  ]
}